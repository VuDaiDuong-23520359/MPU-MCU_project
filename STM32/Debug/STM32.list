
STM32.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000068d8  08000188  08000188  00001188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00013840  08006a60  08006a60  00007a60  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0801a2a0  0801a2a0  0001c060  2**0
                  CONTENTS, READONLY
  4 .ARM          00000008  0801a2a0  0801a2a0  0001b2a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0801a2a8  0801a2a8  0001c060  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0801a2a8  0801a2a8  0001b2a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0801a2ac  0801a2ac  0001b2ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000060  20000000  0801a2b0  0001c000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0001c060  2**0
                  CONTENTS
 10 .bss          00004ebc  20000060  20000060  0001c060  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  20004f1c  20004f1c  0001c060  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  0001c060  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000e84e  00000000  00000000  0001c090  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00002370  00000000  00000000  0002a8de  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000d20  00000000  00000000  0002cc50  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000099a  00000000  00000000  0002d970  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000225c9  00000000  00000000  0002e30a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000f780  00000000  00000000  000508d3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000d7d0e  00000000  00000000  00060053  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      000000b3  00000000  00000000  00137d61  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00003904  00000000  00000000  00137e14  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000065  00000000  00000000  0013b718  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_loc    00002a79  00000000  00000000  0013b77d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_ranges 00000060  00000000  00000000  0013e1f6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	@ (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	@ (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	@ (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000060 	.word	0x20000060
 80001a4:	00000000 	.word	0x00000000
 80001a8:	08006a48 	.word	0x08006a48

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	@ (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	@ (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	@ (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000064 	.word	0x20000064
 80001c4:	08006a48 	.word	0x08006a48

080001c8 <arm_bitreversal_32>:
 80001c8:	1c4b      	adds	r3, r1, #1
 80001ca:	2b01      	cmp	r3, #1
 80001cc:	bf98      	it	ls
 80001ce:	4770      	bxls	lr
 80001d0:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 80001d4:	1c91      	adds	r1, r2, #2
 80001d6:	089b      	lsrs	r3, r3, #2

080001d8 <arm_bitreversal_32_0>:
 80001d8:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 80001dc:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 80001e0:	880a      	ldrh	r2, [r1, #0]
 80001e2:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 80001e6:	4480      	add	r8, r0
 80001e8:	4481      	add	r9, r0
 80001ea:	4402      	add	r2, r0
 80001ec:	4484      	add	ip, r0
 80001ee:	f8d9 7000 	ldr.w	r7, [r9]
 80001f2:	f8d8 6000 	ldr.w	r6, [r8]
 80001f6:	6815      	ldr	r5, [r2, #0]
 80001f8:	f8dc 4000 	ldr.w	r4, [ip]
 80001fc:	f8c9 6000 	str.w	r6, [r9]
 8000200:	f8c8 7000 	str.w	r7, [r8]
 8000204:	f8cc 5000 	str.w	r5, [ip]
 8000208:	6014      	str	r4, [r2, #0]
 800020a:	f8d9 7004 	ldr.w	r7, [r9, #4]
 800020e:	f8d8 6004 	ldr.w	r6, [r8, #4]
 8000212:	6855      	ldr	r5, [r2, #4]
 8000214:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8000218:	f8c9 6004 	str.w	r6, [r9, #4]
 800021c:	f8c8 7004 	str.w	r7, [r8, #4]
 8000220:	f8cc 5004 	str.w	r5, [ip, #4]
 8000224:	6054      	str	r4, [r2, #4]
 8000226:	3108      	adds	r1, #8
 8000228:	3b01      	subs	r3, #1
 800022a:	d1d5      	bne.n	80001d8 <arm_bitreversal_32_0>
 800022c:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 8000230:	4770      	bx	lr

08000232 <arm_bitreversal_16>:
 8000232:	1c4b      	adds	r3, r1, #1
 8000234:	2b01      	cmp	r3, #1
 8000236:	bf98      	it	ls
 8000238:	4770      	bxls	lr
 800023a:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 800023e:	1c91      	adds	r1, r2, #2
 8000240:	089b      	lsrs	r3, r3, #2

08000242 <arm_bitreversal_16_0>:
 8000242:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 8000246:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 800024a:	880a      	ldrh	r2, [r1, #0]
 800024c:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 8000250:	eb00 0858 	add.w	r8, r0, r8, lsr #1
 8000254:	eb00 0959 	add.w	r9, r0, r9, lsr #1
 8000258:	eb00 0252 	add.w	r2, r0, r2, lsr #1
 800025c:	eb00 0c5c 	add.w	ip, r0, ip, lsr #1
 8000260:	f8d9 7000 	ldr.w	r7, [r9]
 8000264:	f8d8 6000 	ldr.w	r6, [r8]
 8000268:	6815      	ldr	r5, [r2, #0]
 800026a:	f8dc 4000 	ldr.w	r4, [ip]
 800026e:	f8c9 6000 	str.w	r6, [r9]
 8000272:	f8c8 7000 	str.w	r7, [r8]
 8000276:	f8cc 5000 	str.w	r5, [ip]
 800027a:	6014      	str	r4, [r2, #0]
 800027c:	3108      	adds	r1, #8
 800027e:	3b01      	subs	r3, #1
 8000280:	d1df      	bne.n	8000242 <arm_bitreversal_16_0>
 8000282:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 8000286:	4770      	bx	lr

08000288 <__aeabi_uldivmod>:
 8000288:	b953      	cbnz	r3, 80002a0 <__aeabi_uldivmod+0x18>
 800028a:	b94a      	cbnz	r2, 80002a0 <__aeabi_uldivmod+0x18>
 800028c:	2900      	cmp	r1, #0
 800028e:	bf08      	it	eq
 8000290:	2800      	cmpeq	r0, #0
 8000292:	bf1c      	itt	ne
 8000294:	f04f 31ff 	movne.w	r1, #4294967295
 8000298:	f04f 30ff 	movne.w	r0, #4294967295
 800029c:	f000 b988 	b.w	80005b0 <__aeabi_idiv0>
 80002a0:	f1ad 0c08 	sub.w	ip, sp, #8
 80002a4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002a8:	f000 f806 	bl	80002b8 <__udivmoddi4>
 80002ac:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002b0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002b4:	b004      	add	sp, #16
 80002b6:	4770      	bx	lr

080002b8 <__udivmoddi4>:
 80002b8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002bc:	9d08      	ldr	r5, [sp, #32]
 80002be:	468e      	mov	lr, r1
 80002c0:	4604      	mov	r4, r0
 80002c2:	4688      	mov	r8, r1
 80002c4:	2b00      	cmp	r3, #0
 80002c6:	d14a      	bne.n	800035e <__udivmoddi4+0xa6>
 80002c8:	428a      	cmp	r2, r1
 80002ca:	4617      	mov	r7, r2
 80002cc:	d962      	bls.n	8000394 <__udivmoddi4+0xdc>
 80002ce:	fab2 f682 	clz	r6, r2
 80002d2:	b14e      	cbz	r6, 80002e8 <__udivmoddi4+0x30>
 80002d4:	f1c6 0320 	rsb	r3, r6, #32
 80002d8:	fa01 f806 	lsl.w	r8, r1, r6
 80002dc:	fa20 f303 	lsr.w	r3, r0, r3
 80002e0:	40b7      	lsls	r7, r6
 80002e2:	ea43 0808 	orr.w	r8, r3, r8
 80002e6:	40b4      	lsls	r4, r6
 80002e8:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 80002ec:	fa1f fc87 	uxth.w	ip, r7
 80002f0:	fbb8 f1fe 	udiv	r1, r8, lr
 80002f4:	0c23      	lsrs	r3, r4, #16
 80002f6:	fb0e 8811 	mls	r8, lr, r1, r8
 80002fa:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 80002fe:	fb01 f20c 	mul.w	r2, r1, ip
 8000302:	429a      	cmp	r2, r3
 8000304:	d909      	bls.n	800031a <__udivmoddi4+0x62>
 8000306:	18fb      	adds	r3, r7, r3
 8000308:	f101 30ff 	add.w	r0, r1, #4294967295
 800030c:	f080 80ea 	bcs.w	80004e4 <__udivmoddi4+0x22c>
 8000310:	429a      	cmp	r2, r3
 8000312:	f240 80e7 	bls.w	80004e4 <__udivmoddi4+0x22c>
 8000316:	3902      	subs	r1, #2
 8000318:	443b      	add	r3, r7
 800031a:	1a9a      	subs	r2, r3, r2
 800031c:	b2a3      	uxth	r3, r4
 800031e:	fbb2 f0fe 	udiv	r0, r2, lr
 8000322:	fb0e 2210 	mls	r2, lr, r0, r2
 8000326:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800032a:	fb00 fc0c 	mul.w	ip, r0, ip
 800032e:	459c      	cmp	ip, r3
 8000330:	d909      	bls.n	8000346 <__udivmoddi4+0x8e>
 8000332:	18fb      	adds	r3, r7, r3
 8000334:	f100 32ff 	add.w	r2, r0, #4294967295
 8000338:	f080 80d6 	bcs.w	80004e8 <__udivmoddi4+0x230>
 800033c:	459c      	cmp	ip, r3
 800033e:	f240 80d3 	bls.w	80004e8 <__udivmoddi4+0x230>
 8000342:	443b      	add	r3, r7
 8000344:	3802      	subs	r0, #2
 8000346:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 800034a:	eba3 030c 	sub.w	r3, r3, ip
 800034e:	2100      	movs	r1, #0
 8000350:	b11d      	cbz	r5, 800035a <__udivmoddi4+0xa2>
 8000352:	40f3      	lsrs	r3, r6
 8000354:	2200      	movs	r2, #0
 8000356:	e9c5 3200 	strd	r3, r2, [r5]
 800035a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800035e:	428b      	cmp	r3, r1
 8000360:	d905      	bls.n	800036e <__udivmoddi4+0xb6>
 8000362:	b10d      	cbz	r5, 8000368 <__udivmoddi4+0xb0>
 8000364:	e9c5 0100 	strd	r0, r1, [r5]
 8000368:	2100      	movs	r1, #0
 800036a:	4608      	mov	r0, r1
 800036c:	e7f5      	b.n	800035a <__udivmoddi4+0xa2>
 800036e:	fab3 f183 	clz	r1, r3
 8000372:	2900      	cmp	r1, #0
 8000374:	d146      	bne.n	8000404 <__udivmoddi4+0x14c>
 8000376:	4573      	cmp	r3, lr
 8000378:	d302      	bcc.n	8000380 <__udivmoddi4+0xc8>
 800037a:	4282      	cmp	r2, r0
 800037c:	f200 8105 	bhi.w	800058a <__udivmoddi4+0x2d2>
 8000380:	1a84      	subs	r4, r0, r2
 8000382:	eb6e 0203 	sbc.w	r2, lr, r3
 8000386:	2001      	movs	r0, #1
 8000388:	4690      	mov	r8, r2
 800038a:	2d00      	cmp	r5, #0
 800038c:	d0e5      	beq.n	800035a <__udivmoddi4+0xa2>
 800038e:	e9c5 4800 	strd	r4, r8, [r5]
 8000392:	e7e2      	b.n	800035a <__udivmoddi4+0xa2>
 8000394:	2a00      	cmp	r2, #0
 8000396:	f000 8090 	beq.w	80004ba <__udivmoddi4+0x202>
 800039a:	fab2 f682 	clz	r6, r2
 800039e:	2e00      	cmp	r6, #0
 80003a0:	f040 80a4 	bne.w	80004ec <__udivmoddi4+0x234>
 80003a4:	1a8a      	subs	r2, r1, r2
 80003a6:	0c03      	lsrs	r3, r0, #16
 80003a8:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 80003ac:	b280      	uxth	r0, r0
 80003ae:	b2bc      	uxth	r4, r7
 80003b0:	2101      	movs	r1, #1
 80003b2:	fbb2 fcfe 	udiv	ip, r2, lr
 80003b6:	fb0e 221c 	mls	r2, lr, ip, r2
 80003ba:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80003be:	fb04 f20c 	mul.w	r2, r4, ip
 80003c2:	429a      	cmp	r2, r3
 80003c4:	d907      	bls.n	80003d6 <__udivmoddi4+0x11e>
 80003c6:	18fb      	adds	r3, r7, r3
 80003c8:	f10c 38ff 	add.w	r8, ip, #4294967295
 80003cc:	d202      	bcs.n	80003d4 <__udivmoddi4+0x11c>
 80003ce:	429a      	cmp	r2, r3
 80003d0:	f200 80e0 	bhi.w	8000594 <__udivmoddi4+0x2dc>
 80003d4:	46c4      	mov	ip, r8
 80003d6:	1a9b      	subs	r3, r3, r2
 80003d8:	fbb3 f2fe 	udiv	r2, r3, lr
 80003dc:	fb0e 3312 	mls	r3, lr, r2, r3
 80003e0:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
 80003e4:	fb02 f404 	mul.w	r4, r2, r4
 80003e8:	429c      	cmp	r4, r3
 80003ea:	d907      	bls.n	80003fc <__udivmoddi4+0x144>
 80003ec:	18fb      	adds	r3, r7, r3
 80003ee:	f102 30ff 	add.w	r0, r2, #4294967295
 80003f2:	d202      	bcs.n	80003fa <__udivmoddi4+0x142>
 80003f4:	429c      	cmp	r4, r3
 80003f6:	f200 80ca 	bhi.w	800058e <__udivmoddi4+0x2d6>
 80003fa:	4602      	mov	r2, r0
 80003fc:	1b1b      	subs	r3, r3, r4
 80003fe:	ea42 400c 	orr.w	r0, r2, ip, lsl #16
 8000402:	e7a5      	b.n	8000350 <__udivmoddi4+0x98>
 8000404:	f1c1 0620 	rsb	r6, r1, #32
 8000408:	408b      	lsls	r3, r1
 800040a:	fa22 f706 	lsr.w	r7, r2, r6
 800040e:	431f      	orrs	r7, r3
 8000410:	fa0e f401 	lsl.w	r4, lr, r1
 8000414:	fa20 f306 	lsr.w	r3, r0, r6
 8000418:	fa2e fe06 	lsr.w	lr, lr, r6
 800041c:	ea4f 4917 	mov.w	r9, r7, lsr #16
 8000420:	4323      	orrs	r3, r4
 8000422:	fa00 f801 	lsl.w	r8, r0, r1
 8000426:	fa1f fc87 	uxth.w	ip, r7
 800042a:	fbbe f0f9 	udiv	r0, lr, r9
 800042e:	0c1c      	lsrs	r4, r3, #16
 8000430:	fb09 ee10 	mls	lr, r9, r0, lr
 8000434:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
 8000438:	fb00 fe0c 	mul.w	lr, r0, ip
 800043c:	45a6      	cmp	lr, r4
 800043e:	fa02 f201 	lsl.w	r2, r2, r1
 8000442:	d909      	bls.n	8000458 <__udivmoddi4+0x1a0>
 8000444:	193c      	adds	r4, r7, r4
 8000446:	f100 3aff 	add.w	sl, r0, #4294967295
 800044a:	f080 809c 	bcs.w	8000586 <__udivmoddi4+0x2ce>
 800044e:	45a6      	cmp	lr, r4
 8000450:	f240 8099 	bls.w	8000586 <__udivmoddi4+0x2ce>
 8000454:	3802      	subs	r0, #2
 8000456:	443c      	add	r4, r7
 8000458:	eba4 040e 	sub.w	r4, r4, lr
 800045c:	fa1f fe83 	uxth.w	lr, r3
 8000460:	fbb4 f3f9 	udiv	r3, r4, r9
 8000464:	fb09 4413 	mls	r4, r9, r3, r4
 8000468:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
 800046c:	fb03 fc0c 	mul.w	ip, r3, ip
 8000470:	45a4      	cmp	ip, r4
 8000472:	d908      	bls.n	8000486 <__udivmoddi4+0x1ce>
 8000474:	193c      	adds	r4, r7, r4
 8000476:	f103 3eff 	add.w	lr, r3, #4294967295
 800047a:	f080 8082 	bcs.w	8000582 <__udivmoddi4+0x2ca>
 800047e:	45a4      	cmp	ip, r4
 8000480:	d97f      	bls.n	8000582 <__udivmoddi4+0x2ca>
 8000482:	3b02      	subs	r3, #2
 8000484:	443c      	add	r4, r7
 8000486:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 800048a:	eba4 040c 	sub.w	r4, r4, ip
 800048e:	fba0 ec02 	umull	lr, ip, r0, r2
 8000492:	4564      	cmp	r4, ip
 8000494:	4673      	mov	r3, lr
 8000496:	46e1      	mov	r9, ip
 8000498:	d362      	bcc.n	8000560 <__udivmoddi4+0x2a8>
 800049a:	d05f      	beq.n	800055c <__udivmoddi4+0x2a4>
 800049c:	b15d      	cbz	r5, 80004b6 <__udivmoddi4+0x1fe>
 800049e:	ebb8 0203 	subs.w	r2, r8, r3
 80004a2:	eb64 0409 	sbc.w	r4, r4, r9
 80004a6:	fa04 f606 	lsl.w	r6, r4, r6
 80004aa:	fa22 f301 	lsr.w	r3, r2, r1
 80004ae:	431e      	orrs	r6, r3
 80004b0:	40cc      	lsrs	r4, r1
 80004b2:	e9c5 6400 	strd	r6, r4, [r5]
 80004b6:	2100      	movs	r1, #0
 80004b8:	e74f      	b.n	800035a <__udivmoddi4+0xa2>
 80004ba:	fbb1 fcf2 	udiv	ip, r1, r2
 80004be:	0c01      	lsrs	r1, r0, #16
 80004c0:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
 80004c4:	b280      	uxth	r0, r0
 80004c6:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
 80004ca:	463b      	mov	r3, r7
 80004cc:	4638      	mov	r0, r7
 80004ce:	463c      	mov	r4, r7
 80004d0:	46b8      	mov	r8, r7
 80004d2:	46be      	mov	lr, r7
 80004d4:	2620      	movs	r6, #32
 80004d6:	fbb1 f1f7 	udiv	r1, r1, r7
 80004da:	eba2 0208 	sub.w	r2, r2, r8
 80004de:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
 80004e2:	e766      	b.n	80003b2 <__udivmoddi4+0xfa>
 80004e4:	4601      	mov	r1, r0
 80004e6:	e718      	b.n	800031a <__udivmoddi4+0x62>
 80004e8:	4610      	mov	r0, r2
 80004ea:	e72c      	b.n	8000346 <__udivmoddi4+0x8e>
 80004ec:	f1c6 0220 	rsb	r2, r6, #32
 80004f0:	fa2e f302 	lsr.w	r3, lr, r2
 80004f4:	40b7      	lsls	r7, r6
 80004f6:	40b1      	lsls	r1, r6
 80004f8:	fa20 f202 	lsr.w	r2, r0, r2
 80004fc:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000500:	430a      	orrs	r2, r1
 8000502:	fbb3 f8fe 	udiv	r8, r3, lr
 8000506:	b2bc      	uxth	r4, r7
 8000508:	fb0e 3318 	mls	r3, lr, r8, r3
 800050c:	0c11      	lsrs	r1, r2, #16
 800050e:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000512:	fb08 f904 	mul.w	r9, r8, r4
 8000516:	40b0      	lsls	r0, r6
 8000518:	4589      	cmp	r9, r1
 800051a:	ea4f 4310 	mov.w	r3, r0, lsr #16
 800051e:	b280      	uxth	r0, r0
 8000520:	d93e      	bls.n	80005a0 <__udivmoddi4+0x2e8>
 8000522:	1879      	adds	r1, r7, r1
 8000524:	f108 3cff 	add.w	ip, r8, #4294967295
 8000528:	d201      	bcs.n	800052e <__udivmoddi4+0x276>
 800052a:	4589      	cmp	r9, r1
 800052c:	d81f      	bhi.n	800056e <__udivmoddi4+0x2b6>
 800052e:	eba1 0109 	sub.w	r1, r1, r9
 8000532:	fbb1 f9fe 	udiv	r9, r1, lr
 8000536:	fb09 f804 	mul.w	r8, r9, r4
 800053a:	fb0e 1119 	mls	r1, lr, r9, r1
 800053e:	b292      	uxth	r2, r2
 8000540:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000544:	4542      	cmp	r2, r8
 8000546:	d229      	bcs.n	800059c <__udivmoddi4+0x2e4>
 8000548:	18ba      	adds	r2, r7, r2
 800054a:	f109 31ff 	add.w	r1, r9, #4294967295
 800054e:	d2c4      	bcs.n	80004da <__udivmoddi4+0x222>
 8000550:	4542      	cmp	r2, r8
 8000552:	d2c2      	bcs.n	80004da <__udivmoddi4+0x222>
 8000554:	f1a9 0102 	sub.w	r1, r9, #2
 8000558:	443a      	add	r2, r7
 800055a:	e7be      	b.n	80004da <__udivmoddi4+0x222>
 800055c:	45f0      	cmp	r8, lr
 800055e:	d29d      	bcs.n	800049c <__udivmoddi4+0x1e4>
 8000560:	ebbe 0302 	subs.w	r3, lr, r2
 8000564:	eb6c 0c07 	sbc.w	ip, ip, r7
 8000568:	3801      	subs	r0, #1
 800056a:	46e1      	mov	r9, ip
 800056c:	e796      	b.n	800049c <__udivmoddi4+0x1e4>
 800056e:	eba7 0909 	sub.w	r9, r7, r9
 8000572:	4449      	add	r1, r9
 8000574:	f1a8 0c02 	sub.w	ip, r8, #2
 8000578:	fbb1 f9fe 	udiv	r9, r1, lr
 800057c:	fb09 f804 	mul.w	r8, r9, r4
 8000580:	e7db      	b.n	800053a <__udivmoddi4+0x282>
 8000582:	4673      	mov	r3, lr
 8000584:	e77f      	b.n	8000486 <__udivmoddi4+0x1ce>
 8000586:	4650      	mov	r0, sl
 8000588:	e766      	b.n	8000458 <__udivmoddi4+0x1a0>
 800058a:	4608      	mov	r0, r1
 800058c:	e6fd      	b.n	800038a <__udivmoddi4+0xd2>
 800058e:	443b      	add	r3, r7
 8000590:	3a02      	subs	r2, #2
 8000592:	e733      	b.n	80003fc <__udivmoddi4+0x144>
 8000594:	f1ac 0c02 	sub.w	ip, ip, #2
 8000598:	443b      	add	r3, r7
 800059a:	e71c      	b.n	80003d6 <__udivmoddi4+0x11e>
 800059c:	4649      	mov	r1, r9
 800059e:	e79c      	b.n	80004da <__udivmoddi4+0x222>
 80005a0:	eba1 0109 	sub.w	r1, r1, r9
 80005a4:	46c4      	mov	ip, r8
 80005a6:	fbb1 f9fe 	udiv	r9, r1, lr
 80005aa:	fb09 f804 	mul.w	r8, r9, r4
 80005ae:	e7c4      	b.n	800053a <__udivmoddi4+0x282>

080005b0 <__aeabi_idiv0>:
 80005b0:	4770      	bx	lr
 80005b2:	bf00      	nop

080005b4 <calculate_middle_point>:

/**
 * @brief  Calibrate the “middle” ADC value by averaging 32 raw readings.
 *         This helps remove DC offset from a mic or line‐in source.
 */
void calculate_middle_point(void) {
 80005b4:	b580      	push	{r7, lr}
 80005b6:	b082      	sub	sp, #8
 80005b8:	af00      	add	r7, sp, #0
    uint32_t sum = 0;
 80005ba:	2300      	movs	r3, #0
 80005bc:	607b      	str	r3, [r7, #4]
    for (int i = 0; i < 32; i++) {
 80005be:	2300      	movs	r3, #0
 80005c0:	603b      	str	r3, [r7, #0]
 80005c2:	e019      	b.n	80005f8 <calculate_middle_point+0x44>
        HAL_ADC_Start(&hadc1);
 80005c4:	4812      	ldr	r0, [pc, #72]	@ (8000610 <calculate_middle_point+0x5c>)
 80005c6:	f001 fbbb 	bl	8001d40 <HAL_ADC_Start>
        if (HAL_ADC_PollForConversion(&hadc1, 10) == HAL_OK) {
 80005ca:	210a      	movs	r1, #10
 80005cc:	4810      	ldr	r0, [pc, #64]	@ (8000610 <calculate_middle_point+0x5c>)
 80005ce:	f001 fcbc 	bl	8001f4a <HAL_ADC_PollForConversion>
 80005d2:	4603      	mov	r3, r0
 80005d4:	2b00      	cmp	r3, #0
 80005d6:	d106      	bne.n	80005e6 <calculate_middle_point+0x32>
            sum += HAL_ADC_GetValue(&hadc1);
 80005d8:	480d      	ldr	r0, [pc, #52]	@ (8000610 <calculate_middle_point+0x5c>)
 80005da:	f001 fe51 	bl	8002280 <HAL_ADC_GetValue>
 80005de:	4602      	mov	r2, r0
 80005e0:	687b      	ldr	r3, [r7, #4]
 80005e2:	4413      	add	r3, r2
 80005e4:	607b      	str	r3, [r7, #4]
        }
        HAL_ADC_Stop(&hadc1);
 80005e6:	480a      	ldr	r0, [pc, #40]	@ (8000610 <calculate_middle_point+0x5c>)
 80005e8:	f001 fc7c 	bl	8001ee4 <HAL_ADC_Stop>
        HAL_Delay(1);
 80005ec:	2001      	movs	r0, #1
 80005ee:	f001 fb3f 	bl	8001c70 <HAL_Delay>
    for (int i = 0; i < 32; i++) {
 80005f2:	683b      	ldr	r3, [r7, #0]
 80005f4:	3301      	adds	r3, #1
 80005f6:	603b      	str	r3, [r7, #0]
 80005f8:	683b      	ldr	r3, [r7, #0]
 80005fa:	2b1f      	cmp	r3, #31
 80005fc:	dde2      	ble.n	80005c4 <calculate_middle_point+0x10>
    }
    middle_point = (uint16_t)(sum / 32);
 80005fe:	687b      	ldr	r3, [r7, #4]
 8000600:	095b      	lsrs	r3, r3, #5
 8000602:	b29a      	uxth	r2, r3
 8000604:	4b03      	ldr	r3, [pc, #12]	@ (8000614 <calculate_middle_point+0x60>)
 8000606:	801a      	strh	r2, [r3, #0]
}
 8000608:	bf00      	nop
 800060a:	3708      	adds	r7, #8
 800060c:	46bd      	mov	sp, r7
 800060e:	bd80      	pop	{r7, pc}
 8000610:	2000007c 	.word	0x2000007c
 8000614:	20000dac 	.word	0x20000dac

08000618 <get_amp>:

/**
 * @brief  Return |(raw ADC) - (middle_point)|, giving a crude amplitude reading.
 */
uint16_t get_amp(void) {
 8000618:	b580      	push	{r7, lr}
 800061a:	b082      	sub	sp, #8
 800061c:	af00      	add	r7, sp, #0
    uint16_t raw = HAL_ADC_GetValue(&hadc1);
 800061e:	4808      	ldr	r0, [pc, #32]	@ (8000640 <get_amp+0x28>)
 8000620:	f001 fe2e 	bl	8002280 <HAL_ADC_GetValue>
 8000624:	4603      	mov	r3, r0
 8000626:	80fb      	strh	r3, [r7, #6]
    return (uint16_t)abs((int)raw - (int)middle_point);
 8000628:	88fb      	ldrh	r3, [r7, #6]
 800062a:	4a06      	ldr	r2, [pc, #24]	@ (8000644 <get_amp+0x2c>)
 800062c:	8812      	ldrh	r2, [r2, #0]
 800062e:	1a9b      	subs	r3, r3, r2
 8000630:	2b00      	cmp	r3, #0
 8000632:	bfb8      	it	lt
 8000634:	425b      	neglt	r3, r3
 8000636:	b29b      	uxth	r3, r3
}
 8000638:	4618      	mov	r0, r3
 800063a:	3708      	adds	r7, #8
 800063c:	46bd      	mov	sp, r7
 800063e:	bd80      	pop	{r7, pc}
 8000640:	2000007c 	.word	0x2000007c
 8000644:	20000dac 	.word	0x20000dac

08000648 <HAL_TIM_PWM_PulseFinishedCallback>:

/**
 * @brief  Callback from TIM1's DMA completion: signaled when all pwmData[] frames
 *         have been sent to WS2812.
 */
void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim) {
 8000648:	b580      	push	{r7, lr}
 800064a:	b082      	sub	sp, #8
 800064c:	af00      	add	r7, sp, #0
 800064e:	6078      	str	r0, [r7, #4]
    if (htim == &htim1) {
 8000650:	687b      	ldr	r3, [r7, #4]
 8000652:	4a07      	ldr	r2, [pc, #28]	@ (8000670 <HAL_TIM_PWM_PulseFinishedCallback+0x28>)
 8000654:	4293      	cmp	r3, r2
 8000656:	d106      	bne.n	8000666 <HAL_TIM_PWM_PulseFinishedCallback+0x1e>
        HAL_TIM_PWM_Stop_DMA(&htim1, TIM_CHANNEL_1);
 8000658:	2100      	movs	r1, #0
 800065a:	4805      	ldr	r0, [pc, #20]	@ (8000670 <HAL_TIM_PWM_PulseFinishedCallback+0x28>)
 800065c:	f003 fd78 	bl	8004150 <HAL_TIM_PWM_Stop_DMA>
        datasentflag = 1;
 8000660:	4b04      	ldr	r3, [pc, #16]	@ (8000674 <HAL_TIM_PWM_PulseFinishedCallback+0x2c>)
 8000662:	2201      	movs	r2, #1
 8000664:	601a      	str	r2, [r3, #0]
    }
}
 8000666:	bf00      	nop
 8000668:	3708      	adds	r7, #8
 800066a:	46bd      	mov	sp, r7
 800066c:	bd80      	pop	{r7, pc}
 800066e:	bf00      	nop
 8000670:	200000c4 	.word	0x200000c4
 8000674:	20000324 	.word	0x20000324

08000678 <Set_LED>:
/**
 * @brief  Prepare one LED's data (GRB order) into LED_Data[][].
 * @param  LEDnum: 0..MAX_LED-1
 * @param  Red, Green, Blue: 0..255
 */
void Set_LED(int LEDnum, int Red, int Green, int Blue) {
 8000678:	b480      	push	{r7}
 800067a:	b085      	sub	sp, #20
 800067c:	af00      	add	r7, sp, #0
 800067e:	60f8      	str	r0, [r7, #12]
 8000680:	60b9      	str	r1, [r7, #8]
 8000682:	607a      	str	r2, [r7, #4]
 8000684:	603b      	str	r3, [r7, #0]
    LED_Data[LEDnum][0] = LEDnum;    // index byte (ignored by WS2812 logic but kept for safety)
 8000686:	68fb      	ldr	r3, [r7, #12]
 8000688:	b2d9      	uxtb	r1, r3
 800068a:	4a11      	ldr	r2, [pc, #68]	@ (80006d0 <Set_LED+0x58>)
 800068c:	68fb      	ldr	r3, [r7, #12]
 800068e:	f802 1023 	strb.w	r1, [r2, r3, lsl #2]
    LED_Data[LEDnum][1] = Green;     // GRB order
 8000692:	687b      	ldr	r3, [r7, #4]
 8000694:	b2d9      	uxtb	r1, r3
 8000696:	4a0e      	ldr	r2, [pc, #56]	@ (80006d0 <Set_LED+0x58>)
 8000698:	68fb      	ldr	r3, [r7, #12]
 800069a:	009b      	lsls	r3, r3, #2
 800069c:	4413      	add	r3, r2
 800069e:	460a      	mov	r2, r1
 80006a0:	705a      	strb	r2, [r3, #1]
    LED_Data[LEDnum][2] = Red;
 80006a2:	68bb      	ldr	r3, [r7, #8]
 80006a4:	b2d9      	uxtb	r1, r3
 80006a6:	4a0a      	ldr	r2, [pc, #40]	@ (80006d0 <Set_LED+0x58>)
 80006a8:	68fb      	ldr	r3, [r7, #12]
 80006aa:	009b      	lsls	r3, r3, #2
 80006ac:	4413      	add	r3, r2
 80006ae:	460a      	mov	r2, r1
 80006b0:	709a      	strb	r2, [r3, #2]
    LED_Data[LEDnum][3] = Blue;
 80006b2:	683b      	ldr	r3, [r7, #0]
 80006b4:	b2d9      	uxtb	r1, r3
 80006b6:	4a06      	ldr	r2, [pc, #24]	@ (80006d0 <Set_LED+0x58>)
 80006b8:	68fb      	ldr	r3, [r7, #12]
 80006ba:	009b      	lsls	r3, r3, #2
 80006bc:	4413      	add	r3, r2
 80006be:	460a      	mov	r2, r1
 80006c0:	70da      	strb	r2, [r3, #3]
}
 80006c2:	bf00      	nop
 80006c4:	3714      	adds	r7, #20
 80006c6:	46bd      	mov	sp, r7
 80006c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80006cc:	4770      	bx	lr
 80006ce:	bf00      	nop
 80006d0:	20000174 	.word	0x20000174

080006d4 <Set_Brightness>:

/**
 * @brief  Scale all LEDs' color channels by (brightness / NORMAL_BRIGHTNESS).
 *         Stores scaled values in LED_Mod[][]. If USE_BRIGHTNESS==0, bypasses.
 */
void Set_Brightness(int brightness) {
 80006d4:	b480      	push	{r7}
 80006d6:	b085      	sub	sp, #20
 80006d8:	af00      	add	r7, sp, #0
 80006da:	6078      	str	r0, [r7, #4]
#if USE_BRIGHTNESS
    if (brightness > NORMAL_BRIGHTNESS) brightness = NORMAL_BRIGHTNESS;
 80006dc:	687b      	ldr	r3, [r7, #4]
 80006de:	2b14      	cmp	r3, #20
 80006e0:	dd01      	ble.n	80006e6 <Set_Brightness+0x12>
 80006e2:	2314      	movs	r3, #20
 80006e4:	607b      	str	r3, [r7, #4]
    float scale = brightness / (float)NORMAL_BRIGHTNESS;
 80006e6:	687b      	ldr	r3, [r7, #4]
 80006e8:	ee07 3a90 	vmov	s15, r3
 80006ec:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80006f0:	eef3 6a04 	vmov.f32	s13, #52	@ 0x41a00000  20.0
 80006f4:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80006f8:	edc7 7a02 	vstr	s15, [r7, #8]
    for (int i = 0; i < MAX_LED; i++) {
 80006fc:	2300      	movs	r3, #0
 80006fe:	60fb      	str	r3, [r7, #12]
 8000700:	e055      	b.n	80007ae <Set_Brightness+0xda>
        LED_Mod[i][0] = LED_Data[i][0];
 8000702:	4a30      	ldr	r2, [pc, #192]	@ (80007c4 <Set_Brightness+0xf0>)
 8000704:	68fb      	ldr	r3, [r7, #12]
 8000706:	f812 1023 	ldrb.w	r1, [r2, r3, lsl #2]
 800070a:	4a2f      	ldr	r2, [pc, #188]	@ (80007c8 <Set_Brightness+0xf4>)
 800070c:	68fb      	ldr	r3, [r7, #12]
 800070e:	f802 1023 	strb.w	r1, [r2, r3, lsl #2]
        LED_Mod[i][1] = (uint8_t)(LED_Data[i][1] * scale);
 8000712:	4a2c      	ldr	r2, [pc, #176]	@ (80007c4 <Set_Brightness+0xf0>)
 8000714:	68fb      	ldr	r3, [r7, #12]
 8000716:	009b      	lsls	r3, r3, #2
 8000718:	4413      	add	r3, r2
 800071a:	785b      	ldrb	r3, [r3, #1]
 800071c:	ee07 3a90 	vmov	s15, r3
 8000720:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8000724:	edd7 7a02 	vldr	s15, [r7, #8]
 8000728:	ee67 7a27 	vmul.f32	s15, s14, s15
 800072c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8000730:	edc7 7a00 	vstr	s15, [r7]
 8000734:	783b      	ldrb	r3, [r7, #0]
 8000736:	b2d9      	uxtb	r1, r3
 8000738:	4a23      	ldr	r2, [pc, #140]	@ (80007c8 <Set_Brightness+0xf4>)
 800073a:	68fb      	ldr	r3, [r7, #12]
 800073c:	009b      	lsls	r3, r3, #2
 800073e:	4413      	add	r3, r2
 8000740:	460a      	mov	r2, r1
 8000742:	705a      	strb	r2, [r3, #1]
        LED_Mod[i][2] = (uint8_t)(LED_Data[i][2] * scale);
 8000744:	4a1f      	ldr	r2, [pc, #124]	@ (80007c4 <Set_Brightness+0xf0>)
 8000746:	68fb      	ldr	r3, [r7, #12]
 8000748:	009b      	lsls	r3, r3, #2
 800074a:	4413      	add	r3, r2
 800074c:	789b      	ldrb	r3, [r3, #2]
 800074e:	ee07 3a90 	vmov	s15, r3
 8000752:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8000756:	edd7 7a02 	vldr	s15, [r7, #8]
 800075a:	ee67 7a27 	vmul.f32	s15, s14, s15
 800075e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8000762:	edc7 7a00 	vstr	s15, [r7]
 8000766:	783b      	ldrb	r3, [r7, #0]
 8000768:	b2d9      	uxtb	r1, r3
 800076a:	4a17      	ldr	r2, [pc, #92]	@ (80007c8 <Set_Brightness+0xf4>)
 800076c:	68fb      	ldr	r3, [r7, #12]
 800076e:	009b      	lsls	r3, r3, #2
 8000770:	4413      	add	r3, r2
 8000772:	460a      	mov	r2, r1
 8000774:	709a      	strb	r2, [r3, #2]
        LED_Mod[i][3] = (uint8_t)(LED_Data[i][3] * scale);
 8000776:	4a13      	ldr	r2, [pc, #76]	@ (80007c4 <Set_Brightness+0xf0>)
 8000778:	68fb      	ldr	r3, [r7, #12]
 800077a:	009b      	lsls	r3, r3, #2
 800077c:	4413      	add	r3, r2
 800077e:	78db      	ldrb	r3, [r3, #3]
 8000780:	ee07 3a90 	vmov	s15, r3
 8000784:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8000788:	edd7 7a02 	vldr	s15, [r7, #8]
 800078c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8000790:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8000794:	edc7 7a00 	vstr	s15, [r7]
 8000798:	783b      	ldrb	r3, [r7, #0]
 800079a:	b2d9      	uxtb	r1, r3
 800079c:	4a0a      	ldr	r2, [pc, #40]	@ (80007c8 <Set_Brightness+0xf4>)
 800079e:	68fb      	ldr	r3, [r7, #12]
 80007a0:	009b      	lsls	r3, r3, #2
 80007a2:	4413      	add	r3, r2
 80007a4:	460a      	mov	r2, r1
 80007a6:	70da      	strb	r2, [r3, #3]
    for (int i = 0; i < MAX_LED; i++) {
 80007a8:	68fb      	ldr	r3, [r7, #12]
 80007aa:	3301      	adds	r3, #1
 80007ac:	60fb      	str	r3, [r7, #12]
 80007ae:	68fb      	ldr	r3, [r7, #12]
 80007b0:	2b35      	cmp	r3, #53	@ 0x35
 80007b2:	dda6      	ble.n	8000702 <Set_Brightness+0x2e>
    }
#endif
}
 80007b4:	bf00      	nop
 80007b6:	bf00      	nop
 80007b8:	3714      	adds	r7, #20
 80007ba:	46bd      	mov	sp, r7
 80007bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007c0:	4770      	bx	lr
 80007c2:	bf00      	nop
 80007c4:	20000174 	.word	0x20000174
 80007c8:	2000024c 	.word	0x2000024c

080007cc <WS2812_Send>:

/**
 * @brief  Copy either LED_Mod[][] (if USE_BRIGHTNESS) or LED_Data[][] to
 *         pwmData[], then start TIM1 PWM‐DMA to send the WS2812 bit pulses.
 */
void WS2812_Send(void) {
 80007cc:	b580      	push	{r7, lr}
 80007ce:	b086      	sub	sp, #24
 80007d0:	af00      	add	r7, sp, #0
    uint32_t indx = 0;
 80007d2:	2300      	movs	r3, #0
 80007d4:	617b      	str	r3, [r7, #20]
    uint32_t color;
    for (int i = 0; i < MAX_LED; i++) {
 80007d6:	2300      	movs	r3, #0
 80007d8:	613b      	str	r3, [r7, #16]
 80007da:	e036      	b.n	800084a <WS2812_Send+0x7e>
#if USE_BRIGHTNESS
        color = ((uint32_t)LED_Mod[i][1] << 16) | ((uint32_t)LED_Mod[i][2] << 8) | ((uint32_t)LED_Mod[i][3]);
 80007dc:	4a2e      	ldr	r2, [pc, #184]	@ (8000898 <WS2812_Send+0xcc>)
 80007de:	693b      	ldr	r3, [r7, #16]
 80007e0:	009b      	lsls	r3, r3, #2
 80007e2:	4413      	add	r3, r2
 80007e4:	785b      	ldrb	r3, [r3, #1]
 80007e6:	041a      	lsls	r2, r3, #16
 80007e8:	492b      	ldr	r1, [pc, #172]	@ (8000898 <WS2812_Send+0xcc>)
 80007ea:	693b      	ldr	r3, [r7, #16]
 80007ec:	009b      	lsls	r3, r3, #2
 80007ee:	440b      	add	r3, r1
 80007f0:	789b      	ldrb	r3, [r3, #2]
 80007f2:	021b      	lsls	r3, r3, #8
 80007f4:	431a      	orrs	r2, r3
 80007f6:	4928      	ldr	r1, [pc, #160]	@ (8000898 <WS2812_Send+0xcc>)
 80007f8:	693b      	ldr	r3, [r7, #16]
 80007fa:	009b      	lsls	r3, r3, #2
 80007fc:	440b      	add	r3, r1
 80007fe:	78db      	ldrb	r3, [r3, #3]
 8000800:	4313      	orrs	r3, r2
 8000802:	607b      	str	r3, [r7, #4]
#else
        color = ((uint32_t)LED_Data[i][1] << 16) | ((uint32_t)LED_Data[i][2] << 8) | ((uint32_t)LED_Data[i][3]);
#endif
        for (int bit = 23; bit >= 0; bit--) {
 8000804:	2317      	movs	r3, #23
 8000806:	60fb      	str	r3, [r7, #12]
 8000808:	e019      	b.n	800083e <WS2812_Send+0x72>
            if (color & (1UL << bit)) {
 800080a:	687a      	ldr	r2, [r7, #4]
 800080c:	68fb      	ldr	r3, [r7, #12]
 800080e:	fa22 f303 	lsr.w	r3, r2, r3
 8000812:	f003 0301 	and.w	r3, r3, #1
 8000816:	2b00      	cmp	r3, #0
 8000818:	d007      	beq.n	800082a <WS2812_Send+0x5e>
                pwmData[indx++] = 60;  // “1” = high duty‐cycle (2/3 of 90)
 800081a:	697b      	ldr	r3, [r7, #20]
 800081c:	1c5a      	adds	r2, r3, #1
 800081e:	617a      	str	r2, [r7, #20]
 8000820:	4a1e      	ldr	r2, [pc, #120]	@ (800089c <WS2812_Send+0xd0>)
 8000822:	213c      	movs	r1, #60	@ 0x3c
 8000824:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 8000828:	e006      	b.n	8000838 <WS2812_Send+0x6c>
            } else {
                pwmData[indx++] = 30;  // “0” = low duty‐cycle (1/3 of 90)
 800082a:	697b      	ldr	r3, [r7, #20]
 800082c:	1c5a      	adds	r2, r3, #1
 800082e:	617a      	str	r2, [r7, #20]
 8000830:	4a1a      	ldr	r2, [pc, #104]	@ (800089c <WS2812_Send+0xd0>)
 8000832:	211e      	movs	r1, #30
 8000834:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
        for (int bit = 23; bit >= 0; bit--) {
 8000838:	68fb      	ldr	r3, [r7, #12]
 800083a:	3b01      	subs	r3, #1
 800083c:	60fb      	str	r3, [r7, #12]
 800083e:	68fb      	ldr	r3, [r7, #12]
 8000840:	2b00      	cmp	r3, #0
 8000842:	dae2      	bge.n	800080a <WS2812_Send+0x3e>
    for (int i = 0; i < MAX_LED; i++) {
 8000844:	693b      	ldr	r3, [r7, #16]
 8000846:	3301      	adds	r3, #1
 8000848:	613b      	str	r3, [r7, #16]
 800084a:	693b      	ldr	r3, [r7, #16]
 800084c:	2b35      	cmp	r3, #53	@ 0x35
 800084e:	ddc5      	ble.n	80007dc <WS2812_Send+0x10>
            }
        }
    }
    // after all pixels, send ~50 “zeros” (reset pulse)
    for (int i = 0; i < 50; i++) {
 8000850:	2300      	movs	r3, #0
 8000852:	60bb      	str	r3, [r7, #8]
 8000854:	e009      	b.n	800086a <WS2812_Send+0x9e>
        pwmData[indx++] = 0;
 8000856:	697b      	ldr	r3, [r7, #20]
 8000858:	1c5a      	adds	r2, r3, #1
 800085a:	617a      	str	r2, [r7, #20]
 800085c:	4a0f      	ldr	r2, [pc, #60]	@ (800089c <WS2812_Send+0xd0>)
 800085e:	2100      	movs	r1, #0
 8000860:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
    for (int i = 0; i < 50; i++) {
 8000864:	68bb      	ldr	r3, [r7, #8]
 8000866:	3301      	adds	r3, #1
 8000868:	60bb      	str	r3, [r7, #8]
 800086a:	68bb      	ldr	r3, [r7, #8]
 800086c:	2b31      	cmp	r3, #49	@ 0x31
 800086e:	ddf2      	ble.n	8000856 <WS2812_Send+0x8a>
    }
    HAL_TIM_PWM_Start_DMA(&htim1, TIM_CHANNEL_1, (uint32_t *)pwmData, indx);
 8000870:	697b      	ldr	r3, [r7, #20]
 8000872:	b29b      	uxth	r3, r3
 8000874:	4a09      	ldr	r2, [pc, #36]	@ (800089c <WS2812_Send+0xd0>)
 8000876:	2100      	movs	r1, #0
 8000878:	4809      	ldr	r0, [pc, #36]	@ (80008a0 <WS2812_Send+0xd4>)
 800087a:	f003 faa1 	bl	8003dc0 <HAL_TIM_PWM_Start_DMA>
    while (!datasentflag) { /* wait until done */ }
 800087e:	bf00      	nop
 8000880:	4b08      	ldr	r3, [pc, #32]	@ (80008a4 <WS2812_Send+0xd8>)
 8000882:	681b      	ldr	r3, [r3, #0]
 8000884:	2b00      	cmp	r3, #0
 8000886:	d0fb      	beq.n	8000880 <WS2812_Send+0xb4>
    datasentflag = 0;
 8000888:	4b06      	ldr	r3, [pc, #24]	@ (80008a4 <WS2812_Send+0xd8>)
 800088a:	2200      	movs	r2, #0
 800088c:	601a      	str	r2, [r3, #0]
}
 800088e:	bf00      	nop
 8000890:	3718      	adds	r7, #24
 8000892:	46bd      	mov	sp, r7
 8000894:	bd80      	pop	{r7, pc}
 8000896:	bf00      	nop
 8000898:	2000024c 	.word	0x2000024c
 800089c:	20000328 	.word	0x20000328
 80008a0:	200000c4 	.word	0x200000c4
 80008a4:	20000324 	.word	0x20000324

080008a8 <Set_LEDs_color_at_once>:
}

/**
 * @brief  Simple helper: fill LEDs [start..end) with (r,g,b) at step interval.
 */
void Set_LEDs_color_at_once(int start, int end, int step, int r, int g, int b) {
 80008a8:	b580      	push	{r7, lr}
 80008aa:	b086      	sub	sp, #24
 80008ac:	af00      	add	r7, sp, #0
 80008ae:	60f8      	str	r0, [r7, #12]
 80008b0:	60b9      	str	r1, [r7, #8]
 80008b2:	607a      	str	r2, [r7, #4]
 80008b4:	603b      	str	r3, [r7, #0]
    for (int pos = start; pos < end; pos += step) {
 80008b6:	68fb      	ldr	r3, [r7, #12]
 80008b8:	617b      	str	r3, [r7, #20]
 80008ba:	e009      	b.n	80008d0 <Set_LEDs_color_at_once+0x28>
        Set_LED(pos, r, g, b);
 80008bc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80008be:	6a3a      	ldr	r2, [r7, #32]
 80008c0:	6839      	ldr	r1, [r7, #0]
 80008c2:	6978      	ldr	r0, [r7, #20]
 80008c4:	f7ff fed8 	bl	8000678 <Set_LED>
    for (int pos = start; pos < end; pos += step) {
 80008c8:	697a      	ldr	r2, [r7, #20]
 80008ca:	687b      	ldr	r3, [r7, #4]
 80008cc:	4413      	add	r3, r2
 80008ce:	617b      	str	r3, [r7, #20]
 80008d0:	697a      	ldr	r2, [r7, #20]
 80008d2:	68bb      	ldr	r3, [r7, #8]
 80008d4:	429a      	cmp	r2, r3
 80008d6:	dbf1      	blt.n	80008bc <Set_LEDs_color_at_once+0x14>
    }
}
 80008d8:	bf00      	nop
 80008da:	bf00      	nop
 80008dc:	3718      	adds	r7, #24
 80008de:	46bd      	mov	sp, r7
 80008e0:	bd80      	pop	{r7, pc}

080008e2 <Turn_off_all_at_once>:
}

/**
 * @brief  Turn all LEDs off, then send.
 */
void Turn_off_all_at_once(void) {
 80008e2:	b580      	push	{r7, lr}
 80008e4:	b082      	sub	sp, #8
 80008e6:	af02      	add	r7, sp, #8
    Set_LEDs_color_at_once(0, MAX_LED, 1, 0, 0, 0);
 80008e8:	2300      	movs	r3, #0
 80008ea:	9301      	str	r3, [sp, #4]
 80008ec:	2300      	movs	r3, #0
 80008ee:	9300      	str	r3, [sp, #0]
 80008f0:	2300      	movs	r3, #0
 80008f2:	2201      	movs	r2, #1
 80008f4:	2136      	movs	r1, #54	@ 0x36
 80008f6:	2000      	movs	r0, #0
 80008f8:	f7ff ffd6 	bl	80008a8 <Set_LEDs_color_at_once>
    Set_Brightness(NORMAL_BRIGHTNESS);
 80008fc:	2014      	movs	r0, #20
 80008fe:	f7ff fee9 	bl	80006d4 <Set_Brightness>
    WS2812_Send();
 8000902:	f7ff ff63 	bl	80007cc <WS2812_Send>
}
 8000906:	bf00      	nop
 8000908:	46bd      	mov	sp, r7
 800090a:	bd80      	pop	{r7, pc}

0800090c <effect_sound_color>:
}

/**
 * @brief  Existing effect: sound‐based color fade (red→violet→etc) based on amp.
 */
void effect_sound_color(void) {
 800090c:	b580      	push	{r7, lr}
 800090e:	b08a      	sub	sp, #40	@ 0x28
 8000910:	af00      	add	r7, sp, #0
    float ratio = (float)amp / amp_maxn;
 8000912:	4b6e      	ldr	r3, [pc, #440]	@ (8000acc <effect_sound_color+0x1c0>)
 8000914:	881b      	ldrh	r3, [r3, #0]
 8000916:	ee07 3a90 	vmov	s15, r3
 800091a:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800091e:	4b6c      	ldr	r3, [pc, #432]	@ (8000ad0 <effect_sound_color+0x1c4>)
 8000920:	681b      	ldr	r3, [r3, #0]
 8000922:	ee07 3a90 	vmov	s15, r3
 8000926:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800092a:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800092e:	edc7 7a09 	vstr	s15, [r7, #36]	@ 0x24
    if (ratio > 1.0f) ratio = 1.0f;
 8000932:	edd7 7a09 	vldr	s15, [r7, #36]	@ 0x24
 8000936:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800093a:	eef4 7ac7 	vcmpe.f32	s15, s14
 800093e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000942:	dd02      	ble.n	800094a <effect_sound_color+0x3e>
 8000944:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 8000948:	627b      	str	r3, [r7, #36]	@ 0x24
    if (ratio <= 0.05f) {
 800094a:	edd7 7a09 	vldr	s15, [r7, #36]	@ 0x24
 800094e:	ed9f 7a61 	vldr	s14, [pc, #388]	@ 8000ad4 <effect_sound_color+0x1c8>
 8000952:	eef4 7ac7 	vcmpe.f32	s15, s14
 8000956:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800095a:	d802      	bhi.n	8000962 <effect_sound_color+0x56>
        Turn_off_all_at_once();
 800095c:	f7ff ffc1 	bl	80008e2 <Turn_off_all_at_once>
        return;
 8000960:	e0b1      	b.n	8000ac6 <effect_sound_color+0x1ba>
    }

    int brightness = 5 + (int)(ratio * (NORMAL_BRIGHTNESS - 5));
 8000962:	edd7 7a09 	vldr	s15, [r7, #36]	@ 0x24
 8000966:	eeb2 7a0e 	vmov.f32	s14, #46	@ 0x41700000  15.0
 800096a:	ee67 7a87 	vmul.f32	s15, s15, s14
 800096e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8000972:	ee17 3a90 	vmov	r3, s15
 8000976:	3305      	adds	r3, #5
 8000978:	61bb      	str	r3, [r7, #24]
    Set_Brightness(brightness);
 800097a:	69b8      	ldr	r0, [r7, #24]
 800097c:	f7ff feaa 	bl	80006d4 <Set_Brightness>

    uint8_t r, g, b;
    if (ratio < 0.5f) {
 8000980:	edd7 7a09 	vldr	s15, [r7, #36]	@ 0x24
 8000984:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8000988:	eef4 7ac7 	vcmpe.f32	s15, s14
 800098c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000990:	d52d      	bpl.n	80009ee <effect_sound_color+0xe2>
        float t = ratio / 0.5f;
 8000992:	ed97 7a09 	vldr	s14, [r7, #36]	@ 0x24
 8000996:	eef6 6a00 	vmov.f32	s13, #96	@ 0x3f000000  0.5
 800099a:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800099e:	edc7 7a02 	vstr	s15, [r7, #8]
        r = (uint8_t)(0 + t * (148 - 0));
 80009a2:	edd7 7a02 	vldr	s15, [r7, #8]
 80009a6:	ed9f 7a4c 	vldr	s14, [pc, #304]	@ 8000ad8 <effect_sound_color+0x1cc>
 80009aa:	ee67 7a87 	vmul.f32	s15, s15, s14
 80009ae:	ed9f 7a4b 	vldr	s14, [pc, #300]	@ 8000adc <effect_sound_color+0x1d0>
 80009b2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80009b6:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80009ba:	edc7 7a01 	vstr	s15, [r7, #4]
 80009be:	793b      	ldrb	r3, [r7, #4]
 80009c0:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
        g = 0;
 80009c4:	2300      	movs	r3, #0
 80009c6:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
        b = (uint8_t)(255 + t * (211 - 255));
 80009ca:	edd7 7a02 	vldr	s15, [r7, #8]
 80009ce:	ed9f 7a44 	vldr	s14, [pc, #272]	@ 8000ae0 <effect_sound_color+0x1d4>
 80009d2:	ee67 7a87 	vmul.f32	s15, s15, s14
 80009d6:	ed9f 7a43 	vldr	s14, [pc, #268]	@ 8000ae4 <effect_sound_color+0x1d8>
 80009da:	ee77 7a87 	vadd.f32	s15, s15, s14
 80009de:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80009e2:	edc7 7a01 	vstr	s15, [r7, #4]
 80009e6:	793b      	ldrb	r3, [r7, #4]
 80009e8:	f887 3021 	strb.w	r3, [r7, #33]	@ 0x21
 80009ec:	e057      	b.n	8000a9e <effect_sound_color+0x192>
    } else {
        float t = (ratio - 0.5f) / 0.5f;
 80009ee:	edd7 7a09 	vldr	s15, [r7, #36]	@ 0x24
 80009f2:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 80009f6:	ee37 7ac7 	vsub.f32	s14, s15, s14
 80009fa:	eef6 6a00 	vmov.f32	s13, #96	@ 0x3f000000  0.5
 80009fe:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8000a02:	edc7 7a05 	vstr	s15, [r7, #20]
        if (t < 0.5f) {
 8000a06:	edd7 7a05 	vldr	s15, [r7, #20]
 8000a0a:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8000a0e:	eef4 7ac7 	vcmpe.f32	s15, s14
 8000a12:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000a16:	d51f      	bpl.n	8000a58 <effect_sound_color+0x14c>
            float t2 = t / 0.5f;
 8000a18:	ed97 7a05 	vldr	s14, [r7, #20]
 8000a1c:	eef6 6a00 	vmov.f32	s13, #96	@ 0x3f000000  0.5
 8000a20:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8000a24:	edc7 7a03 	vstr	s15, [r7, #12]
            r = 255;
 8000a28:	23ff      	movs	r3, #255	@ 0xff
 8000a2a:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
            g = (uint8_t)(0 + t2 * (127 - 0));
 8000a2e:	edd7 7a03 	vldr	s15, [r7, #12]
 8000a32:	ed9f 7a2d 	vldr	s14, [pc, #180]	@ 8000ae8 <effect_sound_color+0x1dc>
 8000a36:	ee67 7a87 	vmul.f32	s15, s15, s14
 8000a3a:	ed9f 7a28 	vldr	s14, [pc, #160]	@ 8000adc <effect_sound_color+0x1d0>
 8000a3e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8000a42:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8000a46:	edc7 7a01 	vstr	s15, [r7, #4]
 8000a4a:	793b      	ldrb	r3, [r7, #4]
 8000a4c:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
            b = 0;
 8000a50:	2300      	movs	r3, #0
 8000a52:	f887 3021 	strb.w	r3, [r7, #33]	@ 0x21
 8000a56:	e022      	b.n	8000a9e <effect_sound_color+0x192>
        } else {
            float t2 = (t - 0.5f) / 0.5f;
 8000a58:	edd7 7a05 	vldr	s15, [r7, #20]
 8000a5c:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8000a60:	ee37 7ac7 	vsub.f32	s14, s15, s14
 8000a64:	eef6 6a00 	vmov.f32	s13, #96	@ 0x3f000000  0.5
 8000a68:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8000a6c:	edc7 7a04 	vstr	s15, [r7, #16]
            r = 255;
 8000a70:	23ff      	movs	r3, #255	@ 0xff
 8000a72:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
            g = (uint8_t)(127 + t2 * (255 - 127));
 8000a76:	edd7 7a04 	vldr	s15, [r7, #16]
 8000a7a:	ed9f 7a1c 	vldr	s14, [pc, #112]	@ 8000aec <effect_sound_color+0x1e0>
 8000a7e:	ee67 7a87 	vmul.f32	s15, s15, s14
 8000a82:	ed9f 7a19 	vldr	s14, [pc, #100]	@ 8000ae8 <effect_sound_color+0x1dc>
 8000a86:	ee77 7a87 	vadd.f32	s15, s15, s14
 8000a8a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8000a8e:	edc7 7a01 	vstr	s15, [r7, #4]
 8000a92:	793b      	ldrb	r3, [r7, #4]
 8000a94:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
            b = 0;
 8000a98:	2300      	movs	r3, #0
 8000a9a:	f887 3021 	strb.w	r3, [r7, #33]	@ 0x21
        }
    }

    for (int i = 0; i < MAX_LED; i++) {
 8000a9e:	2300      	movs	r3, #0
 8000aa0:	61fb      	str	r3, [r7, #28]
 8000aa2:	e00b      	b.n	8000abc <effect_sound_color+0x1b0>
        Set_LED(i, r, g, b);
 8000aa4:	f897 1023 	ldrb.w	r1, [r7, #35]	@ 0x23
 8000aa8:	f897 2022 	ldrb.w	r2, [r7, #34]	@ 0x22
 8000aac:	f897 3021 	ldrb.w	r3, [r7, #33]	@ 0x21
 8000ab0:	69f8      	ldr	r0, [r7, #28]
 8000ab2:	f7ff fde1 	bl	8000678 <Set_LED>
    for (int i = 0; i < MAX_LED; i++) {
 8000ab6:	69fb      	ldr	r3, [r7, #28]
 8000ab8:	3301      	adds	r3, #1
 8000aba:	61fb      	str	r3, [r7, #28]
 8000abc:	69fb      	ldr	r3, [r7, #28]
 8000abe:	2b35      	cmp	r3, #53	@ 0x35
 8000ac0:	ddf0      	ble.n	8000aa4 <effect_sound_color+0x198>
    }
    WS2812_Send();
 8000ac2:	f7ff fe83 	bl	80007cc <WS2812_Send>
}
 8000ac6:	3728      	adds	r7, #40	@ 0x28
 8000ac8:	46bd      	mov	sp, r7
 8000aca:	bd80      	pop	{r7, pc}
 8000acc:	2000016c 	.word	0x2000016c
 8000ad0:	20000000 	.word	0x20000000
 8000ad4:	3d4ccccd 	.word	0x3d4ccccd
 8000ad8:	43140000 	.word	0x43140000
 8000adc:	00000000 	.word	0x00000000
 8000ae0:	c2300000 	.word	0xc2300000
 8000ae4:	437f0000 	.word	0x437f0000
 8000ae8:	42fe0000 	.word	0x42fe0000
 8000aec:	43000000 	.word	0x43000000

08000af0 <record_sample_and_maybe_runFFT>:
 * @brief  Record one new ADC sample into fftBufIn[], subtracting middle_point
 *         to remove DC. When fftIndex reaches FFT_BUFFER_SIZE, perform an RFFT,
 *         compute the magnitude of each complex bin, and pick the peak.
 *         The result is stored in peakHz, and fftReady=1.
 */
void record_sample_and_maybe_runFFT(uint16_t raw_adc) {
 8000af0:	b580      	push	{r7, lr}
 8000af2:	b088      	sub	sp, #32
 8000af4:	af00      	add	r7, sp, #0
 8000af6:	4603      	mov	r3, r0
 8000af8:	80fb      	strh	r3, [r7, #6]
    // Convert raw 12‐bit ADC (0..4095) to float in [-1,+1], after centering around middle_point
    float centered = ((float)((int)raw_adc - (int)middle_point)) * INT16_TO_FLOAT;
 8000afa:	88fb      	ldrh	r3, [r7, #6]
 8000afc:	4a3e      	ldr	r2, [pc, #248]	@ (8000bf8 <record_sample_and_maybe_runFFT+0x108>)
 8000afe:	8812      	ldrh	r2, [r2, #0]
 8000b00:	1a9b      	subs	r3, r3, r2
 8000b02:	ee07 3a90 	vmov	s15, r3
 8000b06:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8000b0a:	ed9f 7a3c 	vldr	s14, [pc, #240]	@ 8000bfc <record_sample_and_maybe_runFFT+0x10c>
 8000b0e:	ee67 7a87 	vmul.f32	s15, s15, s14
 8000b12:	edc7 7a06 	vstr	s15, [r7, #24]
    fftBufIn[fftIndex++] = centered;
 8000b16:	4b3a      	ldr	r3, [pc, #232]	@ (8000c00 <record_sample_and_maybe_runFFT+0x110>)
 8000b18:	881b      	ldrh	r3, [r3, #0]
 8000b1a:	1c5a      	adds	r2, r3, #1
 8000b1c:	b291      	uxth	r1, r2
 8000b1e:	4a38      	ldr	r2, [pc, #224]	@ (8000c00 <record_sample_and_maybe_runFFT+0x110>)
 8000b20:	8011      	strh	r1, [r2, #0]
 8000b22:	4a38      	ldr	r2, [pc, #224]	@ (8000c04 <record_sample_and_maybe_runFFT+0x114>)
 8000b24:	009b      	lsls	r3, r3, #2
 8000b26:	4413      	add	r3, r2
 8000b28:	69ba      	ldr	r2, [r7, #24]
 8000b2a:	601a      	str	r2, [r3, #0]

    if (fftIndex >= FFT_BUFFER_SIZE) {
 8000b2c:	4b34      	ldr	r3, [pc, #208]	@ (8000c00 <record_sample_and_maybe_runFFT+0x110>)
 8000b2e:	881b      	ldrh	r3, [r3, #0]
 8000b30:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8000b34:	d35b      	bcc.n	8000bee <record_sample_and_maybe_runFFT+0xfe>
        // Run the RFFT in place: fftBufIn → fftBufOut
        arm_rfft_fast_f32(&fftHandler, fftBufIn, fftBufOut, 0);
 8000b36:	2300      	movs	r3, #0
 8000b38:	4a33      	ldr	r2, [pc, #204]	@ (8000c08 <record_sample_and_maybe_runFFT+0x118>)
 8000b3a:	4932      	ldr	r1, [pc, #200]	@ (8000c04 <record_sample_and_maybe_runFFT+0x114>)
 8000b3c:	4833      	ldr	r0, [pc, #204]	@ (8000c0c <record_sample_and_maybe_runFFT+0x11c>)
 8000b3e:	f004 faaf 	bl	80050a0 <arm_rfft_fast_f32>

        // Now compute magnitudes of bins 0..(FFT_BUFFER_SIZE/2 - 1).
        peakVal = 0.0f;
 8000b42:	4b33      	ldr	r3, [pc, #204]	@ (8000c10 <record_sample_and_maybe_runFFT+0x120>)
 8000b44:	f04f 0200 	mov.w	r2, #0
 8000b48:	601a      	str	r2, [r3, #0]
        peakHz = 0;
 8000b4a:	4b32      	ldr	r3, [pc, #200]	@ (8000c14 <record_sample_and_maybe_runFFT+0x124>)
 8000b4c:	2200      	movs	r2, #0
 8000b4e:	801a      	strh	r2, [r3, #0]
        uint16_t bins = FFT_BUFFER_SIZE / 2;
 8000b50:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8000b54:	82fb      	strh	r3, [r7, #22]
        for (uint16_t i = 0; i < bins; i++) {
 8000b56:	2300      	movs	r3, #0
 8000b58:	83fb      	strh	r3, [r7, #30]
 8000b5a:	e03e      	b.n	8000bda <record_sample_and_maybe_runFFT+0xea>
            float re = fftBufOut[2*i];
 8000b5c:	8bfb      	ldrh	r3, [r7, #30]
 8000b5e:	005b      	lsls	r3, r3, #1
 8000b60:	4a29      	ldr	r2, [pc, #164]	@ (8000c08 <record_sample_and_maybe_runFFT+0x118>)
 8000b62:	009b      	lsls	r3, r3, #2
 8000b64:	4413      	add	r3, r2
 8000b66:	681b      	ldr	r3, [r3, #0]
 8000b68:	613b      	str	r3, [r7, #16]
            float im = fftBufOut[2*i + 1];
 8000b6a:	8bfb      	ldrh	r3, [r7, #30]
 8000b6c:	005b      	lsls	r3, r3, #1
 8000b6e:	3301      	adds	r3, #1
 8000b70:	4a25      	ldr	r2, [pc, #148]	@ (8000c08 <record_sample_and_maybe_runFFT+0x118>)
 8000b72:	009b      	lsls	r3, r3, #2
 8000b74:	4413      	add	r3, r2
 8000b76:	681b      	ldr	r3, [r3, #0]
 8000b78:	60fb      	str	r3, [r7, #12]
            float mag = sqrtf(re * re + im * im);
 8000b7a:	edd7 7a04 	vldr	s15, [r7, #16]
 8000b7e:	ee27 7aa7 	vmul.f32	s14, s15, s15
 8000b82:	edd7 7a03 	vldr	s15, [r7, #12]
 8000b86:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8000b8a:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000b8e:	eeb0 0a67 	vmov.f32	s0, s15
 8000b92:	f005 fa07 	bl	8005fa4 <sqrtf>
 8000b96:	ed87 0a02 	vstr	s0, [r7, #8]
            if (mag > peakVal) {
 8000b9a:	4b1d      	ldr	r3, [pc, #116]	@ (8000c10 <record_sample_and_maybe_runFFT+0x120>)
 8000b9c:	edd3 7a00 	vldr	s15, [r3]
 8000ba0:	ed97 7a02 	vldr	s14, [r7, #8]
 8000ba4:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8000ba8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000bac:	dd12      	ble.n	8000bd4 <record_sample_and_maybe_runFFT+0xe4>
                peakVal = mag;
 8000bae:	4a18      	ldr	r2, [pc, #96]	@ (8000c10 <record_sample_and_maybe_runFFT+0x120>)
 8000bb0:	68bb      	ldr	r3, [r7, #8]
 8000bb2:	6013      	str	r3, [r2, #0]
                // Map bin to actual frequency: i * (Fs / N)
                peakHz = (uint16_t)((float)i * (SAMPLE_RATE_HZ / (float)FFT_BUFFER_SIZE));
 8000bb4:	8bfb      	ldrh	r3, [r7, #30]
 8000bb6:	ee07 3a90 	vmov	s15, r3
 8000bba:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8000bbe:	ed9f 7a16 	vldr	s14, [pc, #88]	@ 8000c18 <record_sample_and_maybe_runFFT+0x128>
 8000bc2:	ee67 7a87 	vmul.f32	s15, s15, s14
 8000bc6:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8000bca:	ee17 3a90 	vmov	r3, s15
 8000bce:	b29a      	uxth	r2, r3
 8000bd0:	4b10      	ldr	r3, [pc, #64]	@ (8000c14 <record_sample_and_maybe_runFFT+0x124>)
 8000bd2:	801a      	strh	r2, [r3, #0]
        for (uint16_t i = 0; i < bins; i++) {
 8000bd4:	8bfb      	ldrh	r3, [r7, #30]
 8000bd6:	3301      	adds	r3, #1
 8000bd8:	83fb      	strh	r3, [r7, #30]
 8000bda:	8bfa      	ldrh	r2, [r7, #30]
 8000bdc:	8afb      	ldrh	r3, [r7, #22]
 8000bde:	429a      	cmp	r2, r3
 8000be0:	d3bc      	bcc.n	8000b5c <record_sample_and_maybe_runFFT+0x6c>
            }
        }

        fftReady = 1;
 8000be2:	4b0e      	ldr	r3, [pc, #56]	@ (8000c1c <record_sample_and_maybe_runFFT+0x12c>)
 8000be4:	2201      	movs	r2, #1
 8000be6:	701a      	strb	r2, [r3, #0]
        fftIndex = 0; // reset buffer index to record next block
 8000be8:	4b05      	ldr	r3, [pc, #20]	@ (8000c00 <record_sample_and_maybe_runFFT+0x110>)
 8000bea:	2200      	movs	r2, #0
 8000bec:	801a      	strh	r2, [r3, #0]
    }
}
 8000bee:	bf00      	nop
 8000bf0:	3720      	adds	r7, #32
 8000bf2:	46bd      	mov	sp, r7
 8000bf4:	bd80      	pop	{r7, pc}
 8000bf6:	bf00      	nop
 8000bf8:	20000dac 	.word	0x20000dac
 8000bfc:	37fffffc 	.word	0x37fffffc
 8000c00:	20004dc8 	.word	0x20004dc8
 8000c04:	20000dc8 	.word	0x20000dc8
 8000c08:	20002dc8 	.word	0x20002dc8
 8000c0c:	20000db0 	.word	0x20000db0
 8000c10:	20004dcc 	.word	0x20004dcc
 8000c14:	20004dd0 	.word	0x20004dd0
 8000c18:	41bebc00 	.word	0x41bebc00
 8000c1c:	20004dd2 	.word	0x20004dd2

08000c20 <effect_frequency_bar>:
/**
 * @brief  2) Frequency‐Bar effect:
 *         Light up a contiguous block of LEDs whose size is proportional to amplitude,
 *         colored by a gradient from blue→red based on peakFrequency.
 */
void effect_frequency_bar(uint16_t amplitude, uint16_t peakFrequency) {
 8000c20:	b580      	push	{r7, lr}
 8000c22:	b088      	sub	sp, #32
 8000c24:	af00      	add	r7, sp, #0
 8000c26:	4603      	mov	r3, r0
 8000c28:	460a      	mov	r2, r1
 8000c2a:	80fb      	strh	r3, [r7, #6]
 8000c2c:	4613      	mov	r3, r2
 8000c2e:	80bb      	strh	r3, [r7, #4]
    float ratioAmp = (float)amplitude / amp_maxn;
 8000c30:	88fb      	ldrh	r3, [r7, #6]
 8000c32:	ee07 3a90 	vmov	s15, r3
 8000c36:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8000c3a:	4b47      	ldr	r3, [pc, #284]	@ (8000d58 <effect_frequency_bar+0x138>)
 8000c3c:	681b      	ldr	r3, [r3, #0]
 8000c3e:	ee07 3a90 	vmov	s15, r3
 8000c42:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8000c46:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8000c4a:	edc7 7a07 	vstr	s15, [r7, #28]
    if (ratioAmp > 1.0f) ratioAmp = 1.0f;
 8000c4e:	edd7 7a07 	vldr	s15, [r7, #28]
 8000c52:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8000c56:	eef4 7ac7 	vcmpe.f32	s15, s14
 8000c5a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000c5e:	dd02      	ble.n	8000c66 <effect_frequency_bar+0x46>
 8000c60:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 8000c64:	61fb      	str	r3, [r7, #28]

    int ledCount = (int)(ratioAmp * MAX_LED);
 8000c66:	edd7 7a07 	vldr	s15, [r7, #28]
 8000c6a:	ed9f 7a3c 	vldr	s14, [pc, #240]	@ 8000d5c <effect_frequency_bar+0x13c>
 8000c6e:	ee67 7a87 	vmul.f32	s15, s15, s14
 8000c72:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8000c76:	ee17 3a90 	vmov	r3, s15
 8000c7a:	61bb      	str	r3, [r7, #24]
    if (ledCount < 1) ledCount = 1;
 8000c7c:	69bb      	ldr	r3, [r7, #24]
 8000c7e:	2b00      	cmp	r3, #0
 8000c80:	dc01      	bgt.n	8000c86 <effect_frequency_bar+0x66>
 8000c82:	2301      	movs	r3, #1
 8000c84:	61bb      	str	r3, [r7, #24]

    // If FFT not ready or amplitude too small, switch off
    if (ratioAmp <= 0.05f || !fftReady) {
 8000c86:	edd7 7a07 	vldr	s15, [r7, #28]
 8000c8a:	ed9f 7a35 	vldr	s14, [pc, #212]	@ 8000d60 <effect_frequency_bar+0x140>
 8000c8e:	eef4 7ac7 	vcmpe.f32	s15, s14
 8000c92:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000c96:	d903      	bls.n	8000ca0 <effect_frequency_bar+0x80>
 8000c98:	4b32      	ldr	r3, [pc, #200]	@ (8000d64 <effect_frequency_bar+0x144>)
 8000c9a:	781b      	ldrb	r3, [r3, #0]
 8000c9c:	2b00      	cmp	r3, #0
 8000c9e:	d102      	bne.n	8000ca6 <effect_frequency_bar+0x86>
        Turn_off_all_at_once();
 8000ca0:	f7ff fe1f 	bl	80008e2 <Turn_off_all_at_once>
        return;
 8000ca4:	e055      	b.n	8000d52 <effect_frequency_bar+0x132>
    }

    // Map peakFrequency 0..12000 → t=0..1
    float freqCap = 12000.0f;
 8000ca6:	4b30      	ldr	r3, [pc, #192]	@ (8000d68 <effect_frequency_bar+0x148>)
 8000ca8:	60fb      	str	r3, [r7, #12]
    float t = (float)peakFrequency / freqCap;
 8000caa:	88bb      	ldrh	r3, [r7, #4]
 8000cac:	ee07 3a90 	vmov	s15, r3
 8000cb0:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8000cb4:	ed97 7a03 	vldr	s14, [r7, #12]
 8000cb8:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8000cbc:	edc7 7a05 	vstr	s15, [r7, #20]
    if (t > 1.0f) t = 1.0f;
 8000cc0:	edd7 7a05 	vldr	s15, [r7, #20]
 8000cc4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8000cc8:	eef4 7ac7 	vcmpe.f32	s15, s14
 8000ccc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000cd0:	dd02      	ble.n	8000cd8 <effect_frequency_bar+0xb8>
 8000cd2:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 8000cd6:	617b      	str	r3, [r7, #20]

    // Build a blue→red gradient over ledCount LEDs.
    for (int i = 0; i < MAX_LED; i++) {
 8000cd8:	2300      	movs	r3, #0
 8000cda:	613b      	str	r3, [r7, #16]
 8000cdc:	e031      	b.n	8000d42 <effect_frequency_bar+0x122>
        if (i < ledCount) {
 8000cde:	693a      	ldr	r2, [r7, #16]
 8000ce0:	69bb      	ldr	r3, [r7, #24]
 8000ce2:	429a      	cmp	r2, r3
 8000ce4:	da24      	bge.n	8000d30 <effect_frequency_bar+0x110>
            // color = interpolate between blue (0,0,255) → red (255,0,0) at position proportional to t
            uint8_t R = (uint8_t)(255.0f * t);
 8000ce6:	edd7 7a05 	vldr	s15, [r7, #20]
 8000cea:	ed9f 7a20 	vldr	s14, [pc, #128]	@ 8000d6c <effect_frequency_bar+0x14c>
 8000cee:	ee67 7a87 	vmul.f32	s15, s15, s14
 8000cf2:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8000cf6:	edc7 7a00 	vstr	s15, [r7]
 8000cfa:	783b      	ldrb	r3, [r7, #0]
 8000cfc:	72fb      	strb	r3, [r7, #11]
            uint8_t G = 0;
 8000cfe:	2300      	movs	r3, #0
 8000d00:	72bb      	strb	r3, [r7, #10]
            uint8_t B = (uint8_t)(255.0f * (1.0f - t));
 8000d02:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8000d06:	edd7 7a05 	vldr	s15, [r7, #20]
 8000d0a:	ee77 7a67 	vsub.f32	s15, s14, s15
 8000d0e:	ed9f 7a17 	vldr	s14, [pc, #92]	@ 8000d6c <effect_frequency_bar+0x14c>
 8000d12:	ee67 7a87 	vmul.f32	s15, s15, s14
 8000d16:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8000d1a:	edc7 7a00 	vstr	s15, [r7]
 8000d1e:	783b      	ldrb	r3, [r7, #0]
 8000d20:	727b      	strb	r3, [r7, #9]
            Set_LED(i, R, G, B);
 8000d22:	7af9      	ldrb	r1, [r7, #11]
 8000d24:	7aba      	ldrb	r2, [r7, #10]
 8000d26:	7a7b      	ldrb	r3, [r7, #9]
 8000d28:	6938      	ldr	r0, [r7, #16]
 8000d2a:	f7ff fca5 	bl	8000678 <Set_LED>
 8000d2e:	e005      	b.n	8000d3c <effect_frequency_bar+0x11c>
        } else {
            Set_LED(i, 0, 0, 0);
 8000d30:	2300      	movs	r3, #0
 8000d32:	2200      	movs	r2, #0
 8000d34:	2100      	movs	r1, #0
 8000d36:	6938      	ldr	r0, [r7, #16]
 8000d38:	f7ff fc9e 	bl	8000678 <Set_LED>
    for (int i = 0; i < MAX_LED; i++) {
 8000d3c:	693b      	ldr	r3, [r7, #16]
 8000d3e:	3301      	adds	r3, #1
 8000d40:	613b      	str	r3, [r7, #16]
 8000d42:	693b      	ldr	r3, [r7, #16]
 8000d44:	2b35      	cmp	r3, #53	@ 0x35
 8000d46:	ddca      	ble.n	8000cde <effect_frequency_bar+0xbe>
        }
    }
    Set_Brightness(NORMAL_BRIGHTNESS);
 8000d48:	2014      	movs	r0, #20
 8000d4a:	f7ff fcc3 	bl	80006d4 <Set_Brightness>
    WS2812_Send();
 8000d4e:	f7ff fd3d 	bl	80007cc <WS2812_Send>
}
 8000d52:	3720      	adds	r7, #32
 8000d54:	46bd      	mov	sp, r7
 8000d56:	bd80      	pop	{r7, pc}
 8000d58:	20000000 	.word	0x20000000
 8000d5c:	42580000 	.word	0x42580000
 8000d60:	3d4ccccd 	.word	0x3d4ccccd
 8000d64:	20004dd2 	.word	0x20004dd2
 8000d68:	463b8000 	.word	0x463b8000
 8000d6c:	437f0000 	.word	0x437f0000

08000d70 <effect_low_high_split>:
 * @brief  3) Low/High color split:
 *         LEDs[0..mid) are colored “low‐freq” (green),
 *         LEDs[mid..MAX_LED) are “high‐freq” (magenta),
 *         intensity modulated by amplitude and how far basin the peak is from mid‐freq.
 */
void effect_low_high_split(uint16_t amplitude, uint16_t peakFrequency) {
 8000d70:	b580      	push	{r7, lr}
 8000d72:	b088      	sub	sp, #32
 8000d74:	af00      	add	r7, sp, #0
 8000d76:	4603      	mov	r3, r0
 8000d78:	460a      	mov	r2, r1
 8000d7a:	80fb      	strh	r3, [r7, #6]
 8000d7c:	4613      	mov	r3, r2
 8000d7e:	80bb      	strh	r3, [r7, #4]
    float ratioAmp = (float)amplitude / amp_maxn;
 8000d80:	88fb      	ldrh	r3, [r7, #6]
 8000d82:	ee07 3a90 	vmov	s15, r3
 8000d86:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8000d8a:	4b47      	ldr	r3, [pc, #284]	@ (8000ea8 <effect_low_high_split+0x138>)
 8000d8c:	681b      	ldr	r3, [r3, #0]
 8000d8e:	ee07 3a90 	vmov	s15, r3
 8000d92:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8000d96:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8000d9a:	edc7 7a07 	vstr	s15, [r7, #28]
    if (ratioAmp > 1.0f) ratioAmp = 1.0f;
 8000d9e:	edd7 7a07 	vldr	s15, [r7, #28]
 8000da2:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8000da6:	eef4 7ac7 	vcmpe.f32	s15, s14
 8000daa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000dae:	dd02      	ble.n	8000db6 <effect_low_high_split+0x46>
 8000db0:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 8000db4:	61fb      	str	r3, [r7, #28]

    // If too quiet or FFT not ready, switch off
    if (ratioAmp <= 0.05f || !fftReady) {
 8000db6:	edd7 7a07 	vldr	s15, [r7, #28]
 8000dba:	ed9f 7a3c 	vldr	s14, [pc, #240]	@ 8000eac <effect_low_high_split+0x13c>
 8000dbe:	eef4 7ac7 	vcmpe.f32	s15, s14
 8000dc2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000dc6:	d903      	bls.n	8000dd0 <effect_low_high_split+0x60>
 8000dc8:	4b39      	ldr	r3, [pc, #228]	@ (8000eb0 <effect_low_high_split+0x140>)
 8000dca:	781b      	ldrb	r3, [r3, #0]
 8000dcc:	2b00      	cmp	r3, #0
 8000dce:	d102      	bne.n	8000dd6 <effect_low_high_split+0x66>
        Turn_off_all_at_once();
 8000dd0:	f7ff fd87 	bl	80008e2 <Turn_off_all_at_once>
        return;
 8000dd4:	e065      	b.n	8000ea2 <effect_low_high_split+0x132>
    }

    // Define split at e.g. 6000 Hz:
    float splitFreq = 6000.0f;
 8000dd6:	4b37      	ldr	r3, [pc, #220]	@ (8000eb4 <effect_low_high_split+0x144>)
 8000dd8:	617b      	str	r3, [r7, #20]
    int midLed = MAX_LED / 2;
 8000dda:	231b      	movs	r3, #27
 8000ddc:	613b      	str	r3, [r7, #16]

    // Determine whether peak is in low or high:
    bool isHigh = ((float)peakFrequency > splitFreq);
 8000dde:	88bb      	ldrh	r3, [r7, #4]
 8000de0:	ee07 3a90 	vmov	s15, r3
 8000de4:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8000de8:	ed97 7a05 	vldr	s14, [r7, #20]
 8000dec:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8000df0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000df4:	bf4c      	ite	mi
 8000df6:	2301      	movmi	r3, #1
 8000df8:	2300      	movpl	r3, #0
 8000dfa:	73fb      	strb	r3, [r7, #15]

    for (int i = 0; i < MAX_LED; i++) {
 8000dfc:	2300      	movs	r3, #0
 8000dfe:	61bb      	str	r3, [r7, #24]
 8000e00:	e047      	b.n	8000e92 <effect_low_high_split+0x122>
        float localBrightness = ratioAmp * 255.0f;
 8000e02:	edd7 7a07 	vldr	s15, [r7, #28]
 8000e06:	ed9f 7a2c 	vldr	s14, [pc, #176]	@ 8000eb8 <effect_low_high_split+0x148>
 8000e0a:	ee67 7a87 	vmul.f32	s15, s15, s14
 8000e0e:	edc7 7a02 	vstr	s15, [r7, #8]
        if (isHigh) {
 8000e12:	7bfb      	ldrb	r3, [r7, #15]
 8000e14:	2b00      	cmp	r3, #0
 8000e16:	d020      	beq.n	8000e5a <effect_low_high_split+0xea>
            // color = magenta: (r=brightness,g=0,b=brightness)
            if (i >= midLed) {
 8000e18:	69ba      	ldr	r2, [r7, #24]
 8000e1a:	693b      	ldr	r3, [r7, #16]
 8000e1c:	429a      	cmp	r2, r3
 8000e1e:	db15      	blt.n	8000e4c <effect_low_high_split+0xdc>
                Set_LED(i, (uint8_t)localBrightness, 0, (uint8_t)localBrightness);
 8000e20:	edd7 7a02 	vldr	s15, [r7, #8]
 8000e24:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8000e28:	edc7 7a00 	vstr	s15, [r7]
 8000e2c:	783b      	ldrb	r3, [r7, #0]
 8000e2e:	b2db      	uxtb	r3, r3
 8000e30:	4619      	mov	r1, r3
 8000e32:	edd7 7a02 	vldr	s15, [r7, #8]
 8000e36:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8000e3a:	edc7 7a00 	vstr	s15, [r7]
 8000e3e:	783b      	ldrb	r3, [r7, #0]
 8000e40:	b2db      	uxtb	r3, r3
 8000e42:	2200      	movs	r2, #0
 8000e44:	69b8      	ldr	r0, [r7, #24]
 8000e46:	f7ff fc17 	bl	8000678 <Set_LED>
 8000e4a:	e01f      	b.n	8000e8c <effect_low_high_split+0x11c>
            } else {
                Set_LED(i, 0, 0, 0);
 8000e4c:	2300      	movs	r3, #0
 8000e4e:	2200      	movs	r2, #0
 8000e50:	2100      	movs	r1, #0
 8000e52:	69b8      	ldr	r0, [r7, #24]
 8000e54:	f7ff fc10 	bl	8000678 <Set_LED>
 8000e58:	e018      	b.n	8000e8c <effect_low_high_split+0x11c>
            }
        } else {
            // color = green: (r=0,g=brightness,b=0)
            if (i < midLed) {
 8000e5a:	69ba      	ldr	r2, [r7, #24]
 8000e5c:	693b      	ldr	r3, [r7, #16]
 8000e5e:	429a      	cmp	r2, r3
 8000e60:	da0e      	bge.n	8000e80 <effect_low_high_split+0x110>
                Set_LED(i, 0, (uint8_t)localBrightness, 0);
 8000e62:	edd7 7a02 	vldr	s15, [r7, #8]
 8000e66:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8000e6a:	edc7 7a00 	vstr	s15, [r7]
 8000e6e:	783b      	ldrb	r3, [r7, #0]
 8000e70:	b2db      	uxtb	r3, r3
 8000e72:	461a      	mov	r2, r3
 8000e74:	2300      	movs	r3, #0
 8000e76:	2100      	movs	r1, #0
 8000e78:	69b8      	ldr	r0, [r7, #24]
 8000e7a:	f7ff fbfd 	bl	8000678 <Set_LED>
 8000e7e:	e005      	b.n	8000e8c <effect_low_high_split+0x11c>
            } else {
                Set_LED(i, 0, 0, 0);
 8000e80:	2300      	movs	r3, #0
 8000e82:	2200      	movs	r2, #0
 8000e84:	2100      	movs	r1, #0
 8000e86:	69b8      	ldr	r0, [r7, #24]
 8000e88:	f7ff fbf6 	bl	8000678 <Set_LED>
    for (int i = 0; i < MAX_LED; i++) {
 8000e8c:	69bb      	ldr	r3, [r7, #24]
 8000e8e:	3301      	adds	r3, #1
 8000e90:	61bb      	str	r3, [r7, #24]
 8000e92:	69bb      	ldr	r3, [r7, #24]
 8000e94:	2b35      	cmp	r3, #53	@ 0x35
 8000e96:	ddb4      	ble.n	8000e02 <effect_low_high_split+0x92>
            }
        }
    }
    Set_Brightness(NORMAL_BRIGHTNESS);
 8000e98:	2014      	movs	r0, #20
 8000e9a:	f7ff fc1b 	bl	80006d4 <Set_Brightness>
    WS2812_Send();
 8000e9e:	f7ff fc95 	bl	80007cc <WS2812_Send>
}
 8000ea2:	3720      	adds	r7, #32
 8000ea4:	46bd      	mov	sp, r7
 8000ea6:	bd80      	pop	{r7, pc}
 8000ea8:	20000000 	.word	0x20000000
 8000eac:	3d4ccccd 	.word	0x3d4ccccd
 8000eb0:	20004dd2 	.word	0x20004dd2
 8000eb4:	45bb8000 	.word	0x45bb8000
 8000eb8:	437f0000 	.word	0x437f0000

08000ebc <effect_frequency_pulse>:

/**
 * @brief  4) Frequency Pulse:
 *         Blink the entire strip on/off at a rate proportional to peakFrequency.
 */
void effect_frequency_pulse(uint16_t amplitude, uint16_t peakFrequency) {
 8000ebc:	b580      	push	{r7, lr}
 8000ebe:	b088      	sub	sp, #32
 8000ec0:	af00      	add	r7, sp, #0
 8000ec2:	4603      	mov	r3, r0
 8000ec4:	460a      	mov	r2, r1
 8000ec6:	80fb      	strh	r3, [r7, #6]
 8000ec8:	4613      	mov	r3, r2
 8000eca:	80bb      	strh	r3, [r7, #4]
    float ratioAmp = (float)amplitude / amp_maxn;
 8000ecc:	88fb      	ldrh	r3, [r7, #6]
 8000ece:	ee07 3a90 	vmov	s15, r3
 8000ed2:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8000ed6:	4b51      	ldr	r3, [pc, #324]	@ (800101c <effect_frequency_pulse+0x160>)
 8000ed8:	681b      	ldr	r3, [r3, #0]
 8000eda:	ee07 3a90 	vmov	s15, r3
 8000ede:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8000ee2:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8000ee6:	edc7 7a07 	vstr	s15, [r7, #28]
    if (ratioAmp > 1.0f) ratioAmp = 1.0f;
 8000eea:	edd7 7a07 	vldr	s15, [r7, #28]
 8000eee:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8000ef2:	eef4 7ac7 	vcmpe.f32	s15, s14
 8000ef6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000efa:	dd02      	ble.n	8000f02 <effect_frequency_pulse+0x46>
 8000efc:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 8000f00:	61fb      	str	r3, [r7, #28]

    // If too quiet or FFT not ready, turn off
    if (ratioAmp <= 0.05f || !fftReady) {
 8000f02:	edd7 7a07 	vldr	s15, [r7, #28]
 8000f06:	ed9f 7a46 	vldr	s14, [pc, #280]	@ 8001020 <effect_frequency_pulse+0x164>
 8000f0a:	eef4 7ac7 	vcmpe.f32	s15, s14
 8000f0e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000f12:	d903      	bls.n	8000f1c <effect_frequency_pulse+0x60>
 8000f14:	4b43      	ldr	r3, [pc, #268]	@ (8001024 <effect_frequency_pulse+0x168>)
 8000f16:	781b      	ldrb	r3, [r3, #0]
 8000f18:	2b00      	cmp	r3, #0
 8000f1a:	d102      	bne.n	8000f22 <effect_frequency_pulse+0x66>
        Turn_off_all_at_once();
 8000f1c:	f7ff fce1 	bl	80008e2 <Turn_off_all_at_once>
        return;
 8000f20:	e078      	b.n	8001014 <effect_frequency_pulse+0x158>
    }

    // Map peakFrequency [100..10000] → blink period [300ms..50ms].
    float f = (float)peakFrequency;
 8000f22:	88bb      	ldrh	r3, [r7, #4]
 8000f24:	ee07 3a90 	vmov	s15, r3
 8000f28:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8000f2c:	edc7 7a06 	vstr	s15, [r7, #24]
    if (f < 100.0f) f = 100.0f;
 8000f30:	edd7 7a06 	vldr	s15, [r7, #24]
 8000f34:	ed9f 7a3c 	vldr	s14, [pc, #240]	@ 8001028 <effect_frequency_pulse+0x16c>
 8000f38:	eef4 7ac7 	vcmpe.f32	s15, s14
 8000f3c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000f40:	d501      	bpl.n	8000f46 <effect_frequency_pulse+0x8a>
 8000f42:	4b3a      	ldr	r3, [pc, #232]	@ (800102c <effect_frequency_pulse+0x170>)
 8000f44:	61bb      	str	r3, [r7, #24]
    if (f > 10000.0f) f = 10000.0f;
 8000f46:	edd7 7a06 	vldr	s15, [r7, #24]
 8000f4a:	ed9f 7a39 	vldr	s14, [pc, #228]	@ 8001030 <effect_frequency_pulse+0x174>
 8000f4e:	eef4 7ac7 	vcmpe.f32	s15, s14
 8000f52:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000f56:	dd01      	ble.n	8000f5c <effect_frequency_pulse+0xa0>
 8000f58:	4b36      	ldr	r3, [pc, #216]	@ (8001034 <effect_frequency_pulse+0x178>)
 8000f5a:	61bb      	str	r3, [r7, #24]
    float periodMs = 300.0f - ((f - 100.0f) / (10000.0f - 100.0f)) * (300.0f - 50.0f);
 8000f5c:	edd7 7a06 	vldr	s15, [r7, #24]
 8000f60:	ed9f 7a31 	vldr	s14, [pc, #196]	@ 8001028 <effect_frequency_pulse+0x16c>
 8000f64:	ee37 7ac7 	vsub.f32	s14, s15, s14
 8000f68:	eddf 6a33 	vldr	s13, [pc, #204]	@ 8001038 <effect_frequency_pulse+0x17c>
 8000f6c:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8000f70:	ed9f 7a32 	vldr	s14, [pc, #200]	@ 800103c <effect_frequency_pulse+0x180>
 8000f74:	ee67 7a87 	vmul.f32	s15, s15, s14
 8000f78:	ed9f 7a31 	vldr	s14, [pc, #196]	@ 8001040 <effect_frequency_pulse+0x184>
 8000f7c:	ee77 7a67 	vsub.f32	s15, s14, s15
 8000f80:	edc7 7a04 	vstr	s15, [r7, #16]
    static uint32_t lastToggle = 0;
    static bool onState = false;

    uint32_t now = HAL_GetTick();
 8000f84:	f000 fe68 	bl	8001c58 <HAL_GetTick>
 8000f88:	60f8      	str	r0, [r7, #12]
    if ((now - lastToggle) >= (uint32_t)periodMs) {
 8000f8a:	4b2e      	ldr	r3, [pc, #184]	@ (8001044 <effect_frequency_pulse+0x188>)
 8000f8c:	681b      	ldr	r3, [r3, #0]
 8000f8e:	68fa      	ldr	r2, [r7, #12]
 8000f90:	1ad3      	subs	r3, r2, r3
 8000f92:	edd7 7a04 	vldr	s15, [r7, #16]
 8000f96:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8000f9a:	ee17 2a90 	vmov	r2, s15
 8000f9e:	4293      	cmp	r3, r2
 8000fa0:	d311      	bcc.n	8000fc6 <effect_frequency_pulse+0x10a>
        onState = !onState;
 8000fa2:	4b29      	ldr	r3, [pc, #164]	@ (8001048 <effect_frequency_pulse+0x18c>)
 8000fa4:	781b      	ldrb	r3, [r3, #0]
 8000fa6:	2b00      	cmp	r3, #0
 8000fa8:	bf14      	ite	ne
 8000faa:	2301      	movne	r3, #1
 8000fac:	2300      	moveq	r3, #0
 8000fae:	b2db      	uxtb	r3, r3
 8000fb0:	f083 0301 	eor.w	r3, r3, #1
 8000fb4:	b2db      	uxtb	r3, r3
 8000fb6:	f003 0301 	and.w	r3, r3, #1
 8000fba:	b2da      	uxtb	r2, r3
 8000fbc:	4b22      	ldr	r3, [pc, #136]	@ (8001048 <effect_frequency_pulse+0x18c>)
 8000fbe:	701a      	strb	r2, [r3, #0]
        lastToggle = now;
 8000fc0:	4a20      	ldr	r2, [pc, #128]	@ (8001044 <effect_frequency_pulse+0x188>)
 8000fc2:	68fb      	ldr	r3, [r7, #12]
 8000fc4:	6013      	str	r3, [r2, #0]
    }

    if (onState) {
 8000fc6:	4b20      	ldr	r3, [pc, #128]	@ (8001048 <effect_frequency_pulse+0x18c>)
 8000fc8:	781b      	ldrb	r3, [r3, #0]
 8000fca:	2b00      	cmp	r3, #0
 8000fcc:	d01b      	beq.n	8001006 <effect_frequency_pulse+0x14a>
        // Solid white bar with brightness proportional to amplitude
        uint8_t brightness = (uint8_t)(ratioAmp * 255.0f);
 8000fce:	edd7 7a07 	vldr	s15, [r7, #28]
 8000fd2:	ed9f 7a1e 	vldr	s14, [pc, #120]	@ 800104c <effect_frequency_pulse+0x190>
 8000fd6:	ee67 7a87 	vmul.f32	s15, s15, s14
 8000fda:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8000fde:	edc7 7a00 	vstr	s15, [r7]
 8000fe2:	783b      	ldrb	r3, [r7, #0]
 8000fe4:	72fb      	strb	r3, [r7, #11]
        for (int i = 0; i < MAX_LED; i++) {
 8000fe6:	2300      	movs	r3, #0
 8000fe8:	617b      	str	r3, [r7, #20]
 8000fea:	e008      	b.n	8000ffe <effect_frequency_pulse+0x142>
            Set_LED(i, brightness, brightness, brightness);
 8000fec:	7af9      	ldrb	r1, [r7, #11]
 8000fee:	7afa      	ldrb	r2, [r7, #11]
 8000ff0:	7afb      	ldrb	r3, [r7, #11]
 8000ff2:	6978      	ldr	r0, [r7, #20]
 8000ff4:	f7ff fb40 	bl	8000678 <Set_LED>
        for (int i = 0; i < MAX_LED; i++) {
 8000ff8:	697b      	ldr	r3, [r7, #20]
 8000ffa:	3301      	adds	r3, #1
 8000ffc:	617b      	str	r3, [r7, #20]
 8000ffe:	697b      	ldr	r3, [r7, #20]
 8001000:	2b35      	cmp	r3, #53	@ 0x35
 8001002:	ddf3      	ble.n	8000fec <effect_frequency_pulse+0x130>
 8001004:	e001      	b.n	800100a <effect_frequency_pulse+0x14e>
        }
    } else {
        Turn_off_all_at_once();
 8001006:	f7ff fc6c 	bl	80008e2 <Turn_off_all_at_once>
    }
    Set_Brightness(NORMAL_BRIGHTNESS);
 800100a:	2014      	movs	r0, #20
 800100c:	f7ff fb62 	bl	80006d4 <Set_Brightness>
    WS2812_Send();
 8001010:	f7ff fbdc 	bl	80007cc <WS2812_Send>
}
 8001014:	3720      	adds	r7, #32
 8001016:	46bd      	mov	sp, r7
 8001018:	bd80      	pop	{r7, pc}
 800101a:	bf00      	nop
 800101c:	20000000 	.word	0x20000000
 8001020:	3d4ccccd 	.word	0x3d4ccccd
 8001024:	20004dd2 	.word	0x20004dd2
 8001028:	42c80000 	.word	0x42c80000
 800102c:	42c80000 	.word	0x42c80000
 8001030:	461c4000 	.word	0x461c4000
 8001034:	461c4000 	.word	0x461c4000
 8001038:	461ab000 	.word	0x461ab000
 800103c:	437a0000 	.word	0x437a0000
 8001040:	43960000 	.word	0x43960000
 8001044:	20004dd4 	.word	0x20004dd4
 8001048:	20004dd8 	.word	0x20004dd8
 800104c:	437f0000 	.word	0x437f0000

08001050 <effect_frequency_wave>:
/**
 * @brief  5) Frequency Wave:
 *         Create a “traveling wave” of color whose speed depends on peakFrequency,
 *         and amplitude modulates wave amplitude.
 */
void effect_frequency_wave(uint16_t amplitude, uint16_t peakFrequency) {
 8001050:	b580      	push	{r7, lr}
 8001052:	b08c      	sub	sp, #48	@ 0x30
 8001054:	af00      	add	r7, sp, #0
 8001056:	4603      	mov	r3, r0
 8001058:	460a      	mov	r2, r1
 800105a:	80fb      	strh	r3, [r7, #6]
 800105c:	4613      	mov	r3, r2
 800105e:	80bb      	strh	r3, [r7, #4]
    float ratioAmp = (float)amplitude / amp_maxn;
 8001060:	88fb      	ldrh	r3, [r7, #6]
 8001062:	ee07 3a90 	vmov	s15, r3
 8001066:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800106a:	4b66      	ldr	r3, [pc, #408]	@ (8001204 <effect_frequency_wave+0x1b4>)
 800106c:	681b      	ldr	r3, [r3, #0]
 800106e:	ee07 3a90 	vmov	s15, r3
 8001072:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001076:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800107a:	edc7 7a0b 	vstr	s15, [r7, #44]	@ 0x2c
    if (ratioAmp > 1.0f) ratioAmp = 1.0f;
 800107e:	edd7 7a0b 	vldr	s15, [r7, #44]	@ 0x2c
 8001082:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8001086:	eef4 7ac7 	vcmpe.f32	s15, s14
 800108a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800108e:	dd02      	ble.n	8001096 <effect_frequency_wave+0x46>
 8001090:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 8001094:	62fb      	str	r3, [r7, #44]	@ 0x2c

    // If too quiet or FFT not ready, switch off
    if (ratioAmp <= 0.05f || !fftReady) {
 8001096:	edd7 7a0b 	vldr	s15, [r7, #44]	@ 0x2c
 800109a:	ed9f 7a5b 	vldr	s14, [pc, #364]	@ 8001208 <effect_frequency_wave+0x1b8>
 800109e:	eef4 7ac7 	vcmpe.f32	s15, s14
 80010a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80010a6:	d903      	bls.n	80010b0 <effect_frequency_wave+0x60>
 80010a8:	4b58      	ldr	r3, [pc, #352]	@ (800120c <effect_frequency_wave+0x1bc>)
 80010aa:	781b      	ldrb	r3, [r3, #0]
 80010ac:	2b00      	cmp	r3, #0
 80010ae:	d102      	bne.n	80010b6 <effect_frequency_wave+0x66>
        Turn_off_all_at_once();
 80010b0:	f7ff fc17 	bl	80008e2 <Turn_off_all_at_once>
        return;
 80010b4:	e0a3      	b.n	80011fe <effect_frequency_wave+0x1ae>
    }

    // Map peakFrequency [0..12000] → wave speed (LED shifts per call)
    float freqCap = 12000.0f;
 80010b6:	4b56      	ldr	r3, [pc, #344]	@ (8001210 <effect_frequency_wave+0x1c0>)
 80010b8:	623b      	str	r3, [r7, #32]
    float f = (float)peakFrequency;
 80010ba:	88bb      	ldrh	r3, [r7, #4]
 80010bc:	ee07 3a90 	vmov	s15, r3
 80010c0:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80010c4:	edc7 7a0a 	vstr	s15, [r7, #40]	@ 0x28
    if (f > freqCap) f = freqCap;
 80010c8:	ed97 7a0a 	vldr	s14, [r7, #40]	@ 0x28
 80010cc:	edd7 7a08 	vldr	s15, [r7, #32]
 80010d0:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80010d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80010d8:	dd01      	ble.n	80010de <effect_frequency_wave+0x8e>
 80010da:	6a3b      	ldr	r3, [r7, #32]
 80010dc:	62bb      	str	r3, [r7, #40]	@ 0x28
    // speed: 0.1 .. 2.0 positions per frame
    float speed = 0.1f + ((f / freqCap) * 1.9f);
 80010de:	edd7 6a0a 	vldr	s13, [r7, #40]	@ 0x28
 80010e2:	ed97 7a08 	vldr	s14, [r7, #32]
 80010e6:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80010ea:	ed9f 7a4a 	vldr	s14, [pc, #296]	@ 8001214 <effect_frequency_wave+0x1c4>
 80010ee:	ee67 7a87 	vmul.f32	s15, s15, s14
 80010f2:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 8001218 <effect_frequency_wave+0x1c8>
 80010f6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80010fa:	edc7 7a07 	vstr	s15, [r7, #28]

    static float offset = 0.0f;
    offset += speed;
 80010fe:	4b47      	ldr	r3, [pc, #284]	@ (800121c <effect_frequency_wave+0x1cc>)
 8001100:	ed93 7a00 	vldr	s14, [r3]
 8001104:	edd7 7a07 	vldr	s15, [r7, #28]
 8001108:	ee77 7a27 	vadd.f32	s15, s14, s15
 800110c:	4b43      	ldr	r3, [pc, #268]	@ (800121c <effect_frequency_wave+0x1cc>)
 800110e:	edc3 7a00 	vstr	s15, [r3]
    if (offset >= (float)MAX_LED) offset -= (float)MAX_LED;
 8001112:	4b42      	ldr	r3, [pc, #264]	@ (800121c <effect_frequency_wave+0x1cc>)
 8001114:	edd3 7a00 	vldr	s15, [r3]
 8001118:	ed9f 7a41 	vldr	s14, [pc, #260]	@ 8001220 <effect_frequency_wave+0x1d0>
 800111c:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001120:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001124:	db09      	blt.n	800113a <effect_frequency_wave+0xea>
 8001126:	4b3d      	ldr	r3, [pc, #244]	@ (800121c <effect_frequency_wave+0x1cc>)
 8001128:	edd3 7a00 	vldr	s15, [r3]
 800112c:	ed9f 7a3c 	vldr	s14, [pc, #240]	@ 8001220 <effect_frequency_wave+0x1d0>
 8001130:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8001134:	4b39      	ldr	r3, [pc, #228]	@ (800121c <effect_frequency_wave+0x1cc>)
 8001136:	edc3 7a00 	vstr	s15, [r3]

    for (int i = 0; i < MAX_LED; i++) {
 800113a:	2300      	movs	r3, #0
 800113c:	627b      	str	r3, [r7, #36]	@ 0x24
 800113e:	e056      	b.n	80011ee <effect_frequency_wave+0x19e>
        // Compute a sinusoid that travels: sine argument = 2π * (i/LED + offset)
        float phase = 2.0f * PI * (((float)i / (float)MAX_LED) + (offset / (float)MAX_LED));
 8001140:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001142:	ee07 3a90 	vmov	s15, r3
 8001146:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800114a:	eddf 6a35 	vldr	s13, [pc, #212]	@ 8001220 <effect_frequency_wave+0x1d0>
 800114e:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8001152:	4b32      	ldr	r3, [pc, #200]	@ (800121c <effect_frequency_wave+0x1cc>)
 8001154:	edd3 6a00 	vldr	s13, [r3]
 8001158:	ed9f 6a31 	vldr	s12, [pc, #196]	@ 8001220 <effect_frequency_wave+0x1d0>
 800115c:	eec6 7a86 	vdiv.f32	s15, s13, s12
 8001160:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001164:	ed9f 7a2f 	vldr	s14, [pc, #188]	@ 8001224 <effect_frequency_wave+0x1d4>
 8001168:	ee67 7a87 	vmul.f32	s15, s15, s14
 800116c:	edc7 7a06 	vstr	s15, [r7, #24]
        float waveVal = (sinf(phase) + 1.0f) / 2.0f; // [0..1]
 8001170:	ed97 0a06 	vldr	s0, [r7, #24]
 8001174:	f004 ff34 	bl	8005fe0 <sinf>
 8001178:	eef0 7a40 	vmov.f32	s15, s0
 800117c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8001180:	ee37 7a87 	vadd.f32	s14, s15, s14
 8001184:	eef0 6a00 	vmov.f32	s13, #0	@ 0x40000000  2.0
 8001188:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800118c:	edc7 7a05 	vstr	s15, [r7, #20]
        float brightness = waveVal * ratioAmp;      // [0..1]
 8001190:	ed97 7a05 	vldr	s14, [r7, #20]
 8001194:	edd7 7a0b 	vldr	s15, [r7, #44]	@ 0x2c
 8001198:	ee67 7a27 	vmul.f32	s15, s14, s15
 800119c:	edc7 7a04 	vstr	s15, [r7, #16]

        // Map waveVal to a color gradient, e.g. blue→cyan
        uint8_t r = 0;
 80011a0:	2300      	movs	r3, #0
 80011a2:	73fb      	strb	r3, [r7, #15]
        uint8_t g = (uint8_t)(255.0f * brightness);
 80011a4:	edd7 7a04 	vldr	s15, [r7, #16]
 80011a8:	ed9f 7a1f 	vldr	s14, [pc, #124]	@ 8001228 <effect_frequency_wave+0x1d8>
 80011ac:	ee67 7a87 	vmul.f32	s15, s15, s14
 80011b0:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80011b4:	edc7 7a00 	vstr	s15, [r7]
 80011b8:	783b      	ldrb	r3, [r7, #0]
 80011ba:	73bb      	strb	r3, [r7, #14]
        uint8_t b = (uint8_t)(255.0f * (1.0f - brightness));
 80011bc:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80011c0:	edd7 7a04 	vldr	s15, [r7, #16]
 80011c4:	ee77 7a67 	vsub.f32	s15, s14, s15
 80011c8:	ed9f 7a17 	vldr	s14, [pc, #92]	@ 8001228 <effect_frequency_wave+0x1d8>
 80011cc:	ee67 7a87 	vmul.f32	s15, s15, s14
 80011d0:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80011d4:	edc7 7a00 	vstr	s15, [r7]
 80011d8:	783b      	ldrb	r3, [r7, #0]
 80011da:	737b      	strb	r3, [r7, #13]
        Set_LED(i, r, g, b);
 80011dc:	7bf9      	ldrb	r1, [r7, #15]
 80011de:	7bba      	ldrb	r2, [r7, #14]
 80011e0:	7b7b      	ldrb	r3, [r7, #13]
 80011e2:	6a78      	ldr	r0, [r7, #36]	@ 0x24
 80011e4:	f7ff fa48 	bl	8000678 <Set_LED>
    for (int i = 0; i < MAX_LED; i++) {
 80011e8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80011ea:	3301      	adds	r3, #1
 80011ec:	627b      	str	r3, [r7, #36]	@ 0x24
 80011ee:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80011f0:	2b35      	cmp	r3, #53	@ 0x35
 80011f2:	dda5      	ble.n	8001140 <effect_frequency_wave+0xf0>
    }
    Set_Brightness(NORMAL_BRIGHTNESS);
 80011f4:	2014      	movs	r0, #20
 80011f6:	f7ff fa6d 	bl	80006d4 <Set_Brightness>
    WS2812_Send();
 80011fa:	f7ff fae7 	bl	80007cc <WS2812_Send>
}
 80011fe:	3730      	adds	r7, #48	@ 0x30
 8001200:	46bd      	mov	sp, r7
 8001202:	bd80      	pop	{r7, pc}
 8001204:	20000000 	.word	0x20000000
 8001208:	3d4ccccd 	.word	0x3d4ccccd
 800120c:	20004dd2 	.word	0x20004dd2
 8001210:	463b8000 	.word	0x463b8000
 8001214:	3ff33333 	.word	0x3ff33333
 8001218:	3dcccccd 	.word	0x3dcccccd
 800121c:	20004ddc 	.word	0x20004ddc
 8001220:	42580000 	.word	0x42580000
 8001224:	40c90fdb 	.word	0x40c90fdb
 8001228:	437f0000 	.word	0x437f0000

0800122c <effect_genre_classify>:

void effect_genre_classify(uint16_t amplitude, uint16_t peakFrequency) {
 800122c:	b580      	push	{r7, lr}
 800122e:	b08c      	sub	sp, #48	@ 0x30
 8001230:	af00      	add	r7, sp, #0
 8001232:	4603      	mov	r3, r0
 8001234:	460a      	mov	r2, r1
 8001236:	80fb      	strh	r3, [r7, #6]
 8001238:	4613      	mov	r3, r2
 800123a:	80bb      	strh	r3, [r7, #4]
    float ratioAmp = (float)amplitude / amp_maxn;
 800123c:	88fb      	ldrh	r3, [r7, #6]
 800123e:	ee07 3a90 	vmov	s15, r3
 8001242:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8001246:	4b42      	ldr	r3, [pc, #264]	@ (8001350 <effect_genre_classify+0x124>)
 8001248:	681b      	ldr	r3, [r3, #0]
 800124a:	ee07 3a90 	vmov	s15, r3
 800124e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001252:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8001256:	edc7 7a0b 	vstr	s15, [r7, #44]	@ 0x2c
    if (ratioAmp > 1.0f) ratioAmp = 1.0f;
 800125a:	edd7 7a0b 	vldr	s15, [r7, #44]	@ 0x2c
 800125e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8001262:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001266:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800126a:	dd02      	ble.n	8001272 <effect_genre_classify+0x46>
 800126c:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 8001270:	62fb      	str	r3, [r7, #44]	@ 0x2c

    // Nếu biên độ quá nhỏ thì tắt LED
    if (amplitude < 700) {
 8001272:	88fb      	ldrh	r3, [r7, #6]
 8001274:	f5b3 7f2f 	cmp.w	r3, #700	@ 0x2bc
 8001278:	d202      	bcs.n	8001280 <effect_genre_classify+0x54>
        Turn_off_all_at_once();
 800127a:	f7ff fb32 	bl	80008e2 <Turn_off_all_at_once>
        return;
 800127e:	e064      	b.n	800134a <effect_genre_classify+0x11e>
    }

    // Nếu FFT chưa sẵn sàng (chưa đủ mẫu), tạm thời vẫn giữ màu cũ hoặc chờ đến khi fftReady=1.
    if (!fftReady) {
 8001280:	4b34      	ldr	r3, [pc, #208]	@ (8001354 <effect_genre_classify+0x128>)
 8001282:	781b      	ldrb	r3, [r3, #0]
 8001284:	2b00      	cmp	r3, #0
 8001286:	d120      	bne.n	80012ca <effect_genre_classify+0x9e>
        // Có thể hiển thị một màu mặc định, ở đây sẽ bật trắng vừa phải
        uint8_t bright = (uint8_t)(ratioAmp * 255.0f);
 8001288:	edd7 7a0b 	vldr	s15, [r7, #44]	@ 0x2c
 800128c:	ed9f 7a32 	vldr	s14, [pc, #200]	@ 8001358 <effect_genre_classify+0x12c>
 8001290:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001294:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001298:	edc7 7a00 	vstr	s15, [r7]
 800129c:	783b      	ldrb	r3, [r7, #0]
 800129e:	72fb      	strb	r3, [r7, #11]
        for (int i = 0; i < MAX_LED; i++) {
 80012a0:	2300      	movs	r3, #0
 80012a2:	62bb      	str	r3, [r7, #40]	@ 0x28
 80012a4:	e008      	b.n	80012b8 <effect_genre_classify+0x8c>
            Set_LED(i, bright, bright, bright);
 80012a6:	7af9      	ldrb	r1, [r7, #11]
 80012a8:	7afa      	ldrb	r2, [r7, #11]
 80012aa:	7afb      	ldrb	r3, [r7, #11]
 80012ac:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 80012ae:	f7ff f9e3 	bl	8000678 <Set_LED>
        for (int i = 0; i < MAX_LED; i++) {
 80012b2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80012b4:	3301      	adds	r3, #1
 80012b6:	62bb      	str	r3, [r7, #40]	@ 0x28
 80012b8:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80012ba:	2b35      	cmp	r3, #53	@ 0x35
 80012bc:	ddf3      	ble.n	80012a6 <effect_genre_classify+0x7a>
        }
        Set_Brightness(NORMAL_BRIGHTNESS);
 80012be:	2014      	movs	r0, #20
 80012c0:	f7ff fa08 	bl	80006d4 <Set_Brightness>
        WS2812_Send();
 80012c4:	f7ff fa82 	bl	80007cc <WS2812_Send>
        return;
 80012c8:	e03f      	b.n	800134a <effect_genre_classify+0x11e>
    }

    // Giả sử: nếu peakHz > 1000 Hz thì xem như “EDM”
    const uint16_t freqThreshold = 1000;
 80012ca:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 80012ce:	83fb      	strh	r3, [r7, #30]
    if (peakFrequency > freqThreshold) {
 80012d0:	88ba      	ldrh	r2, [r7, #4]
 80012d2:	8bfb      	ldrh	r3, [r7, #30]
 80012d4:	429a      	cmp	r2, r3
 80012d6:	d91c      	bls.n	8001312 <effect_genre_classify+0xe6>
        // EDM → màu nóng (gradient đỏ → da cam) brightness cao
        // Ở đây ta chỉ chọn 1 màu đỏ thẫm: (255, 60, 0)
        uint8_t R = 255;
 80012d8:	23ff      	movs	r3, #255	@ 0xff
 80012da:	74fb      	strb	r3, [r7, #19]
        uint8_t G = 60;
 80012dc:	233c      	movs	r3, #60	@ 0x3c
 80012de:	74bb      	strb	r3, [r7, #18]
        uint8_t B = 0;
 80012e0:	2300      	movs	r3, #0
 80012e2:	747b      	strb	r3, [r7, #17]
        int brightness = NORMAL_BRIGHTNESS;      // độ sáng full
 80012e4:	2314      	movs	r3, #20
 80012e6:	60fb      	str	r3, [r7, #12]
        // Nếu muốn sáng hơn nữa, có thể để brightness = NORMAL_BRIGHTNESS hoặc > tuỳ chỉnh
        for (int i = 0; i < MAX_LED; i++) {
 80012e8:	2300      	movs	r3, #0
 80012ea:	627b      	str	r3, [r7, #36]	@ 0x24
 80012ec:	e008      	b.n	8001300 <effect_genre_classify+0xd4>
            Set_LED(i, R, G, B);
 80012ee:	7cf9      	ldrb	r1, [r7, #19]
 80012f0:	7cba      	ldrb	r2, [r7, #18]
 80012f2:	7c7b      	ldrb	r3, [r7, #17]
 80012f4:	6a78      	ldr	r0, [r7, #36]	@ 0x24
 80012f6:	f7ff f9bf 	bl	8000678 <Set_LED>
        for (int i = 0; i < MAX_LED; i++) {
 80012fa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80012fc:	3301      	adds	r3, #1
 80012fe:	627b      	str	r3, [r7, #36]	@ 0x24
 8001300:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001302:	2b35      	cmp	r3, #53	@ 0x35
 8001304:	ddf3      	ble.n	80012ee <effect_genre_classify+0xc2>
        }
        Set_Brightness(brightness);
 8001306:	68f8      	ldr	r0, [r7, #12]
 8001308:	f7ff f9e4 	bl	80006d4 <Set_Brightness>
        WS2812_Send();
 800130c:	f7ff fa5e 	bl	80007cc <WS2812_Send>
 8001310:	e01b      	b.n	800134a <effect_genre_classify+0x11e>
    } else {
        // Pop/Chill → màu lạnh (gradient xanh dương → cyan) brightness thấp
        // Ta chọn (0, 100, 200) làm màu chủ đạo
        uint8_t R = 0;
 8001312:	2300      	movs	r3, #0
 8001314:	777b      	strb	r3, [r7, #29]
        uint8_t G = 100;
 8001316:	2364      	movs	r3, #100	@ 0x64
 8001318:	773b      	strb	r3, [r7, #28]
        uint8_t B = 200;
 800131a:	23c8      	movs	r3, #200	@ 0xc8
 800131c:	76fb      	strb	r3, [r7, #27]
        int brightness = NORMAL_BRIGHTNESS / 2;  // độ sáng chỉ 50%
 800131e:	230a      	movs	r3, #10
 8001320:	617b      	str	r3, [r7, #20]
        for (int i = 0; i < MAX_LED; i++) {
 8001322:	2300      	movs	r3, #0
 8001324:	623b      	str	r3, [r7, #32]
 8001326:	e008      	b.n	800133a <effect_genre_classify+0x10e>
            Set_LED(i, R, G, B);
 8001328:	7f79      	ldrb	r1, [r7, #29]
 800132a:	7f3a      	ldrb	r2, [r7, #28]
 800132c:	7efb      	ldrb	r3, [r7, #27]
 800132e:	6a38      	ldr	r0, [r7, #32]
 8001330:	f7ff f9a2 	bl	8000678 <Set_LED>
        for (int i = 0; i < MAX_LED; i++) {
 8001334:	6a3b      	ldr	r3, [r7, #32]
 8001336:	3301      	adds	r3, #1
 8001338:	623b      	str	r3, [r7, #32]
 800133a:	6a3b      	ldr	r3, [r7, #32]
 800133c:	2b35      	cmp	r3, #53	@ 0x35
 800133e:	ddf3      	ble.n	8001328 <effect_genre_classify+0xfc>
        }
        Set_Brightness(brightness);
 8001340:	6978      	ldr	r0, [r7, #20]
 8001342:	f7ff f9c7 	bl	80006d4 <Set_Brightness>
        WS2812_Send();
 8001346:	f7ff fa41 	bl	80007cc <WS2812_Send>
    }
}
 800134a:	3730      	adds	r7, #48	@ 0x30
 800134c:	46bd      	mov	sp, r7
 800134e:	bd80      	pop	{r7, pc}
 8001350:	20000000 	.word	0x20000000
 8001354:	20004dd2 	.word	0x20004dd2
 8001358:	437f0000 	.word	0x437f0000

0800135c <main>:
  *            • effect_frequency_wave
  *         Each call lasts ~50ms.
  *
  * @retval int
  */
int main(void) {
 800135c:	b580      	push	{r7, lr}
 800135e:	b084      	sub	sp, #16
 8001360:	af00      	add	r7, sp, #0
    /* USER CODE BEGIN 1 */

    /* USER CODE END 1 */

    /* MCU Configuration--------------------------------------------------------*/
    HAL_Init();
 8001362:	f000 fc13 	bl	8001b8c <HAL_Init>
    SystemClock_Config();
 8001366:	f000 f8d1 	bl	800150c <SystemClock_Config>
    MX_GPIO_Init();
 800136a:	f000 fa4b 	bl	8001804 <MX_GPIO_Init>
    MX_DMA_Init();
 800136e:	f000 fa29 	bl	80017c4 <MX_DMA_Init>
    MX_TIM1_Init();
 8001372:	f000 f987 	bl	8001684 <MX_TIM1_Init>
    MX_ADC1_Init();
 8001376:	f000 f933 	bl	80015e0 <MX_ADC1_Init>

    /* USER CODE BEGIN 2 */
    // Initialize the FFT routine for 2048‐point real FFT
    arm_rfft_fast_init_f32(&fftHandler, FFT_BUFFER_SIZE);
 800137a:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 800137e:	485b      	ldr	r0, [pc, #364]	@ (80014ec <main+0x190>)
 8001380:	f003 fe0a 	bl	8004f98 <arm_rfft_fast_init_f32>

    // Calibrate mic “middle” to remove DC offset
    calculate_middle_point();
 8001384:	f7ff f916 	bl	80005b4 <calculate_middle_point>

    /* USER CODE END 2 */

    /* Infinite loop */
    /* USER CODE BEGIN WHILE */
    uint8_t effectSelect = 0;       // which effect is currently active
 8001388:	2300      	movs	r3, #0
 800138a:	73fb      	strb	r3, [r7, #15]
    uint32_t lastEffectSwitch = 0;   // timestamp of last switch
 800138c:	2300      	movs	r3, #0
 800138e:	60bb      	str	r3, [r7, #8]
    const uint32_t effectDuration = 5000; // switch every 5 seconds
 8001390:	f241 3388 	movw	r3, #5000	@ 0x1388
 8001394:	607b      	str	r3, [r7, #4]
    while (1) {
        // 1) Acquire one ADC reading
        HAL_ADC_Start(&hadc1);
 8001396:	4856      	ldr	r0, [pc, #344]	@ (80014f0 <main+0x194>)
 8001398:	f000 fcd2 	bl	8001d40 <HAL_ADC_Start>
        if (HAL_ADC_PollForConversion(&hadc1, 10) == HAL_OK) {
 800139c:	210a      	movs	r1, #10
 800139e:	4854      	ldr	r0, [pc, #336]	@ (80014f0 <main+0x194>)
 80013a0:	f000 fdd3 	bl	8001f4a <HAL_ADC_PollForConversion>
 80013a4:	4603      	mov	r3, r0
 80013a6:	2b00      	cmp	r3, #0
 80013a8:	d10e      	bne.n	80013c8 <main+0x6c>
            uint16_t rawSample = HAL_ADC_GetValue(&hadc1);
 80013aa:	4851      	ldr	r0, [pc, #324]	@ (80014f0 <main+0x194>)
 80013ac:	f000 ff68 	bl	8002280 <HAL_ADC_GetValue>
 80013b0:	4603      	mov	r3, r0
 80013b2:	807b      	strh	r3, [r7, #2]
            amp = get_amp();                  // raw amplitude
 80013b4:	f7ff f930 	bl	8000618 <get_amp>
 80013b8:	4603      	mov	r3, r0
 80013ba:	461a      	mov	r2, r3
 80013bc:	4b4d      	ldr	r3, [pc, #308]	@ (80014f4 <main+0x198>)
 80013be:	801a      	strh	r2, [r3, #0]
            // send this sample into our FFT buffer
            record_sample_and_maybe_runFFT(rawSample);
 80013c0:	887b      	ldrh	r3, [r7, #2]
 80013c2:	4618      	mov	r0, r3
 80013c4:	f7ff fb94 	bl	8000af0 <record_sample_and_maybe_runFFT>
        }
        HAL_ADC_Stop(&hadc1);
 80013c8:	4849      	ldr	r0, [pc, #292]	@ (80014f0 <main+0x194>)
 80013ca:	f000 fd8b 	bl	8001ee4 <HAL_ADC_Stop>

        // 2) If amplitude exceeds threshold and LED is off, turn on
        if (!led_is_on && amp > 700) {
 80013ce:	4b4a      	ldr	r3, [pc, #296]	@ (80014f8 <main+0x19c>)
 80013d0:	781b      	ldrb	r3, [r3, #0]
 80013d2:	f083 0301 	eor.w	r3, r3, #1
 80013d6:	b2db      	uxtb	r3, r3
 80013d8:	2b00      	cmp	r3, #0
 80013da:	d00c      	beq.n	80013f6 <main+0x9a>
 80013dc:	4b45      	ldr	r3, [pc, #276]	@ (80014f4 <main+0x198>)
 80013de:	881b      	ldrh	r3, [r3, #0]
 80013e0:	f5b3 7f2f 	cmp.w	r3, #700	@ 0x2bc
 80013e4:	d907      	bls.n	80013f6 <main+0x9a>
            led_on_start = HAL_GetTick();
 80013e6:	f000 fc37 	bl	8001c58 <HAL_GetTick>
 80013ea:	4603      	mov	r3, r0
 80013ec:	4a43      	ldr	r2, [pc, #268]	@ (80014fc <main+0x1a0>)
 80013ee:	6013      	str	r3, [r2, #0]
            led_is_on = true;
 80013f0:	4b41      	ldr	r3, [pc, #260]	@ (80014f8 <main+0x19c>)
 80013f2:	2201      	movs	r2, #1
 80013f4:	701a      	strb	r2, [r3, #0]
        }

        // 3) While LED is on, run current effect; after 50ms, switch off
        if (led_is_on) {
 80013f6:	4b40      	ldr	r3, [pc, #256]	@ (80014f8 <main+0x19c>)
 80013f8:	781b      	ldrb	r3, [r3, #0]
 80013fa:	2b00      	cmp	r3, #0
 80013fc:	d053      	beq.n	80014a6 <main+0x14a>
            // Determine which effect chunk to run:
            switch (effectSelect) {
 80013fe:	7bfb      	ldrb	r3, [r7, #15]
 8001400:	2b05      	cmp	r3, #5
 8001402:	d83f      	bhi.n	8001484 <main+0x128>
 8001404:	a201      	add	r2, pc, #4	@ (adr r2, 800140c <main+0xb0>)
 8001406:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800140a:	bf00      	nop
 800140c:	08001425 	.word	0x08001425
 8001410:	0800142b 	.word	0x0800142b
 8001414:	0800143d 	.word	0x0800143d
 8001418:	0800144f 	.word	0x0800144f
 800141c:	08001461 	.word	0x08001461
 8001420:	08001473 	.word	0x08001473
                case 0:
                    effect_sound_color();
 8001424:	f7ff fa72 	bl	800090c <effect_sound_color>
                    break;
 8001428:	e02f      	b.n	800148a <main+0x12e>
                case 1:
                    effect_genre_classify(amp, peakHz);
 800142a:	4b32      	ldr	r3, [pc, #200]	@ (80014f4 <main+0x198>)
 800142c:	881b      	ldrh	r3, [r3, #0]
 800142e:	4a34      	ldr	r2, [pc, #208]	@ (8001500 <main+0x1a4>)
 8001430:	8812      	ldrh	r2, [r2, #0]
 8001432:	4611      	mov	r1, r2
 8001434:	4618      	mov	r0, r3
 8001436:	f7ff fef9 	bl	800122c <effect_genre_classify>
                    break;
 800143a:	e026      	b.n	800148a <main+0x12e>
                case 2:
                    effect_frequency_bar(amp, peakHz);
 800143c:	4b2d      	ldr	r3, [pc, #180]	@ (80014f4 <main+0x198>)
 800143e:	881b      	ldrh	r3, [r3, #0]
 8001440:	4a2f      	ldr	r2, [pc, #188]	@ (8001500 <main+0x1a4>)
 8001442:	8812      	ldrh	r2, [r2, #0]
 8001444:	4611      	mov	r1, r2
 8001446:	4618      	mov	r0, r3
 8001448:	f7ff fbea 	bl	8000c20 <effect_frequency_bar>
                    break;
 800144c:	e01d      	b.n	800148a <main+0x12e>
                case 3:
                    effect_low_high_split(amp, peakHz);
 800144e:	4b29      	ldr	r3, [pc, #164]	@ (80014f4 <main+0x198>)
 8001450:	881b      	ldrh	r3, [r3, #0]
 8001452:	4a2b      	ldr	r2, [pc, #172]	@ (8001500 <main+0x1a4>)
 8001454:	8812      	ldrh	r2, [r2, #0]
 8001456:	4611      	mov	r1, r2
 8001458:	4618      	mov	r0, r3
 800145a:	f7ff fc89 	bl	8000d70 <effect_low_high_split>
                    break;
 800145e:	e014      	b.n	800148a <main+0x12e>
                case 4:
                    effect_frequency_pulse(amp, peakHz);
 8001460:	4b24      	ldr	r3, [pc, #144]	@ (80014f4 <main+0x198>)
 8001462:	881b      	ldrh	r3, [r3, #0]
 8001464:	4a26      	ldr	r2, [pc, #152]	@ (8001500 <main+0x1a4>)
 8001466:	8812      	ldrh	r2, [r2, #0]
 8001468:	4611      	mov	r1, r2
 800146a:	4618      	mov	r0, r3
 800146c:	f7ff fd26 	bl	8000ebc <effect_frequency_pulse>
                    break;
 8001470:	e00b      	b.n	800148a <main+0x12e>
                case 5:
                    effect_frequency_wave(amp, peakHz);
 8001472:	4b20      	ldr	r3, [pc, #128]	@ (80014f4 <main+0x198>)
 8001474:	881b      	ldrh	r3, [r3, #0]
 8001476:	4a22      	ldr	r2, [pc, #136]	@ (8001500 <main+0x1a4>)
 8001478:	8812      	ldrh	r2, [r2, #0]
 800147a:	4611      	mov	r1, r2
 800147c:	4618      	mov	r0, r3
 800147e:	f7ff fde7 	bl	8001050 <effect_frequency_wave>
                    break;
 8001482:	e002      	b.n	800148a <main+0x12e>
                default:
                    Turn_off_all_at_once();
 8001484:	f7ff fa2d 	bl	80008e2 <Turn_off_all_at_once>
                    break;
 8001488:	bf00      	nop
            }
            if ((HAL_GetTick() - led_on_start) >= 50) {
 800148a:	f000 fbe5 	bl	8001c58 <HAL_GetTick>
 800148e:	4602      	mov	r2, r0
 8001490:	4b1a      	ldr	r3, [pc, #104]	@ (80014fc <main+0x1a0>)
 8001492:	681b      	ldr	r3, [r3, #0]
 8001494:	1ad3      	subs	r3, r2, r3
 8001496:	2b31      	cmp	r3, #49	@ 0x31
 8001498:	d907      	bls.n	80014aa <main+0x14e>
                Turn_off_all_at_once();
 800149a:	f7ff fa22 	bl	80008e2 <Turn_off_all_at_once>
                led_is_on = false;
 800149e:	4b16      	ldr	r3, [pc, #88]	@ (80014f8 <main+0x19c>)
 80014a0:	2200      	movs	r2, #0
 80014a2:	701a      	strb	r2, [r3, #0]
 80014a4:	e001      	b.n	80014aa <main+0x14e>
            }
        } else {
            // If no sound trigger, keep LEDs off
            Turn_off_all_at_once();
 80014a6:	f7ff fa1c 	bl	80008e2 <Turn_off_all_at_once>
        }

        // 4) Every effectDuration ms, advance to next effect
        if ((HAL_GetTick() - lastEffectSwitch) >= effectDuration) {
 80014aa:	f000 fbd5 	bl	8001c58 <HAL_GetTick>
 80014ae:	4602      	mov	r2, r0
 80014b0:	68bb      	ldr	r3, [r7, #8]
 80014b2:	1ad3      	subs	r3, r2, r3
 80014b4:	687a      	ldr	r2, [r7, #4]
 80014b6:	429a      	cmp	r2, r3
 80014b8:	d813      	bhi.n	80014e2 <main+0x186>
            lastEffectSwitch = HAL_GetTick();
 80014ba:	f000 fbcd 	bl	8001c58 <HAL_GetTick>
 80014be:	60b8      	str	r0, [r7, #8]
            effectSelect = (effectSelect + 1) % 6;
 80014c0:	7bfb      	ldrb	r3, [r7, #15]
 80014c2:	1c5a      	adds	r2, r3, #1
 80014c4:	4b0f      	ldr	r3, [pc, #60]	@ (8001504 <main+0x1a8>)
 80014c6:	fb83 3102 	smull	r3, r1, r3, r2
 80014ca:	17d3      	asrs	r3, r2, #31
 80014cc:	1ac9      	subs	r1, r1, r3
 80014ce:	460b      	mov	r3, r1
 80014d0:	005b      	lsls	r3, r3, #1
 80014d2:	440b      	add	r3, r1
 80014d4:	005b      	lsls	r3, r3, #1
 80014d6:	1ad1      	subs	r1, r2, r3
 80014d8:	460b      	mov	r3, r1
 80014da:	73fb      	strb	r3, [r7, #15]
            // reset fftReady so that next effect waits for fresh FFT
            fftReady = 0;
 80014dc:	4b0a      	ldr	r3, [pc, #40]	@ (8001508 <main+0x1ac>)
 80014de:	2200      	movs	r2, #0
 80014e0:	701a      	strb	r2, [r3, #0]
        }

        HAL_Delay(1);
 80014e2:	2001      	movs	r0, #1
 80014e4:	f000 fbc4 	bl	8001c70 <HAL_Delay>
        HAL_ADC_Start(&hadc1);
 80014e8:	e755      	b.n	8001396 <main+0x3a>
 80014ea:	bf00      	nop
 80014ec:	20000db0 	.word	0x20000db0
 80014f0:	2000007c 	.word	0x2000007c
 80014f4:	2000016c 	.word	0x2000016c
 80014f8:	2000016e 	.word	0x2000016e
 80014fc:	20000170 	.word	0x20000170
 8001500:	20004dd0 	.word	0x20004dd0
 8001504:	2aaaaaab 	.word	0x2aaaaaab
 8001508:	20004dd2 	.word	0x20004dd2

0800150c <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 800150c:	b580      	push	{r7, lr}
 800150e:	b094      	sub	sp, #80	@ 0x50
 8001510:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001512:	f107 0320 	add.w	r3, r7, #32
 8001516:	2230      	movs	r2, #48	@ 0x30
 8001518:	2100      	movs	r1, #0
 800151a:	4618      	mov	r0, r3
 800151c:	f004 fd10 	bl	8005f40 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001520:	f107 030c 	add.w	r3, r7, #12
 8001524:	2200      	movs	r2, #0
 8001526:	601a      	str	r2, [r3, #0]
 8001528:	605a      	str	r2, [r3, #4]
 800152a:	609a      	str	r2, [r3, #8]
 800152c:	60da      	str	r2, [r3, #12]
 800152e:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8001530:	2300      	movs	r3, #0
 8001532:	60bb      	str	r3, [r7, #8]
 8001534:	4b28      	ldr	r3, [pc, #160]	@ (80015d8 <SystemClock_Config+0xcc>)
 8001536:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001538:	4a27      	ldr	r2, [pc, #156]	@ (80015d8 <SystemClock_Config+0xcc>)
 800153a:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800153e:	6413      	str	r3, [r2, #64]	@ 0x40
 8001540:	4b25      	ldr	r3, [pc, #148]	@ (80015d8 <SystemClock_Config+0xcc>)
 8001542:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001544:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001548:	60bb      	str	r3, [r7, #8]
 800154a:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800154c:	2300      	movs	r3, #0
 800154e:	607b      	str	r3, [r7, #4]
 8001550:	4b22      	ldr	r3, [pc, #136]	@ (80015dc <SystemClock_Config+0xd0>)
 8001552:	681b      	ldr	r3, [r3, #0]
 8001554:	4a21      	ldr	r2, [pc, #132]	@ (80015dc <SystemClock_Config+0xd0>)
 8001556:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800155a:	6013      	str	r3, [r2, #0]
 800155c:	4b1f      	ldr	r3, [pc, #124]	@ (80015dc <SystemClock_Config+0xd0>)
 800155e:	681b      	ldr	r3, [r3, #0]
 8001560:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8001564:	607b      	str	r3, [r7, #4]
 8001566:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8001568:	2302      	movs	r3, #2
 800156a:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 800156c:	2301      	movs	r3, #1
 800156e:	62fb      	str	r3, [r7, #44]	@ 0x2c
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8001570:	2310      	movs	r3, #16
 8001572:	633b      	str	r3, [r7, #48]	@ 0x30
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001574:	2302      	movs	r3, #2
 8001576:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 8001578:	2300      	movs	r3, #0
 800157a:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLM = 8;
 800157c:	2308      	movs	r3, #8
 800157e:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLN = 72;
 8001580:	2348      	movs	r3, #72	@ 0x48
 8001582:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001584:	2302      	movs	r3, #2
 8001586:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8001588:	2304      	movs	r3, #4
 800158a:	64fb      	str	r3, [r7, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800158c:	f107 0320 	add.w	r3, r7, #32
 8001590:	4618      	mov	r0, r3
 8001592:	f001 ff09 	bl	80033a8 <HAL_RCC_OscConfig>
 8001596:	4603      	mov	r3, r0
 8001598:	2b00      	cmp	r3, #0
 800159a:	d001      	beq.n	80015a0 <SystemClock_Config+0x94>
  {
    Error_Handler();
 800159c:	f000 f96e 	bl	800187c <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80015a0:	230f      	movs	r3, #15
 80015a2:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80015a4:	2302      	movs	r3, #2
 80015a6:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80015a8:	2300      	movs	r3, #0
 80015aa:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 80015ac:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80015b0:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80015b2:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80015b6:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 80015b8:	f107 030c 	add.w	r3, r7, #12
 80015bc:	2102      	movs	r1, #2
 80015be:	4618      	mov	r0, r3
 80015c0:	f002 f96a 	bl	8003898 <HAL_RCC_ClockConfig>
 80015c4:	4603      	mov	r3, r0
 80015c6:	2b00      	cmp	r3, #0
 80015c8:	d001      	beq.n	80015ce <SystemClock_Config+0xc2>
  {
    Error_Handler();
 80015ca:	f000 f957 	bl	800187c <Error_Handler>
  }
}
 80015ce:	bf00      	nop
 80015d0:	3750      	adds	r7, #80	@ 0x50
 80015d2:	46bd      	mov	sp, r7
 80015d4:	bd80      	pop	{r7, pc}
 80015d6:	bf00      	nop
 80015d8:	40023800 	.word	0x40023800
 80015dc:	40007000 	.word	0x40007000

080015e0 <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 80015e0:	b580      	push	{r7, lr}
 80015e2:	b084      	sub	sp, #16
 80015e4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 80015e6:	463b      	mov	r3, r7
 80015e8:	2200      	movs	r2, #0
 80015ea:	601a      	str	r2, [r3, #0]
 80015ec:	605a      	str	r2, [r3, #4]
 80015ee:	609a      	str	r2, [r3, #8]
 80015f0:	60da      	str	r2, [r3, #12]

  /* USER CODE END ADC1_Init 1 */

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc1.Instance = ADC1;
 80015f2:	4b21      	ldr	r3, [pc, #132]	@ (8001678 <MX_ADC1_Init+0x98>)
 80015f4:	4a21      	ldr	r2, [pc, #132]	@ (800167c <MX_ADC1_Init+0x9c>)
 80015f6:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 80015f8:	4b1f      	ldr	r3, [pc, #124]	@ (8001678 <MX_ADC1_Init+0x98>)
 80015fa:	2200      	movs	r2, #0
 80015fc:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 80015fe:	4b1e      	ldr	r3, [pc, #120]	@ (8001678 <MX_ADC1_Init+0x98>)
 8001600:	2200      	movs	r2, #0
 8001602:	609a      	str	r2, [r3, #8]
  hadc1.Init.ScanConvMode = DISABLE;
 8001604:	4b1c      	ldr	r3, [pc, #112]	@ (8001678 <MX_ADC1_Init+0x98>)
 8001606:	2200      	movs	r2, #0
 8001608:	611a      	str	r2, [r3, #16]
  hadc1.Init.ContinuousConvMode = DISABLE;
 800160a:	4b1b      	ldr	r3, [pc, #108]	@ (8001678 <MX_ADC1_Init+0x98>)
 800160c:	2200      	movs	r2, #0
 800160e:	761a      	strb	r2, [r3, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 8001610:	4b19      	ldr	r3, [pc, #100]	@ (8001678 <MX_ADC1_Init+0x98>)
 8001612:	2200      	movs	r2, #0
 8001614:	f883 2020 	strb.w	r2, [r3, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8001618:	4b17      	ldr	r3, [pc, #92]	@ (8001678 <MX_ADC1_Init+0x98>)
 800161a:	2200      	movs	r2, #0
 800161c:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 800161e:	4b16      	ldr	r3, [pc, #88]	@ (8001678 <MX_ADC1_Init+0x98>)
 8001620:	4a17      	ldr	r2, [pc, #92]	@ (8001680 <MX_ADC1_Init+0xa0>)
 8001622:	629a      	str	r2, [r3, #40]	@ 0x28
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8001624:	4b14      	ldr	r3, [pc, #80]	@ (8001678 <MX_ADC1_Init+0x98>)
 8001626:	2200      	movs	r2, #0
 8001628:	60da      	str	r2, [r3, #12]
  hadc1.Init.NbrOfConversion = 1;
 800162a:	4b13      	ldr	r3, [pc, #76]	@ (8001678 <MX_ADC1_Init+0x98>)
 800162c:	2201      	movs	r2, #1
 800162e:	61da      	str	r2, [r3, #28]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 8001630:	4b11      	ldr	r3, [pc, #68]	@ (8001678 <MX_ADC1_Init+0x98>)
 8001632:	2200      	movs	r2, #0
 8001634:	f883 2030 	strb.w	r2, [r3, #48]	@ 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8001638:	4b0f      	ldr	r3, [pc, #60]	@ (8001678 <MX_ADC1_Init+0x98>)
 800163a:	2201      	movs	r2, #1
 800163c:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 800163e:	480e      	ldr	r0, [pc, #56]	@ (8001678 <MX_ADC1_Init+0x98>)
 8001640:	f000 fb3a 	bl	8001cb8 <HAL_ADC_Init>
 8001644:	4603      	mov	r3, r0
 8001646:	2b00      	cmp	r3, #0
 8001648:	d001      	beq.n	800164e <MX_ADC1_Init+0x6e>
  {
    Error_Handler();
 800164a:	f000 f917 	bl	800187c <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_0;
 800164e:	2300      	movs	r3, #0
 8001650:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 1;
 8001652:	2301      	movs	r3, #1
 8001654:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_28CYCLES;
 8001656:	2302      	movs	r3, #2
 8001658:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 800165a:	463b      	mov	r3, r7
 800165c:	4619      	mov	r1, r3
 800165e:	4806      	ldr	r0, [pc, #24]	@ (8001678 <MX_ADC1_Init+0x98>)
 8001660:	f000 fe3a 	bl	80022d8 <HAL_ADC_ConfigChannel>
 8001664:	4603      	mov	r3, r0
 8001666:	2b00      	cmp	r3, #0
 8001668:	d001      	beq.n	800166e <MX_ADC1_Init+0x8e>
  {
    Error_Handler();
 800166a:	f000 f907 	bl	800187c <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 800166e:	bf00      	nop
 8001670:	3710      	adds	r7, #16
 8001672:	46bd      	mov	sp, r7
 8001674:	bd80      	pop	{r7, pc}
 8001676:	bf00      	nop
 8001678:	2000007c 	.word	0x2000007c
 800167c:	40012000 	.word	0x40012000
 8001680:	0f000001 	.word	0x0f000001

08001684 <MX_TIM1_Init>:
  * @brief TIM1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM1_Init(void)
{
 8001684:	b580      	push	{r7, lr}
 8001686:	b096      	sub	sp, #88	@ 0x58
 8001688:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800168a:	f107 0348 	add.w	r3, r7, #72	@ 0x48
 800168e:	2200      	movs	r2, #0
 8001690:	601a      	str	r2, [r3, #0]
 8001692:	605a      	str	r2, [r3, #4]
 8001694:	609a      	str	r2, [r3, #8]
 8001696:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001698:	f107 0340 	add.w	r3, r7, #64	@ 0x40
 800169c:	2200      	movs	r2, #0
 800169e:	601a      	str	r2, [r3, #0]
 80016a0:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 80016a2:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80016a6:	2200      	movs	r2, #0
 80016a8:	601a      	str	r2, [r3, #0]
 80016aa:	605a      	str	r2, [r3, #4]
 80016ac:	609a      	str	r2, [r3, #8]
 80016ae:	60da      	str	r2, [r3, #12]
 80016b0:	611a      	str	r2, [r3, #16]
 80016b2:	615a      	str	r2, [r3, #20]
 80016b4:	619a      	str	r2, [r3, #24]
  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 80016b6:	1d3b      	adds	r3, r7, #4
 80016b8:	2220      	movs	r2, #32
 80016ba:	2100      	movs	r1, #0
 80016bc:	4618      	mov	r0, r3
 80016be:	f004 fc3f 	bl	8005f40 <memset>

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 80016c2:	4b3e      	ldr	r3, [pc, #248]	@ (80017bc <MX_TIM1_Init+0x138>)
 80016c4:	4a3e      	ldr	r2, [pc, #248]	@ (80017c0 <MX_TIM1_Init+0x13c>)
 80016c6:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 0;
 80016c8:	4b3c      	ldr	r3, [pc, #240]	@ (80017bc <MX_TIM1_Init+0x138>)
 80016ca:	2200      	movs	r2, #0
 80016cc:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 80016ce:	4b3b      	ldr	r3, [pc, #236]	@ (80017bc <MX_TIM1_Init+0x138>)
 80016d0:	2200      	movs	r2, #0
 80016d2:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 90 - 1;
 80016d4:	4b39      	ldr	r3, [pc, #228]	@ (80017bc <MX_TIM1_Init+0x138>)
 80016d6:	2259      	movs	r2, #89	@ 0x59
 80016d8:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80016da:	4b38      	ldr	r3, [pc, #224]	@ (80017bc <MX_TIM1_Init+0x138>)
 80016dc:	2200      	movs	r2, #0
 80016de:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 80016e0:	4b36      	ldr	r3, [pc, #216]	@ (80017bc <MX_TIM1_Init+0x138>)
 80016e2:	2200      	movs	r2, #0
 80016e4:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80016e6:	4b35      	ldr	r3, [pc, #212]	@ (80017bc <MX_TIM1_Init+0x138>)
 80016e8:	2200      	movs	r2, #0
 80016ea:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 80016ec:	4833      	ldr	r0, [pc, #204]	@ (80017bc <MX_TIM1_Init+0x138>)
 80016ee:	f002 fabf 	bl	8003c70 <HAL_TIM_Base_Init>
 80016f2:	4603      	mov	r3, r0
 80016f4:	2b00      	cmp	r3, #0
 80016f6:	d001      	beq.n	80016fc <MX_TIM1_Init+0x78>
  {
    Error_Handler();
 80016f8:	f000 f8c0 	bl	800187c <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80016fc:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001700:	64bb      	str	r3, [r7, #72]	@ 0x48
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 8001702:	f107 0348 	add.w	r3, r7, #72	@ 0x48
 8001706:	4619      	mov	r1, r3
 8001708:	482c      	ldr	r0, [pc, #176]	@ (80017bc <MX_TIM1_Init+0x138>)
 800170a:	f002 feb5 	bl	8004478 <HAL_TIM_ConfigClockSource>
 800170e:	4603      	mov	r3, r0
 8001710:	2b00      	cmp	r3, #0
 8001712:	d001      	beq.n	8001718 <MX_TIM1_Init+0x94>
  {
    Error_Handler();
 8001714:	f000 f8b2 	bl	800187c <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 8001718:	4828      	ldr	r0, [pc, #160]	@ (80017bc <MX_TIM1_Init+0x138>)
 800171a:	f002 faf8 	bl	8003d0e <HAL_TIM_PWM_Init>
 800171e:	4603      	mov	r3, r0
 8001720:	2b00      	cmp	r3, #0
 8001722:	d001      	beq.n	8001728 <MX_TIM1_Init+0xa4>
  {
    Error_Handler();
 8001724:	f000 f8aa 	bl	800187c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001728:	2300      	movs	r3, #0
 800172a:	643b      	str	r3, [r7, #64]	@ 0x40
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800172c:	2300      	movs	r3, #0
 800172e:	647b      	str	r3, [r7, #68]	@ 0x44
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8001730:	f107 0340 	add.w	r3, r7, #64	@ 0x40
 8001734:	4619      	mov	r1, r3
 8001736:	4821      	ldr	r0, [pc, #132]	@ (80017bc <MX_TIM1_Init+0x138>)
 8001738:	f003 fb60 	bl	8004dfc <HAL_TIMEx_MasterConfigSynchronization>
 800173c:	4603      	mov	r3, r0
 800173e:	2b00      	cmp	r3, #0
 8001740:	d001      	beq.n	8001746 <MX_TIM1_Init+0xc2>
  {
    Error_Handler();
 8001742:	f000 f89b 	bl	800187c <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001746:	2360      	movs	r3, #96	@ 0x60
 8001748:	627b      	str	r3, [r7, #36]	@ 0x24
  sConfigOC.Pulse = 0;
 800174a:	2300      	movs	r3, #0
 800174c:	62bb      	str	r3, [r7, #40]	@ 0x28
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 800174e:	2300      	movs	r3, #0
 8001750:	62fb      	str	r3, [r7, #44]	@ 0x2c
  sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 8001752:	2300      	movs	r3, #0
 8001754:	633b      	str	r3, [r7, #48]	@ 0x30
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001756:	2300      	movs	r3, #0
 8001758:	637b      	str	r3, [r7, #52]	@ 0x34
  sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 800175a:	2300      	movs	r3, #0
 800175c:	63bb      	str	r3, [r7, #56]	@ 0x38
  sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 800175e:	2300      	movs	r3, #0
 8001760:	63fb      	str	r3, [r7, #60]	@ 0x3c
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001762:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8001766:	2200      	movs	r2, #0
 8001768:	4619      	mov	r1, r3
 800176a:	4814      	ldr	r0, [pc, #80]	@ (80017bc <MX_TIM1_Init+0x138>)
 800176c:	f002 fdc2 	bl	80042f4 <HAL_TIM_PWM_ConfigChannel>
 8001770:	4603      	mov	r3, r0
 8001772:	2b00      	cmp	r3, #0
 8001774:	d001      	beq.n	800177a <MX_TIM1_Init+0xf6>
  {
    Error_Handler();
 8001776:	f000 f881 	bl	800187c <Error_Handler>
  }
  sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 800177a:	2300      	movs	r3, #0
 800177c:	607b      	str	r3, [r7, #4]
  sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 800177e:	2300      	movs	r3, #0
 8001780:	60bb      	str	r3, [r7, #8]
  sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 8001782:	2300      	movs	r3, #0
 8001784:	60fb      	str	r3, [r7, #12]
  sBreakDeadTimeConfig.DeadTime = 0;
 8001786:	2300      	movs	r3, #0
 8001788:	613b      	str	r3, [r7, #16]
  sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 800178a:	2300      	movs	r3, #0
 800178c:	617b      	str	r3, [r7, #20]
  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 800178e:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8001792:	61bb      	str	r3, [r7, #24]
  sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 8001794:	2300      	movs	r3, #0
 8001796:	623b      	str	r3, [r7, #32]
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 8001798:	1d3b      	adds	r3, r7, #4
 800179a:	4619      	mov	r1, r3
 800179c:	4807      	ldr	r0, [pc, #28]	@ (80017bc <MX_TIM1_Init+0x138>)
 800179e:	f003 fba9 	bl	8004ef4 <HAL_TIMEx_ConfigBreakDeadTime>
 80017a2:	4603      	mov	r3, r0
 80017a4:	2b00      	cmp	r3, #0
 80017a6:	d001      	beq.n	80017ac <MX_TIM1_Init+0x128>
  {
    Error_Handler();
 80017a8:	f000 f868 	bl	800187c <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */
  HAL_TIM_MspPostInit(&htim1);
 80017ac:	4803      	ldr	r0, [pc, #12]	@ (80017bc <MX_TIM1_Init+0x138>)
 80017ae:	f000 f933 	bl	8001a18 <HAL_TIM_MspPostInit>

}
 80017b2:	bf00      	nop
 80017b4:	3758      	adds	r7, #88	@ 0x58
 80017b6:	46bd      	mov	sp, r7
 80017b8:	bd80      	pop	{r7, pc}
 80017ba:	bf00      	nop
 80017bc:	200000c4 	.word	0x200000c4
 80017c0:	40010000 	.word	0x40010000

080017c4 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 80017c4:	b580      	push	{r7, lr}
 80017c6:	b082      	sub	sp, #8
 80017c8:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA2_CLK_ENABLE();
 80017ca:	2300      	movs	r3, #0
 80017cc:	607b      	str	r3, [r7, #4]
 80017ce:	4b0c      	ldr	r3, [pc, #48]	@ (8001800 <MX_DMA_Init+0x3c>)
 80017d0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80017d2:	4a0b      	ldr	r2, [pc, #44]	@ (8001800 <MX_DMA_Init+0x3c>)
 80017d4:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 80017d8:	6313      	str	r3, [r2, #48]	@ 0x30
 80017da:	4b09      	ldr	r3, [pc, #36]	@ (8001800 <MX_DMA_Init+0x3c>)
 80017dc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80017de:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80017e2:	607b      	str	r3, [r7, #4]
 80017e4:	687b      	ldr	r3, [r7, #4]

  /* DMA interrupt init */
  /* DMA2_Stream1_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA2_Stream1_IRQn, 5, 0);
 80017e6:	2200      	movs	r2, #0
 80017e8:	2105      	movs	r1, #5
 80017ea:	2039      	movs	r0, #57	@ 0x39
 80017ec:	f001 f877 	bl	80028de <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream1_IRQn);
 80017f0:	2039      	movs	r0, #57	@ 0x39
 80017f2:	f001 f890 	bl	8002916 <HAL_NVIC_EnableIRQ>

}
 80017f6:	bf00      	nop
 80017f8:	3708      	adds	r7, #8
 80017fa:	46bd      	mov	sp, r7
 80017fc:	bd80      	pop	{r7, pc}
 80017fe:	bf00      	nop
 8001800:	40023800 	.word	0x40023800

08001804 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8001804:	b580      	push	{r7, lr}
 8001806:	b088      	sub	sp, #32
 8001808:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MX_GPIO_Init_1 */

  /* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800180a:	2300      	movs	r3, #0
 800180c:	60bb      	str	r3, [r7, #8]
 800180e:	4b19      	ldr	r3, [pc, #100]	@ (8001874 <MX_GPIO_Init+0x70>)
 8001810:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001812:	4a18      	ldr	r2, [pc, #96]	@ (8001874 <MX_GPIO_Init+0x70>)
 8001814:	f043 0301 	orr.w	r3, r3, #1
 8001818:	6313      	str	r3, [r2, #48]	@ 0x30
 800181a:	4b16      	ldr	r3, [pc, #88]	@ (8001874 <MX_GPIO_Init+0x70>)
 800181c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800181e:	f003 0301 	and.w	r3, r3, #1
 8001822:	60bb      	str	r3, [r7, #8]
 8001824:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001826:	2300      	movs	r3, #0
 8001828:	607b      	str	r3, [r7, #4]
 800182a:	4b12      	ldr	r3, [pc, #72]	@ (8001874 <MX_GPIO_Init+0x70>)
 800182c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800182e:	4a11      	ldr	r2, [pc, #68]	@ (8001874 <MX_GPIO_Init+0x70>)
 8001830:	f043 0310 	orr.w	r3, r3, #16
 8001834:	6313      	str	r3, [r2, #48]	@ 0x30
 8001836:	4b0f      	ldr	r3, [pc, #60]	@ (8001874 <MX_GPIO_Init+0x70>)
 8001838:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800183a:	f003 0310 	and.w	r3, r3, #16
 800183e:	607b      	str	r3, [r7, #4]
 8001840:	687b      	ldr	r3, [r7, #4]

  /* USER CODE BEGIN MX_GPIO_Init_2 */
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001842:	f107 030c 	add.w	r3, r7, #12
 8001846:	2200      	movs	r2, #0
 8001848:	601a      	str	r2, [r3, #0]
 800184a:	605a      	str	r2, [r3, #4]
 800184c:	609a      	str	r2, [r3, #8]
 800184e:	60da      	str	r2, [r3, #12]
 8001850:	611a      	str	r2, [r3, #16]
     GPIO_InitStruct.Pin  = GPIO_PIN_0;
 8001852:	2301      	movs	r3, #1
 8001854:	60fb      	str	r3, [r7, #12]
     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001856:	2303      	movs	r3, #3
 8001858:	613b      	str	r3, [r7, #16]
     GPIO_InitStruct.Pull = GPIO_NOPULL;
 800185a:	2300      	movs	r3, #0
 800185c:	617b      	str	r3, [r7, #20]
     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800185e:	f107 030c 	add.w	r3, r7, #12
 8001862:	4619      	mov	r1, r3
 8001864:	4804      	ldr	r0, [pc, #16]	@ (8001878 <MX_GPIO_Init+0x74>)
 8001866:	f001 fc03 	bl	8003070 <HAL_GPIO_Init>
  /* USER CODE END MX_GPIO_Init_2 */
}
 800186a:	bf00      	nop
 800186c:	3720      	adds	r7, #32
 800186e:	46bd      	mov	sp, r7
 8001870:	bd80      	pop	{r7, pc}
 8001872:	bf00      	nop
 8001874:	40023800 	.word	0x40023800
 8001878:	40020000 	.word	0x40020000

0800187c <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 800187c:	b480      	push	{r7}
 800187e:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8001880:	b672      	cpsid	i
}
 8001882:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8001884:	bf00      	nop
 8001886:	e7fd      	b.n	8001884 <Error_Handler+0x8>

08001888 <HAL_MspInit>:
 8001888:	b480      	push	{r7}
 800188a:	b083      	sub	sp, #12
 800188c:	af00      	add	r7, sp, #0
 800188e:	2300      	movs	r3, #0
 8001890:	607b      	str	r3, [r7, #4]
 8001892:	4b10      	ldr	r3, [pc, #64]	@ (80018d4 <HAL_MspInit+0x4c>)
 8001894:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001896:	4a0f      	ldr	r2, [pc, #60]	@ (80018d4 <HAL_MspInit+0x4c>)
 8001898:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800189c:	6453      	str	r3, [r2, #68]	@ 0x44
 800189e:	4b0d      	ldr	r3, [pc, #52]	@ (80018d4 <HAL_MspInit+0x4c>)
 80018a0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80018a2:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80018a6:	607b      	str	r3, [r7, #4]
 80018a8:	687b      	ldr	r3, [r7, #4]
 80018aa:	2300      	movs	r3, #0
 80018ac:	603b      	str	r3, [r7, #0]
 80018ae:	4b09      	ldr	r3, [pc, #36]	@ (80018d4 <HAL_MspInit+0x4c>)
 80018b0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80018b2:	4a08      	ldr	r2, [pc, #32]	@ (80018d4 <HAL_MspInit+0x4c>)
 80018b4:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80018b8:	6413      	str	r3, [r2, #64]	@ 0x40
 80018ba:	4b06      	ldr	r3, [pc, #24]	@ (80018d4 <HAL_MspInit+0x4c>)
 80018bc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80018be:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80018c2:	603b      	str	r3, [r7, #0]
 80018c4:	683b      	ldr	r3, [r7, #0]
 80018c6:	bf00      	nop
 80018c8:	370c      	adds	r7, #12
 80018ca:	46bd      	mov	sp, r7
 80018cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018d0:	4770      	bx	lr
 80018d2:	bf00      	nop
 80018d4:	40023800 	.word	0x40023800

080018d8 <HAL_ADC_MspInit>:
 80018d8:	b580      	push	{r7, lr}
 80018da:	b08a      	sub	sp, #40	@ 0x28
 80018dc:	af00      	add	r7, sp, #0
 80018de:	6078      	str	r0, [r7, #4]
 80018e0:	f107 0314 	add.w	r3, r7, #20
 80018e4:	2200      	movs	r2, #0
 80018e6:	601a      	str	r2, [r3, #0]
 80018e8:	605a      	str	r2, [r3, #4]
 80018ea:	609a      	str	r2, [r3, #8]
 80018ec:	60da      	str	r2, [r3, #12]
 80018ee:	611a      	str	r2, [r3, #16]
 80018f0:	687b      	ldr	r3, [r7, #4]
 80018f2:	681b      	ldr	r3, [r3, #0]
 80018f4:	4a1b      	ldr	r2, [pc, #108]	@ (8001964 <HAL_ADC_MspInit+0x8c>)
 80018f6:	4293      	cmp	r3, r2
 80018f8:	d12f      	bne.n	800195a <HAL_ADC_MspInit+0x82>
 80018fa:	2300      	movs	r3, #0
 80018fc:	613b      	str	r3, [r7, #16]
 80018fe:	4b1a      	ldr	r3, [pc, #104]	@ (8001968 <HAL_ADC_MspInit+0x90>)
 8001900:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001902:	4a19      	ldr	r2, [pc, #100]	@ (8001968 <HAL_ADC_MspInit+0x90>)
 8001904:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001908:	6453      	str	r3, [r2, #68]	@ 0x44
 800190a:	4b17      	ldr	r3, [pc, #92]	@ (8001968 <HAL_ADC_MspInit+0x90>)
 800190c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800190e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8001912:	613b      	str	r3, [r7, #16]
 8001914:	693b      	ldr	r3, [r7, #16]
 8001916:	2300      	movs	r3, #0
 8001918:	60fb      	str	r3, [r7, #12]
 800191a:	4b13      	ldr	r3, [pc, #76]	@ (8001968 <HAL_ADC_MspInit+0x90>)
 800191c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800191e:	4a12      	ldr	r2, [pc, #72]	@ (8001968 <HAL_ADC_MspInit+0x90>)
 8001920:	f043 0301 	orr.w	r3, r3, #1
 8001924:	6313      	str	r3, [r2, #48]	@ 0x30
 8001926:	4b10      	ldr	r3, [pc, #64]	@ (8001968 <HAL_ADC_MspInit+0x90>)
 8001928:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800192a:	f003 0301 	and.w	r3, r3, #1
 800192e:	60fb      	str	r3, [r7, #12]
 8001930:	68fb      	ldr	r3, [r7, #12]
 8001932:	2301      	movs	r3, #1
 8001934:	617b      	str	r3, [r7, #20]
 8001936:	2303      	movs	r3, #3
 8001938:	61bb      	str	r3, [r7, #24]
 800193a:	2300      	movs	r3, #0
 800193c:	61fb      	str	r3, [r7, #28]
 800193e:	f107 0314 	add.w	r3, r7, #20
 8001942:	4619      	mov	r1, r3
 8001944:	4809      	ldr	r0, [pc, #36]	@ (800196c <HAL_ADC_MspInit+0x94>)
 8001946:	f001 fb93 	bl	8003070 <HAL_GPIO_Init>
 800194a:	2200      	movs	r2, #0
 800194c:	2100      	movs	r1, #0
 800194e:	2012      	movs	r0, #18
 8001950:	f000 ffc5 	bl	80028de <HAL_NVIC_SetPriority>
 8001954:	2012      	movs	r0, #18
 8001956:	f000 ffde 	bl	8002916 <HAL_NVIC_EnableIRQ>
 800195a:	bf00      	nop
 800195c:	3728      	adds	r7, #40	@ 0x28
 800195e:	46bd      	mov	sp, r7
 8001960:	bd80      	pop	{r7, pc}
 8001962:	bf00      	nop
 8001964:	40012000 	.word	0x40012000
 8001968:	40023800 	.word	0x40023800
 800196c:	40020000 	.word	0x40020000

08001970 <HAL_TIM_Base_MspInit>:
 8001970:	b580      	push	{r7, lr}
 8001972:	b084      	sub	sp, #16
 8001974:	af00      	add	r7, sp, #0
 8001976:	6078      	str	r0, [r7, #4]
 8001978:	687b      	ldr	r3, [r7, #4]
 800197a:	681b      	ldr	r3, [r3, #0]
 800197c:	4a22      	ldr	r2, [pc, #136]	@ (8001a08 <HAL_TIM_Base_MspInit+0x98>)
 800197e:	4293      	cmp	r3, r2
 8001980:	d13e      	bne.n	8001a00 <HAL_TIM_Base_MspInit+0x90>
 8001982:	2300      	movs	r3, #0
 8001984:	60fb      	str	r3, [r7, #12]
 8001986:	4b21      	ldr	r3, [pc, #132]	@ (8001a0c <HAL_TIM_Base_MspInit+0x9c>)
 8001988:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800198a:	4a20      	ldr	r2, [pc, #128]	@ (8001a0c <HAL_TIM_Base_MspInit+0x9c>)
 800198c:	f043 0301 	orr.w	r3, r3, #1
 8001990:	6453      	str	r3, [r2, #68]	@ 0x44
 8001992:	4b1e      	ldr	r3, [pc, #120]	@ (8001a0c <HAL_TIM_Base_MspInit+0x9c>)
 8001994:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001996:	f003 0301 	and.w	r3, r3, #1
 800199a:	60fb      	str	r3, [r7, #12]
 800199c:	68fb      	ldr	r3, [r7, #12]
 800199e:	4b1c      	ldr	r3, [pc, #112]	@ (8001a10 <HAL_TIM_Base_MspInit+0xa0>)
 80019a0:	4a1c      	ldr	r2, [pc, #112]	@ (8001a14 <HAL_TIM_Base_MspInit+0xa4>)
 80019a2:	601a      	str	r2, [r3, #0]
 80019a4:	4b1a      	ldr	r3, [pc, #104]	@ (8001a10 <HAL_TIM_Base_MspInit+0xa0>)
 80019a6:	f04f 6240 	mov.w	r2, #201326592	@ 0xc000000
 80019aa:	605a      	str	r2, [r3, #4]
 80019ac:	4b18      	ldr	r3, [pc, #96]	@ (8001a10 <HAL_TIM_Base_MspInit+0xa0>)
 80019ae:	2240      	movs	r2, #64	@ 0x40
 80019b0:	609a      	str	r2, [r3, #8]
 80019b2:	4b17      	ldr	r3, [pc, #92]	@ (8001a10 <HAL_TIM_Base_MspInit+0xa0>)
 80019b4:	2200      	movs	r2, #0
 80019b6:	60da      	str	r2, [r3, #12]
 80019b8:	4b15      	ldr	r3, [pc, #84]	@ (8001a10 <HAL_TIM_Base_MspInit+0xa0>)
 80019ba:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 80019be:	611a      	str	r2, [r3, #16]
 80019c0:	4b13      	ldr	r3, [pc, #76]	@ (8001a10 <HAL_TIM_Base_MspInit+0xa0>)
 80019c2:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 80019c6:	615a      	str	r2, [r3, #20]
 80019c8:	4b11      	ldr	r3, [pc, #68]	@ (8001a10 <HAL_TIM_Base_MspInit+0xa0>)
 80019ca:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80019ce:	619a      	str	r2, [r3, #24]
 80019d0:	4b0f      	ldr	r3, [pc, #60]	@ (8001a10 <HAL_TIM_Base_MspInit+0xa0>)
 80019d2:	2200      	movs	r2, #0
 80019d4:	61da      	str	r2, [r3, #28]
 80019d6:	4b0e      	ldr	r3, [pc, #56]	@ (8001a10 <HAL_TIM_Base_MspInit+0xa0>)
 80019d8:	f44f 3200 	mov.w	r2, #131072	@ 0x20000
 80019dc:	621a      	str	r2, [r3, #32]
 80019de:	4b0c      	ldr	r3, [pc, #48]	@ (8001a10 <HAL_TIM_Base_MspInit+0xa0>)
 80019e0:	2200      	movs	r2, #0
 80019e2:	625a      	str	r2, [r3, #36]	@ 0x24
 80019e4:	480a      	ldr	r0, [pc, #40]	@ (8001a10 <HAL_TIM_Base_MspInit+0xa0>)
 80019e6:	f000 ffb1 	bl	800294c <HAL_DMA_Init>
 80019ea:	4603      	mov	r3, r0
 80019ec:	2b00      	cmp	r3, #0
 80019ee:	d001      	beq.n	80019f4 <HAL_TIM_Base_MspInit+0x84>
 80019f0:	f7ff ff44 	bl	800187c <Error_Handler>
 80019f4:	687b      	ldr	r3, [r7, #4]
 80019f6:	4a06      	ldr	r2, [pc, #24]	@ (8001a10 <HAL_TIM_Base_MspInit+0xa0>)
 80019f8:	625a      	str	r2, [r3, #36]	@ 0x24
 80019fa:	4a05      	ldr	r2, [pc, #20]	@ (8001a10 <HAL_TIM_Base_MspInit+0xa0>)
 80019fc:	687b      	ldr	r3, [r7, #4]
 80019fe:	6393      	str	r3, [r2, #56]	@ 0x38
 8001a00:	bf00      	nop
 8001a02:	3710      	adds	r7, #16
 8001a04:	46bd      	mov	sp, r7
 8001a06:	bd80      	pop	{r7, pc}
 8001a08:	40010000 	.word	0x40010000
 8001a0c:	40023800 	.word	0x40023800
 8001a10:	2000010c 	.word	0x2000010c
 8001a14:	40026428 	.word	0x40026428

08001a18 <HAL_TIM_MspPostInit>:
 8001a18:	b580      	push	{r7, lr}
 8001a1a:	b088      	sub	sp, #32
 8001a1c:	af00      	add	r7, sp, #0
 8001a1e:	6078      	str	r0, [r7, #4]
 8001a20:	f107 030c 	add.w	r3, r7, #12
 8001a24:	2200      	movs	r2, #0
 8001a26:	601a      	str	r2, [r3, #0]
 8001a28:	605a      	str	r2, [r3, #4]
 8001a2a:	609a      	str	r2, [r3, #8]
 8001a2c:	60da      	str	r2, [r3, #12]
 8001a2e:	611a      	str	r2, [r3, #16]
 8001a30:	687b      	ldr	r3, [r7, #4]
 8001a32:	681b      	ldr	r3, [r3, #0]
 8001a34:	4a12      	ldr	r2, [pc, #72]	@ (8001a80 <HAL_TIM_MspPostInit+0x68>)
 8001a36:	4293      	cmp	r3, r2
 8001a38:	d11e      	bne.n	8001a78 <HAL_TIM_MspPostInit+0x60>
 8001a3a:	2300      	movs	r3, #0
 8001a3c:	60bb      	str	r3, [r7, #8]
 8001a3e:	4b11      	ldr	r3, [pc, #68]	@ (8001a84 <HAL_TIM_MspPostInit+0x6c>)
 8001a40:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001a42:	4a10      	ldr	r2, [pc, #64]	@ (8001a84 <HAL_TIM_MspPostInit+0x6c>)
 8001a44:	f043 0310 	orr.w	r3, r3, #16
 8001a48:	6313      	str	r3, [r2, #48]	@ 0x30
 8001a4a:	4b0e      	ldr	r3, [pc, #56]	@ (8001a84 <HAL_TIM_MspPostInit+0x6c>)
 8001a4c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001a4e:	f003 0310 	and.w	r3, r3, #16
 8001a52:	60bb      	str	r3, [r7, #8]
 8001a54:	68bb      	ldr	r3, [r7, #8]
 8001a56:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8001a5a:	60fb      	str	r3, [r7, #12]
 8001a5c:	2302      	movs	r3, #2
 8001a5e:	613b      	str	r3, [r7, #16]
 8001a60:	2300      	movs	r3, #0
 8001a62:	617b      	str	r3, [r7, #20]
 8001a64:	2300      	movs	r3, #0
 8001a66:	61bb      	str	r3, [r7, #24]
 8001a68:	2301      	movs	r3, #1
 8001a6a:	61fb      	str	r3, [r7, #28]
 8001a6c:	f107 030c 	add.w	r3, r7, #12
 8001a70:	4619      	mov	r1, r3
 8001a72:	4805      	ldr	r0, [pc, #20]	@ (8001a88 <HAL_TIM_MspPostInit+0x70>)
 8001a74:	f001 fafc 	bl	8003070 <HAL_GPIO_Init>
 8001a78:	bf00      	nop
 8001a7a:	3720      	adds	r7, #32
 8001a7c:	46bd      	mov	sp, r7
 8001a7e:	bd80      	pop	{r7, pc}
 8001a80:	40010000 	.word	0x40010000
 8001a84:	40023800 	.word	0x40023800
 8001a88:	40021000 	.word	0x40021000

08001a8c <NMI_Handler>:
 8001a8c:	b480      	push	{r7}
 8001a8e:	af00      	add	r7, sp, #0
 8001a90:	bf00      	nop
 8001a92:	e7fd      	b.n	8001a90 <NMI_Handler+0x4>

08001a94 <HardFault_Handler>:
 8001a94:	b480      	push	{r7}
 8001a96:	af00      	add	r7, sp, #0
 8001a98:	bf00      	nop
 8001a9a:	e7fd      	b.n	8001a98 <HardFault_Handler+0x4>

08001a9c <MemManage_Handler>:
 8001a9c:	b480      	push	{r7}
 8001a9e:	af00      	add	r7, sp, #0
 8001aa0:	bf00      	nop
 8001aa2:	e7fd      	b.n	8001aa0 <MemManage_Handler+0x4>

08001aa4 <BusFault_Handler>:
 8001aa4:	b480      	push	{r7}
 8001aa6:	af00      	add	r7, sp, #0
 8001aa8:	bf00      	nop
 8001aaa:	e7fd      	b.n	8001aa8 <BusFault_Handler+0x4>

08001aac <UsageFault_Handler>:
 8001aac:	b480      	push	{r7}
 8001aae:	af00      	add	r7, sp, #0
 8001ab0:	bf00      	nop
 8001ab2:	e7fd      	b.n	8001ab0 <UsageFault_Handler+0x4>

08001ab4 <SVC_Handler>:
 8001ab4:	b480      	push	{r7}
 8001ab6:	af00      	add	r7, sp, #0
 8001ab8:	bf00      	nop
 8001aba:	46bd      	mov	sp, r7
 8001abc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ac0:	4770      	bx	lr

08001ac2 <DebugMon_Handler>:
 8001ac2:	b480      	push	{r7}
 8001ac4:	af00      	add	r7, sp, #0
 8001ac6:	bf00      	nop
 8001ac8:	46bd      	mov	sp, r7
 8001aca:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ace:	4770      	bx	lr

08001ad0 <PendSV_Handler>:
 8001ad0:	b480      	push	{r7}
 8001ad2:	af00      	add	r7, sp, #0
 8001ad4:	bf00      	nop
 8001ad6:	46bd      	mov	sp, r7
 8001ad8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001adc:	4770      	bx	lr

08001ade <SysTick_Handler>:
 8001ade:	b580      	push	{r7, lr}
 8001ae0:	af00      	add	r7, sp, #0
 8001ae2:	f000 f8a5 	bl	8001c30 <HAL_IncTick>
 8001ae6:	bf00      	nop
 8001ae8:	bd80      	pop	{r7, pc}
	...

08001aec <ADC_IRQHandler>:
 8001aec:	b580      	push	{r7, lr}
 8001aee:	af00      	add	r7, sp, #0
 8001af0:	4802      	ldr	r0, [pc, #8]	@ (8001afc <ADC_IRQHandler+0x10>)
 8001af2:	f000 fab5 	bl	8002060 <HAL_ADC_IRQHandler>
 8001af6:	bf00      	nop
 8001af8:	bd80      	pop	{r7, pc}
 8001afa:	bf00      	nop
 8001afc:	2000007c 	.word	0x2000007c

08001b00 <DMA2_Stream1_IRQHandler>:
 8001b00:	b580      	push	{r7, lr}
 8001b02:	af00      	add	r7, sp, #0
 8001b04:	4802      	ldr	r0, [pc, #8]	@ (8001b10 <DMA2_Stream1_IRQHandler+0x10>)
 8001b06:	f001 f849 	bl	8002b9c <HAL_DMA_IRQHandler>
 8001b0a:	bf00      	nop
 8001b0c:	bd80      	pop	{r7, pc}
 8001b0e:	bf00      	nop
 8001b10:	2000010c 	.word	0x2000010c

08001b14 <SystemInit>:
 8001b14:	b480      	push	{r7}
 8001b16:	af00      	add	r7, sp, #0
 8001b18:	4b06      	ldr	r3, [pc, #24]	@ (8001b34 <SystemInit+0x20>)
 8001b1a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8001b1e:	4a05      	ldr	r2, [pc, #20]	@ (8001b34 <SystemInit+0x20>)
 8001b20:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8001b24:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 8001b28:	bf00      	nop
 8001b2a:	46bd      	mov	sp, r7
 8001b2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b30:	4770      	bx	lr
 8001b32:	bf00      	nop
 8001b34:	e000ed00 	.word	0xe000ed00

08001b38 <Reset_Handler>:
 8001b38:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8001b70 <LoopFillZerobss+0xe>
 8001b3c:	f7ff ffea 	bl	8001b14 <SystemInit>
 8001b40:	480c      	ldr	r0, [pc, #48]	@ (8001b74 <LoopFillZerobss+0x12>)
 8001b42:	490d      	ldr	r1, [pc, #52]	@ (8001b78 <LoopFillZerobss+0x16>)
 8001b44:	4a0d      	ldr	r2, [pc, #52]	@ (8001b7c <LoopFillZerobss+0x1a>)
 8001b46:	2300      	movs	r3, #0
 8001b48:	e002      	b.n	8001b50 <LoopCopyDataInit>

08001b4a <CopyDataInit>:
 8001b4a:	58d4      	ldr	r4, [r2, r3]
 8001b4c:	50c4      	str	r4, [r0, r3]
 8001b4e:	3304      	adds	r3, #4

08001b50 <LoopCopyDataInit>:
 8001b50:	18c4      	adds	r4, r0, r3
 8001b52:	428c      	cmp	r4, r1
 8001b54:	d3f9      	bcc.n	8001b4a <CopyDataInit>
 8001b56:	4a0a      	ldr	r2, [pc, #40]	@ (8001b80 <LoopFillZerobss+0x1e>)
 8001b58:	4c0a      	ldr	r4, [pc, #40]	@ (8001b84 <LoopFillZerobss+0x22>)
 8001b5a:	2300      	movs	r3, #0
 8001b5c:	e001      	b.n	8001b62 <LoopFillZerobss>

08001b5e <FillZerobss>:
 8001b5e:	6013      	str	r3, [r2, #0]
 8001b60:	3204      	adds	r2, #4

08001b62 <LoopFillZerobss>:
 8001b62:	42a2      	cmp	r2, r4
 8001b64:	d3fb      	bcc.n	8001b5e <FillZerobss>
 8001b66:	f004 f9f9 	bl	8005f5c <__libc_init_array>
 8001b6a:	f7ff fbf7 	bl	800135c <main>
 8001b6e:	4770      	bx	lr
 8001b70:	20020000 	.word	0x20020000
 8001b74:	20000000 	.word	0x20000000
 8001b78:	20000060 	.word	0x20000060
 8001b7c:	0801a2b0 	.word	0x0801a2b0
 8001b80:	20000060 	.word	0x20000060
 8001b84:	20004f1c 	.word	0x20004f1c

08001b88 <CAN1_RX0_IRQHandler>:
 8001b88:	e7fe      	b.n	8001b88 <CAN1_RX0_IRQHandler>
	...

08001b8c <HAL_Init>:
 8001b8c:	b580      	push	{r7, lr}
 8001b8e:	af00      	add	r7, sp, #0
 8001b90:	4b0e      	ldr	r3, [pc, #56]	@ (8001bcc <HAL_Init+0x40>)
 8001b92:	681b      	ldr	r3, [r3, #0]
 8001b94:	4a0d      	ldr	r2, [pc, #52]	@ (8001bcc <HAL_Init+0x40>)
 8001b96:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8001b9a:	6013      	str	r3, [r2, #0]
 8001b9c:	4b0b      	ldr	r3, [pc, #44]	@ (8001bcc <HAL_Init+0x40>)
 8001b9e:	681b      	ldr	r3, [r3, #0]
 8001ba0:	4a0a      	ldr	r2, [pc, #40]	@ (8001bcc <HAL_Init+0x40>)
 8001ba2:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8001ba6:	6013      	str	r3, [r2, #0]
 8001ba8:	4b08      	ldr	r3, [pc, #32]	@ (8001bcc <HAL_Init+0x40>)
 8001baa:	681b      	ldr	r3, [r3, #0]
 8001bac:	4a07      	ldr	r2, [pc, #28]	@ (8001bcc <HAL_Init+0x40>)
 8001bae:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001bb2:	6013      	str	r3, [r2, #0]
 8001bb4:	2003      	movs	r0, #3
 8001bb6:	f000 fe87 	bl	80028c8 <HAL_NVIC_SetPriorityGrouping>
 8001bba:	200f      	movs	r0, #15
 8001bbc:	f000 f808 	bl	8001bd0 <HAL_InitTick>
 8001bc0:	f7ff fe62 	bl	8001888 <HAL_MspInit>
 8001bc4:	2300      	movs	r3, #0
 8001bc6:	4618      	mov	r0, r3
 8001bc8:	bd80      	pop	{r7, pc}
 8001bca:	bf00      	nop
 8001bcc:	40023c00 	.word	0x40023c00

08001bd0 <HAL_InitTick>:
 8001bd0:	b580      	push	{r7, lr}
 8001bd2:	b082      	sub	sp, #8
 8001bd4:	af00      	add	r7, sp, #0
 8001bd6:	6078      	str	r0, [r7, #4]
 8001bd8:	4b12      	ldr	r3, [pc, #72]	@ (8001c24 <HAL_InitTick+0x54>)
 8001bda:	681a      	ldr	r2, [r3, #0]
 8001bdc:	4b12      	ldr	r3, [pc, #72]	@ (8001c28 <HAL_InitTick+0x58>)
 8001bde:	781b      	ldrb	r3, [r3, #0]
 8001be0:	4619      	mov	r1, r3
 8001be2:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001be6:	fbb3 f3f1 	udiv	r3, r3, r1
 8001bea:	fbb2 f3f3 	udiv	r3, r2, r3
 8001bee:	4618      	mov	r0, r3
 8001bf0:	f000 fe9f 	bl	8002932 <HAL_SYSTICK_Config>
 8001bf4:	4603      	mov	r3, r0
 8001bf6:	2b00      	cmp	r3, #0
 8001bf8:	d001      	beq.n	8001bfe <HAL_InitTick+0x2e>
 8001bfa:	2301      	movs	r3, #1
 8001bfc:	e00e      	b.n	8001c1c <HAL_InitTick+0x4c>
 8001bfe:	687b      	ldr	r3, [r7, #4]
 8001c00:	2b0f      	cmp	r3, #15
 8001c02:	d80a      	bhi.n	8001c1a <HAL_InitTick+0x4a>
 8001c04:	2200      	movs	r2, #0
 8001c06:	6879      	ldr	r1, [r7, #4]
 8001c08:	f04f 30ff 	mov.w	r0, #4294967295
 8001c0c:	f000 fe67 	bl	80028de <HAL_NVIC_SetPriority>
 8001c10:	4a06      	ldr	r2, [pc, #24]	@ (8001c2c <HAL_InitTick+0x5c>)
 8001c12:	687b      	ldr	r3, [r7, #4]
 8001c14:	6013      	str	r3, [r2, #0]
 8001c16:	2300      	movs	r3, #0
 8001c18:	e000      	b.n	8001c1c <HAL_InitTick+0x4c>
 8001c1a:	2301      	movs	r3, #1
 8001c1c:	4618      	mov	r0, r3
 8001c1e:	3708      	adds	r7, #8
 8001c20:	46bd      	mov	sp, r7
 8001c22:	bd80      	pop	{r7, pc}
 8001c24:	20000004 	.word	0x20000004
 8001c28:	2000000c 	.word	0x2000000c
 8001c2c:	20000008 	.word	0x20000008

08001c30 <HAL_IncTick>:
 8001c30:	b480      	push	{r7}
 8001c32:	af00      	add	r7, sp, #0
 8001c34:	4b06      	ldr	r3, [pc, #24]	@ (8001c50 <HAL_IncTick+0x20>)
 8001c36:	781b      	ldrb	r3, [r3, #0]
 8001c38:	461a      	mov	r2, r3
 8001c3a:	4b06      	ldr	r3, [pc, #24]	@ (8001c54 <HAL_IncTick+0x24>)
 8001c3c:	681b      	ldr	r3, [r3, #0]
 8001c3e:	4413      	add	r3, r2
 8001c40:	4a04      	ldr	r2, [pc, #16]	@ (8001c54 <HAL_IncTick+0x24>)
 8001c42:	6013      	str	r3, [r2, #0]
 8001c44:	bf00      	nop
 8001c46:	46bd      	mov	sp, r7
 8001c48:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c4c:	4770      	bx	lr
 8001c4e:	bf00      	nop
 8001c50:	2000000c 	.word	0x2000000c
 8001c54:	20004de0 	.word	0x20004de0

08001c58 <HAL_GetTick>:
 8001c58:	b480      	push	{r7}
 8001c5a:	af00      	add	r7, sp, #0
 8001c5c:	4b03      	ldr	r3, [pc, #12]	@ (8001c6c <HAL_GetTick+0x14>)
 8001c5e:	681b      	ldr	r3, [r3, #0]
 8001c60:	4618      	mov	r0, r3
 8001c62:	46bd      	mov	sp, r7
 8001c64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c68:	4770      	bx	lr
 8001c6a:	bf00      	nop
 8001c6c:	20004de0 	.word	0x20004de0

08001c70 <HAL_Delay>:
 8001c70:	b580      	push	{r7, lr}
 8001c72:	b084      	sub	sp, #16
 8001c74:	af00      	add	r7, sp, #0
 8001c76:	6078      	str	r0, [r7, #4]
 8001c78:	f7ff ffee 	bl	8001c58 <HAL_GetTick>
 8001c7c:	60b8      	str	r0, [r7, #8]
 8001c7e:	687b      	ldr	r3, [r7, #4]
 8001c80:	60fb      	str	r3, [r7, #12]
 8001c82:	68fb      	ldr	r3, [r7, #12]
 8001c84:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001c88:	d005      	beq.n	8001c96 <HAL_Delay+0x26>
 8001c8a:	4b0a      	ldr	r3, [pc, #40]	@ (8001cb4 <HAL_Delay+0x44>)
 8001c8c:	781b      	ldrb	r3, [r3, #0]
 8001c8e:	461a      	mov	r2, r3
 8001c90:	68fb      	ldr	r3, [r7, #12]
 8001c92:	4413      	add	r3, r2
 8001c94:	60fb      	str	r3, [r7, #12]
 8001c96:	bf00      	nop
 8001c98:	f7ff ffde 	bl	8001c58 <HAL_GetTick>
 8001c9c:	4602      	mov	r2, r0
 8001c9e:	68bb      	ldr	r3, [r7, #8]
 8001ca0:	1ad3      	subs	r3, r2, r3
 8001ca2:	68fa      	ldr	r2, [r7, #12]
 8001ca4:	429a      	cmp	r2, r3
 8001ca6:	d8f7      	bhi.n	8001c98 <HAL_Delay+0x28>
 8001ca8:	bf00      	nop
 8001caa:	bf00      	nop
 8001cac:	3710      	adds	r7, #16
 8001cae:	46bd      	mov	sp, r7
 8001cb0:	bd80      	pop	{r7, pc}
 8001cb2:	bf00      	nop
 8001cb4:	2000000c 	.word	0x2000000c

08001cb8 <HAL_ADC_Init>:
 8001cb8:	b580      	push	{r7, lr}
 8001cba:	b084      	sub	sp, #16
 8001cbc:	af00      	add	r7, sp, #0
 8001cbe:	6078      	str	r0, [r7, #4]
 8001cc0:	2300      	movs	r3, #0
 8001cc2:	73fb      	strb	r3, [r7, #15]
 8001cc4:	687b      	ldr	r3, [r7, #4]
 8001cc6:	2b00      	cmp	r3, #0
 8001cc8:	d101      	bne.n	8001cce <HAL_ADC_Init+0x16>
 8001cca:	2301      	movs	r3, #1
 8001ccc:	e033      	b.n	8001d36 <HAL_ADC_Init+0x7e>
 8001cce:	687b      	ldr	r3, [r7, #4]
 8001cd0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001cd2:	2b00      	cmp	r3, #0
 8001cd4:	d109      	bne.n	8001cea <HAL_ADC_Init+0x32>
 8001cd6:	6878      	ldr	r0, [r7, #4]
 8001cd8:	f7ff fdfe 	bl	80018d8 <HAL_ADC_MspInit>
 8001cdc:	687b      	ldr	r3, [r7, #4]
 8001cde:	2200      	movs	r2, #0
 8001ce0:	645a      	str	r2, [r3, #68]	@ 0x44
 8001ce2:	687b      	ldr	r3, [r7, #4]
 8001ce4:	2200      	movs	r2, #0
 8001ce6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001cea:	687b      	ldr	r3, [r7, #4]
 8001cec:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001cee:	f003 0310 	and.w	r3, r3, #16
 8001cf2:	2b00      	cmp	r3, #0
 8001cf4:	d118      	bne.n	8001d28 <HAL_ADC_Init+0x70>
 8001cf6:	687b      	ldr	r3, [r7, #4]
 8001cf8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001cfa:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 8001cfe:	f023 0302 	bic.w	r3, r3, #2
 8001d02:	f043 0202 	orr.w	r2, r3, #2
 8001d06:	687b      	ldr	r3, [r7, #4]
 8001d08:	641a      	str	r2, [r3, #64]	@ 0x40
 8001d0a:	6878      	ldr	r0, [r7, #4]
 8001d0c:	f000 fc06 	bl	800251c <ADC_Init>
 8001d10:	687b      	ldr	r3, [r7, #4]
 8001d12:	2200      	movs	r2, #0
 8001d14:	645a      	str	r2, [r3, #68]	@ 0x44
 8001d16:	687b      	ldr	r3, [r7, #4]
 8001d18:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001d1a:	f023 0303 	bic.w	r3, r3, #3
 8001d1e:	f043 0201 	orr.w	r2, r3, #1
 8001d22:	687b      	ldr	r3, [r7, #4]
 8001d24:	641a      	str	r2, [r3, #64]	@ 0x40
 8001d26:	e001      	b.n	8001d2c <HAL_ADC_Init+0x74>
 8001d28:	2301      	movs	r3, #1
 8001d2a:	73fb      	strb	r3, [r7, #15]
 8001d2c:	687b      	ldr	r3, [r7, #4]
 8001d2e:	2200      	movs	r2, #0
 8001d30:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001d34:	7bfb      	ldrb	r3, [r7, #15]
 8001d36:	4618      	mov	r0, r3
 8001d38:	3710      	adds	r7, #16
 8001d3a:	46bd      	mov	sp, r7
 8001d3c:	bd80      	pop	{r7, pc}
	...

08001d40 <HAL_ADC_Start>:
 8001d40:	b480      	push	{r7}
 8001d42:	b085      	sub	sp, #20
 8001d44:	af00      	add	r7, sp, #0
 8001d46:	6078      	str	r0, [r7, #4]
 8001d48:	2300      	movs	r3, #0
 8001d4a:	60bb      	str	r3, [r7, #8]
 8001d4c:	687b      	ldr	r3, [r7, #4]
 8001d4e:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8001d52:	2b01      	cmp	r3, #1
 8001d54:	d101      	bne.n	8001d5a <HAL_ADC_Start+0x1a>
 8001d56:	2302      	movs	r3, #2
 8001d58:	e0b2      	b.n	8001ec0 <HAL_ADC_Start+0x180>
 8001d5a:	687b      	ldr	r3, [r7, #4]
 8001d5c:	2201      	movs	r2, #1
 8001d5e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001d62:	687b      	ldr	r3, [r7, #4]
 8001d64:	681b      	ldr	r3, [r3, #0]
 8001d66:	689b      	ldr	r3, [r3, #8]
 8001d68:	f003 0301 	and.w	r3, r3, #1
 8001d6c:	2b01      	cmp	r3, #1
 8001d6e:	d018      	beq.n	8001da2 <HAL_ADC_Start+0x62>
 8001d70:	687b      	ldr	r3, [r7, #4]
 8001d72:	681b      	ldr	r3, [r3, #0]
 8001d74:	689a      	ldr	r2, [r3, #8]
 8001d76:	687b      	ldr	r3, [r7, #4]
 8001d78:	681b      	ldr	r3, [r3, #0]
 8001d7a:	f042 0201 	orr.w	r2, r2, #1
 8001d7e:	609a      	str	r2, [r3, #8]
 8001d80:	4b52      	ldr	r3, [pc, #328]	@ (8001ecc <HAL_ADC_Start+0x18c>)
 8001d82:	681b      	ldr	r3, [r3, #0]
 8001d84:	4a52      	ldr	r2, [pc, #328]	@ (8001ed0 <HAL_ADC_Start+0x190>)
 8001d86:	fba2 2303 	umull	r2, r3, r2, r3
 8001d8a:	0c9a      	lsrs	r2, r3, #18
 8001d8c:	4613      	mov	r3, r2
 8001d8e:	005b      	lsls	r3, r3, #1
 8001d90:	4413      	add	r3, r2
 8001d92:	60bb      	str	r3, [r7, #8]
 8001d94:	e002      	b.n	8001d9c <HAL_ADC_Start+0x5c>
 8001d96:	68bb      	ldr	r3, [r7, #8]
 8001d98:	3b01      	subs	r3, #1
 8001d9a:	60bb      	str	r3, [r7, #8]
 8001d9c:	68bb      	ldr	r3, [r7, #8]
 8001d9e:	2b00      	cmp	r3, #0
 8001da0:	d1f9      	bne.n	8001d96 <HAL_ADC_Start+0x56>
 8001da2:	687b      	ldr	r3, [r7, #4]
 8001da4:	681b      	ldr	r3, [r3, #0]
 8001da6:	689b      	ldr	r3, [r3, #8]
 8001da8:	f003 0301 	and.w	r3, r3, #1
 8001dac:	2b01      	cmp	r3, #1
 8001dae:	d17a      	bne.n	8001ea6 <HAL_ADC_Start+0x166>
 8001db0:	687b      	ldr	r3, [r7, #4]
 8001db2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001db4:	f423 63e0 	bic.w	r3, r3, #1792	@ 0x700
 8001db8:	f023 0301 	bic.w	r3, r3, #1
 8001dbc:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 8001dc0:	687b      	ldr	r3, [r7, #4]
 8001dc2:	641a      	str	r2, [r3, #64]	@ 0x40
 8001dc4:	687b      	ldr	r3, [r7, #4]
 8001dc6:	681b      	ldr	r3, [r3, #0]
 8001dc8:	685b      	ldr	r3, [r3, #4]
 8001dca:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8001dce:	2b00      	cmp	r3, #0
 8001dd0:	d007      	beq.n	8001de2 <HAL_ADC_Start+0xa2>
 8001dd2:	687b      	ldr	r3, [r7, #4]
 8001dd4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001dd6:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8001dda:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 8001dde:	687b      	ldr	r3, [r7, #4]
 8001de0:	641a      	str	r2, [r3, #64]	@ 0x40
 8001de2:	687b      	ldr	r3, [r7, #4]
 8001de4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001de6:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8001dea:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8001dee:	d106      	bne.n	8001dfe <HAL_ADC_Start+0xbe>
 8001df0:	687b      	ldr	r3, [r7, #4]
 8001df2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001df4:	f023 0206 	bic.w	r2, r3, #6
 8001df8:	687b      	ldr	r3, [r7, #4]
 8001dfa:	645a      	str	r2, [r3, #68]	@ 0x44
 8001dfc:	e002      	b.n	8001e04 <HAL_ADC_Start+0xc4>
 8001dfe:	687b      	ldr	r3, [r7, #4]
 8001e00:	2200      	movs	r2, #0
 8001e02:	645a      	str	r2, [r3, #68]	@ 0x44
 8001e04:	687b      	ldr	r3, [r7, #4]
 8001e06:	2200      	movs	r2, #0
 8001e08:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001e0c:	4b31      	ldr	r3, [pc, #196]	@ (8001ed4 <HAL_ADC_Start+0x194>)
 8001e0e:	60fb      	str	r3, [r7, #12]
 8001e10:	687b      	ldr	r3, [r7, #4]
 8001e12:	681b      	ldr	r3, [r3, #0]
 8001e14:	f06f 0222 	mvn.w	r2, #34	@ 0x22
 8001e18:	601a      	str	r2, [r3, #0]
 8001e1a:	68fb      	ldr	r3, [r7, #12]
 8001e1c:	685b      	ldr	r3, [r3, #4]
 8001e1e:	f003 031f 	and.w	r3, r3, #31
 8001e22:	2b00      	cmp	r3, #0
 8001e24:	d12a      	bne.n	8001e7c <HAL_ADC_Start+0x13c>
 8001e26:	687b      	ldr	r3, [r7, #4]
 8001e28:	681b      	ldr	r3, [r3, #0]
 8001e2a:	4a2b      	ldr	r2, [pc, #172]	@ (8001ed8 <HAL_ADC_Start+0x198>)
 8001e2c:	4293      	cmp	r3, r2
 8001e2e:	d015      	beq.n	8001e5c <HAL_ADC_Start+0x11c>
 8001e30:	687b      	ldr	r3, [r7, #4]
 8001e32:	681b      	ldr	r3, [r3, #0]
 8001e34:	4a29      	ldr	r2, [pc, #164]	@ (8001edc <HAL_ADC_Start+0x19c>)
 8001e36:	4293      	cmp	r3, r2
 8001e38:	d105      	bne.n	8001e46 <HAL_ADC_Start+0x106>
 8001e3a:	4b26      	ldr	r3, [pc, #152]	@ (8001ed4 <HAL_ADC_Start+0x194>)
 8001e3c:	685b      	ldr	r3, [r3, #4]
 8001e3e:	f003 031f 	and.w	r3, r3, #31
 8001e42:	2b00      	cmp	r3, #0
 8001e44:	d00a      	beq.n	8001e5c <HAL_ADC_Start+0x11c>
 8001e46:	687b      	ldr	r3, [r7, #4]
 8001e48:	681b      	ldr	r3, [r3, #0]
 8001e4a:	4a25      	ldr	r2, [pc, #148]	@ (8001ee0 <HAL_ADC_Start+0x1a0>)
 8001e4c:	4293      	cmp	r3, r2
 8001e4e:	d136      	bne.n	8001ebe <HAL_ADC_Start+0x17e>
 8001e50:	4b20      	ldr	r3, [pc, #128]	@ (8001ed4 <HAL_ADC_Start+0x194>)
 8001e52:	685b      	ldr	r3, [r3, #4]
 8001e54:	f003 0310 	and.w	r3, r3, #16
 8001e58:	2b00      	cmp	r3, #0
 8001e5a:	d130      	bne.n	8001ebe <HAL_ADC_Start+0x17e>
 8001e5c:	687b      	ldr	r3, [r7, #4]
 8001e5e:	681b      	ldr	r3, [r3, #0]
 8001e60:	689b      	ldr	r3, [r3, #8]
 8001e62:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 8001e66:	2b00      	cmp	r3, #0
 8001e68:	d129      	bne.n	8001ebe <HAL_ADC_Start+0x17e>
 8001e6a:	687b      	ldr	r3, [r7, #4]
 8001e6c:	681b      	ldr	r3, [r3, #0]
 8001e6e:	689a      	ldr	r2, [r3, #8]
 8001e70:	687b      	ldr	r3, [r7, #4]
 8001e72:	681b      	ldr	r3, [r3, #0]
 8001e74:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 8001e78:	609a      	str	r2, [r3, #8]
 8001e7a:	e020      	b.n	8001ebe <HAL_ADC_Start+0x17e>
 8001e7c:	687b      	ldr	r3, [r7, #4]
 8001e7e:	681b      	ldr	r3, [r3, #0]
 8001e80:	4a15      	ldr	r2, [pc, #84]	@ (8001ed8 <HAL_ADC_Start+0x198>)
 8001e82:	4293      	cmp	r3, r2
 8001e84:	d11b      	bne.n	8001ebe <HAL_ADC_Start+0x17e>
 8001e86:	687b      	ldr	r3, [r7, #4]
 8001e88:	681b      	ldr	r3, [r3, #0]
 8001e8a:	689b      	ldr	r3, [r3, #8]
 8001e8c:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 8001e90:	2b00      	cmp	r3, #0
 8001e92:	d114      	bne.n	8001ebe <HAL_ADC_Start+0x17e>
 8001e94:	687b      	ldr	r3, [r7, #4]
 8001e96:	681b      	ldr	r3, [r3, #0]
 8001e98:	689a      	ldr	r2, [r3, #8]
 8001e9a:	687b      	ldr	r3, [r7, #4]
 8001e9c:	681b      	ldr	r3, [r3, #0]
 8001e9e:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 8001ea2:	609a      	str	r2, [r3, #8]
 8001ea4:	e00b      	b.n	8001ebe <HAL_ADC_Start+0x17e>
 8001ea6:	687b      	ldr	r3, [r7, #4]
 8001ea8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001eaa:	f043 0210 	orr.w	r2, r3, #16
 8001eae:	687b      	ldr	r3, [r7, #4]
 8001eb0:	641a      	str	r2, [r3, #64]	@ 0x40
 8001eb2:	687b      	ldr	r3, [r7, #4]
 8001eb4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001eb6:	f043 0201 	orr.w	r2, r3, #1
 8001eba:	687b      	ldr	r3, [r7, #4]
 8001ebc:	645a      	str	r2, [r3, #68]	@ 0x44
 8001ebe:	2300      	movs	r3, #0
 8001ec0:	4618      	mov	r0, r3
 8001ec2:	3714      	adds	r7, #20
 8001ec4:	46bd      	mov	sp, r7
 8001ec6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001eca:	4770      	bx	lr
 8001ecc:	20000004 	.word	0x20000004
 8001ed0:	431bde83 	.word	0x431bde83
 8001ed4:	40012300 	.word	0x40012300
 8001ed8:	40012000 	.word	0x40012000
 8001edc:	40012100 	.word	0x40012100
 8001ee0:	40012200 	.word	0x40012200

08001ee4 <HAL_ADC_Stop>:
 8001ee4:	b480      	push	{r7}
 8001ee6:	b083      	sub	sp, #12
 8001ee8:	af00      	add	r7, sp, #0
 8001eea:	6078      	str	r0, [r7, #4]
 8001eec:	687b      	ldr	r3, [r7, #4]
 8001eee:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8001ef2:	2b01      	cmp	r3, #1
 8001ef4:	d101      	bne.n	8001efa <HAL_ADC_Stop+0x16>
 8001ef6:	2302      	movs	r3, #2
 8001ef8:	e021      	b.n	8001f3e <HAL_ADC_Stop+0x5a>
 8001efa:	687b      	ldr	r3, [r7, #4]
 8001efc:	2201      	movs	r2, #1
 8001efe:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001f02:	687b      	ldr	r3, [r7, #4]
 8001f04:	681b      	ldr	r3, [r3, #0]
 8001f06:	689a      	ldr	r2, [r3, #8]
 8001f08:	687b      	ldr	r3, [r7, #4]
 8001f0a:	681b      	ldr	r3, [r3, #0]
 8001f0c:	f022 0201 	bic.w	r2, r2, #1
 8001f10:	609a      	str	r2, [r3, #8]
 8001f12:	687b      	ldr	r3, [r7, #4]
 8001f14:	681b      	ldr	r3, [r3, #0]
 8001f16:	689b      	ldr	r3, [r3, #8]
 8001f18:	f003 0301 	and.w	r3, r3, #1
 8001f1c:	2b00      	cmp	r3, #0
 8001f1e:	d109      	bne.n	8001f34 <HAL_ADC_Stop+0x50>
 8001f20:	687b      	ldr	r3, [r7, #4]
 8001f22:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001f24:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 8001f28:	f023 0301 	bic.w	r3, r3, #1
 8001f2c:	f043 0201 	orr.w	r2, r3, #1
 8001f30:	687b      	ldr	r3, [r7, #4]
 8001f32:	641a      	str	r2, [r3, #64]	@ 0x40
 8001f34:	687b      	ldr	r3, [r7, #4]
 8001f36:	2200      	movs	r2, #0
 8001f38:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001f3c:	2300      	movs	r3, #0
 8001f3e:	4618      	mov	r0, r3
 8001f40:	370c      	adds	r7, #12
 8001f42:	46bd      	mov	sp, r7
 8001f44:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f48:	4770      	bx	lr

08001f4a <HAL_ADC_PollForConversion>:
 8001f4a:	b580      	push	{r7, lr}
 8001f4c:	b084      	sub	sp, #16
 8001f4e:	af00      	add	r7, sp, #0
 8001f50:	6078      	str	r0, [r7, #4]
 8001f52:	6039      	str	r1, [r7, #0]
 8001f54:	2300      	movs	r3, #0
 8001f56:	60fb      	str	r3, [r7, #12]
 8001f58:	687b      	ldr	r3, [r7, #4]
 8001f5a:	681b      	ldr	r3, [r3, #0]
 8001f5c:	689b      	ldr	r3, [r3, #8]
 8001f5e:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8001f62:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8001f66:	d113      	bne.n	8001f90 <HAL_ADC_PollForConversion+0x46>
 8001f68:	687b      	ldr	r3, [r7, #4]
 8001f6a:	681b      	ldr	r3, [r3, #0]
 8001f6c:	689b      	ldr	r3, [r3, #8]
 8001f6e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8001f72:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8001f76:	d10b      	bne.n	8001f90 <HAL_ADC_PollForConversion+0x46>
 8001f78:	687b      	ldr	r3, [r7, #4]
 8001f7a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001f7c:	f043 0220 	orr.w	r2, r3, #32
 8001f80:	687b      	ldr	r3, [r7, #4]
 8001f82:	641a      	str	r2, [r3, #64]	@ 0x40
 8001f84:	687b      	ldr	r3, [r7, #4]
 8001f86:	2200      	movs	r2, #0
 8001f88:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001f8c:	2301      	movs	r3, #1
 8001f8e:	e063      	b.n	8002058 <HAL_ADC_PollForConversion+0x10e>
 8001f90:	f7ff fe62 	bl	8001c58 <HAL_GetTick>
 8001f94:	60f8      	str	r0, [r7, #12]
 8001f96:	e021      	b.n	8001fdc <HAL_ADC_PollForConversion+0x92>
 8001f98:	683b      	ldr	r3, [r7, #0]
 8001f9a:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001f9e:	d01d      	beq.n	8001fdc <HAL_ADC_PollForConversion+0x92>
 8001fa0:	683b      	ldr	r3, [r7, #0]
 8001fa2:	2b00      	cmp	r3, #0
 8001fa4:	d007      	beq.n	8001fb6 <HAL_ADC_PollForConversion+0x6c>
 8001fa6:	f7ff fe57 	bl	8001c58 <HAL_GetTick>
 8001faa:	4602      	mov	r2, r0
 8001fac:	68fb      	ldr	r3, [r7, #12]
 8001fae:	1ad3      	subs	r3, r2, r3
 8001fb0:	683a      	ldr	r2, [r7, #0]
 8001fb2:	429a      	cmp	r2, r3
 8001fb4:	d212      	bcs.n	8001fdc <HAL_ADC_PollForConversion+0x92>
 8001fb6:	687b      	ldr	r3, [r7, #4]
 8001fb8:	681b      	ldr	r3, [r3, #0]
 8001fba:	681b      	ldr	r3, [r3, #0]
 8001fbc:	f003 0302 	and.w	r3, r3, #2
 8001fc0:	2b02      	cmp	r3, #2
 8001fc2:	d00b      	beq.n	8001fdc <HAL_ADC_PollForConversion+0x92>
 8001fc4:	687b      	ldr	r3, [r7, #4]
 8001fc6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001fc8:	f043 0204 	orr.w	r2, r3, #4
 8001fcc:	687b      	ldr	r3, [r7, #4]
 8001fce:	641a      	str	r2, [r3, #64]	@ 0x40
 8001fd0:	687b      	ldr	r3, [r7, #4]
 8001fd2:	2200      	movs	r2, #0
 8001fd4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001fd8:	2303      	movs	r3, #3
 8001fda:	e03d      	b.n	8002058 <HAL_ADC_PollForConversion+0x10e>
 8001fdc:	687b      	ldr	r3, [r7, #4]
 8001fde:	681b      	ldr	r3, [r3, #0]
 8001fe0:	681b      	ldr	r3, [r3, #0]
 8001fe2:	f003 0302 	and.w	r3, r3, #2
 8001fe6:	2b02      	cmp	r3, #2
 8001fe8:	d1d6      	bne.n	8001f98 <HAL_ADC_PollForConversion+0x4e>
 8001fea:	687b      	ldr	r3, [r7, #4]
 8001fec:	681b      	ldr	r3, [r3, #0]
 8001fee:	f06f 0212 	mvn.w	r2, #18
 8001ff2:	601a      	str	r2, [r3, #0]
 8001ff4:	687b      	ldr	r3, [r7, #4]
 8001ff6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001ff8:	f443 7200 	orr.w	r2, r3, #512	@ 0x200
 8001ffc:	687b      	ldr	r3, [r7, #4]
 8001ffe:	641a      	str	r2, [r3, #64]	@ 0x40
 8002000:	687b      	ldr	r3, [r7, #4]
 8002002:	681b      	ldr	r3, [r3, #0]
 8002004:	689b      	ldr	r3, [r3, #8]
 8002006:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 800200a:	2b00      	cmp	r3, #0
 800200c:	d123      	bne.n	8002056 <HAL_ADC_PollForConversion+0x10c>
 800200e:	687b      	ldr	r3, [r7, #4]
 8002010:	7e1b      	ldrb	r3, [r3, #24]
 8002012:	2b00      	cmp	r3, #0
 8002014:	d11f      	bne.n	8002056 <HAL_ADC_PollForConversion+0x10c>
 8002016:	687b      	ldr	r3, [r7, #4]
 8002018:	681b      	ldr	r3, [r3, #0]
 800201a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800201c:	f403 0370 	and.w	r3, r3, #15728640	@ 0xf00000
 8002020:	2b00      	cmp	r3, #0
 8002022:	d006      	beq.n	8002032 <HAL_ADC_PollForConversion+0xe8>
 8002024:	687b      	ldr	r3, [r7, #4]
 8002026:	681b      	ldr	r3, [r3, #0]
 8002028:	689b      	ldr	r3, [r3, #8]
 800202a:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800202e:	2b00      	cmp	r3, #0
 8002030:	d111      	bne.n	8002056 <HAL_ADC_PollForConversion+0x10c>
 8002032:	687b      	ldr	r3, [r7, #4]
 8002034:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002036:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 800203a:	687b      	ldr	r3, [r7, #4]
 800203c:	641a      	str	r2, [r3, #64]	@ 0x40
 800203e:	687b      	ldr	r3, [r7, #4]
 8002040:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002042:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8002046:	2b00      	cmp	r3, #0
 8002048:	d105      	bne.n	8002056 <HAL_ADC_PollForConversion+0x10c>
 800204a:	687b      	ldr	r3, [r7, #4]
 800204c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800204e:	f043 0201 	orr.w	r2, r3, #1
 8002052:	687b      	ldr	r3, [r7, #4]
 8002054:	641a      	str	r2, [r3, #64]	@ 0x40
 8002056:	2300      	movs	r3, #0
 8002058:	4618      	mov	r0, r3
 800205a:	3710      	adds	r7, #16
 800205c:	46bd      	mov	sp, r7
 800205e:	bd80      	pop	{r7, pc}

08002060 <HAL_ADC_IRQHandler>:
 8002060:	b580      	push	{r7, lr}
 8002062:	b086      	sub	sp, #24
 8002064:	af00      	add	r7, sp, #0
 8002066:	6078      	str	r0, [r7, #4]
 8002068:	2300      	movs	r3, #0
 800206a:	617b      	str	r3, [r7, #20]
 800206c:	2300      	movs	r3, #0
 800206e:	613b      	str	r3, [r7, #16]
 8002070:	687b      	ldr	r3, [r7, #4]
 8002072:	681b      	ldr	r3, [r3, #0]
 8002074:	681b      	ldr	r3, [r3, #0]
 8002076:	60fb      	str	r3, [r7, #12]
 8002078:	687b      	ldr	r3, [r7, #4]
 800207a:	681b      	ldr	r3, [r3, #0]
 800207c:	685b      	ldr	r3, [r3, #4]
 800207e:	60bb      	str	r3, [r7, #8]
 8002080:	68fb      	ldr	r3, [r7, #12]
 8002082:	f003 0302 	and.w	r3, r3, #2
 8002086:	617b      	str	r3, [r7, #20]
 8002088:	68bb      	ldr	r3, [r7, #8]
 800208a:	f003 0320 	and.w	r3, r3, #32
 800208e:	613b      	str	r3, [r7, #16]
 8002090:	697b      	ldr	r3, [r7, #20]
 8002092:	2b00      	cmp	r3, #0
 8002094:	d049      	beq.n	800212a <HAL_ADC_IRQHandler+0xca>
 8002096:	693b      	ldr	r3, [r7, #16]
 8002098:	2b00      	cmp	r3, #0
 800209a:	d046      	beq.n	800212a <HAL_ADC_IRQHandler+0xca>
 800209c:	687b      	ldr	r3, [r7, #4]
 800209e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80020a0:	f003 0310 	and.w	r3, r3, #16
 80020a4:	2b00      	cmp	r3, #0
 80020a6:	d105      	bne.n	80020b4 <HAL_ADC_IRQHandler+0x54>
 80020a8:	687b      	ldr	r3, [r7, #4]
 80020aa:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80020ac:	f443 7200 	orr.w	r2, r3, #512	@ 0x200
 80020b0:	687b      	ldr	r3, [r7, #4]
 80020b2:	641a      	str	r2, [r3, #64]	@ 0x40
 80020b4:	687b      	ldr	r3, [r7, #4]
 80020b6:	681b      	ldr	r3, [r3, #0]
 80020b8:	689b      	ldr	r3, [r3, #8]
 80020ba:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 80020be:	2b00      	cmp	r3, #0
 80020c0:	d12b      	bne.n	800211a <HAL_ADC_IRQHandler+0xba>
 80020c2:	687b      	ldr	r3, [r7, #4]
 80020c4:	7e1b      	ldrb	r3, [r3, #24]
 80020c6:	2b00      	cmp	r3, #0
 80020c8:	d127      	bne.n	800211a <HAL_ADC_IRQHandler+0xba>
 80020ca:	687b      	ldr	r3, [r7, #4]
 80020cc:	681b      	ldr	r3, [r3, #0]
 80020ce:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80020d0:	f403 0370 	and.w	r3, r3, #15728640	@ 0xf00000
 80020d4:	2b00      	cmp	r3, #0
 80020d6:	d006      	beq.n	80020e6 <HAL_ADC_IRQHandler+0x86>
 80020d8:	687b      	ldr	r3, [r7, #4]
 80020da:	681b      	ldr	r3, [r3, #0]
 80020dc:	689b      	ldr	r3, [r3, #8]
 80020de:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80020e2:	2b00      	cmp	r3, #0
 80020e4:	d119      	bne.n	800211a <HAL_ADC_IRQHandler+0xba>
 80020e6:	687b      	ldr	r3, [r7, #4]
 80020e8:	681b      	ldr	r3, [r3, #0]
 80020ea:	685a      	ldr	r2, [r3, #4]
 80020ec:	687b      	ldr	r3, [r7, #4]
 80020ee:	681b      	ldr	r3, [r3, #0]
 80020f0:	f022 0220 	bic.w	r2, r2, #32
 80020f4:	605a      	str	r2, [r3, #4]
 80020f6:	687b      	ldr	r3, [r7, #4]
 80020f8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80020fa:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 80020fe:	687b      	ldr	r3, [r7, #4]
 8002100:	641a      	str	r2, [r3, #64]	@ 0x40
 8002102:	687b      	ldr	r3, [r7, #4]
 8002104:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002106:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 800210a:	2b00      	cmp	r3, #0
 800210c:	d105      	bne.n	800211a <HAL_ADC_IRQHandler+0xba>
 800210e:	687b      	ldr	r3, [r7, #4]
 8002110:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002112:	f043 0201 	orr.w	r2, r3, #1
 8002116:	687b      	ldr	r3, [r7, #4]
 8002118:	641a      	str	r2, [r3, #64]	@ 0x40
 800211a:	6878      	ldr	r0, [r7, #4]
 800211c:	f000 f8bd 	bl	800229a <HAL_ADC_ConvCpltCallback>
 8002120:	687b      	ldr	r3, [r7, #4]
 8002122:	681b      	ldr	r3, [r3, #0]
 8002124:	f06f 0212 	mvn.w	r2, #18
 8002128:	601a      	str	r2, [r3, #0]
 800212a:	68fb      	ldr	r3, [r7, #12]
 800212c:	f003 0304 	and.w	r3, r3, #4
 8002130:	617b      	str	r3, [r7, #20]
 8002132:	68bb      	ldr	r3, [r7, #8]
 8002134:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8002138:	613b      	str	r3, [r7, #16]
 800213a:	697b      	ldr	r3, [r7, #20]
 800213c:	2b00      	cmp	r3, #0
 800213e:	d057      	beq.n	80021f0 <HAL_ADC_IRQHandler+0x190>
 8002140:	693b      	ldr	r3, [r7, #16]
 8002142:	2b00      	cmp	r3, #0
 8002144:	d054      	beq.n	80021f0 <HAL_ADC_IRQHandler+0x190>
 8002146:	687b      	ldr	r3, [r7, #4]
 8002148:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800214a:	f003 0310 	and.w	r3, r3, #16
 800214e:	2b00      	cmp	r3, #0
 8002150:	d105      	bne.n	800215e <HAL_ADC_IRQHandler+0xfe>
 8002152:	687b      	ldr	r3, [r7, #4]
 8002154:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002156:	f443 5200 	orr.w	r2, r3, #8192	@ 0x2000
 800215a:	687b      	ldr	r3, [r7, #4]
 800215c:	641a      	str	r2, [r3, #64]	@ 0x40
 800215e:	687b      	ldr	r3, [r7, #4]
 8002160:	681b      	ldr	r3, [r3, #0]
 8002162:	689b      	ldr	r3, [r3, #8]
 8002164:	f403 1340 	and.w	r3, r3, #3145728	@ 0x300000
 8002168:	2b00      	cmp	r3, #0
 800216a:	d139      	bne.n	80021e0 <HAL_ADC_IRQHandler+0x180>
 800216c:	687b      	ldr	r3, [r7, #4]
 800216e:	681b      	ldr	r3, [r3, #0]
 8002170:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002172:	f403 1340 	and.w	r3, r3, #3145728	@ 0x300000
 8002176:	2b00      	cmp	r3, #0
 8002178:	d006      	beq.n	8002188 <HAL_ADC_IRQHandler+0x128>
 800217a:	687b      	ldr	r3, [r7, #4]
 800217c:	681b      	ldr	r3, [r3, #0]
 800217e:	689b      	ldr	r3, [r3, #8]
 8002180:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8002184:	2b00      	cmp	r3, #0
 8002186:	d12b      	bne.n	80021e0 <HAL_ADC_IRQHandler+0x180>
 8002188:	687b      	ldr	r3, [r7, #4]
 800218a:	681b      	ldr	r3, [r3, #0]
 800218c:	685b      	ldr	r3, [r3, #4]
 800218e:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8002192:	2b00      	cmp	r3, #0
 8002194:	d124      	bne.n	80021e0 <HAL_ADC_IRQHandler+0x180>
 8002196:	687b      	ldr	r3, [r7, #4]
 8002198:	681b      	ldr	r3, [r3, #0]
 800219a:	689b      	ldr	r3, [r3, #8]
 800219c:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 80021a0:	2b00      	cmp	r3, #0
 80021a2:	d11d      	bne.n	80021e0 <HAL_ADC_IRQHandler+0x180>
 80021a4:	687b      	ldr	r3, [r7, #4]
 80021a6:	7e1b      	ldrb	r3, [r3, #24]
 80021a8:	2b00      	cmp	r3, #0
 80021aa:	d119      	bne.n	80021e0 <HAL_ADC_IRQHandler+0x180>
 80021ac:	687b      	ldr	r3, [r7, #4]
 80021ae:	681b      	ldr	r3, [r3, #0]
 80021b0:	685a      	ldr	r2, [r3, #4]
 80021b2:	687b      	ldr	r3, [r7, #4]
 80021b4:	681b      	ldr	r3, [r3, #0]
 80021b6:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 80021ba:	605a      	str	r2, [r3, #4]
 80021bc:	687b      	ldr	r3, [r7, #4]
 80021be:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80021c0:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 80021c4:	687b      	ldr	r3, [r7, #4]
 80021c6:	641a      	str	r2, [r3, #64]	@ 0x40
 80021c8:	687b      	ldr	r3, [r7, #4]
 80021ca:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80021cc:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80021d0:	2b00      	cmp	r3, #0
 80021d2:	d105      	bne.n	80021e0 <HAL_ADC_IRQHandler+0x180>
 80021d4:	687b      	ldr	r3, [r7, #4]
 80021d6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80021d8:	f043 0201 	orr.w	r2, r3, #1
 80021dc:	687b      	ldr	r3, [r7, #4]
 80021de:	641a      	str	r2, [r3, #64]	@ 0x40
 80021e0:	6878      	ldr	r0, [r7, #4]
 80021e2:	f000 fa97 	bl	8002714 <HAL_ADCEx_InjectedConvCpltCallback>
 80021e6:	687b      	ldr	r3, [r7, #4]
 80021e8:	681b      	ldr	r3, [r3, #0]
 80021ea:	f06f 020c 	mvn.w	r2, #12
 80021ee:	601a      	str	r2, [r3, #0]
 80021f0:	68fb      	ldr	r3, [r7, #12]
 80021f2:	f003 0301 	and.w	r3, r3, #1
 80021f6:	617b      	str	r3, [r7, #20]
 80021f8:	68bb      	ldr	r3, [r7, #8]
 80021fa:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80021fe:	613b      	str	r3, [r7, #16]
 8002200:	697b      	ldr	r3, [r7, #20]
 8002202:	2b00      	cmp	r3, #0
 8002204:	d017      	beq.n	8002236 <HAL_ADC_IRQHandler+0x1d6>
 8002206:	693b      	ldr	r3, [r7, #16]
 8002208:	2b00      	cmp	r3, #0
 800220a:	d014      	beq.n	8002236 <HAL_ADC_IRQHandler+0x1d6>
 800220c:	687b      	ldr	r3, [r7, #4]
 800220e:	681b      	ldr	r3, [r3, #0]
 8002210:	681b      	ldr	r3, [r3, #0]
 8002212:	f003 0301 	and.w	r3, r3, #1
 8002216:	2b01      	cmp	r3, #1
 8002218:	d10d      	bne.n	8002236 <HAL_ADC_IRQHandler+0x1d6>
 800221a:	687b      	ldr	r3, [r7, #4]
 800221c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800221e:	f443 3280 	orr.w	r2, r3, #65536	@ 0x10000
 8002222:	687b      	ldr	r3, [r7, #4]
 8002224:	641a      	str	r2, [r3, #64]	@ 0x40
 8002226:	6878      	ldr	r0, [r7, #4]
 8002228:	f000 f841 	bl	80022ae <HAL_ADC_LevelOutOfWindowCallback>
 800222c:	687b      	ldr	r3, [r7, #4]
 800222e:	681b      	ldr	r3, [r3, #0]
 8002230:	f06f 0201 	mvn.w	r2, #1
 8002234:	601a      	str	r2, [r3, #0]
 8002236:	68fb      	ldr	r3, [r7, #12]
 8002238:	f003 0320 	and.w	r3, r3, #32
 800223c:	617b      	str	r3, [r7, #20]
 800223e:	68bb      	ldr	r3, [r7, #8]
 8002240:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 8002244:	613b      	str	r3, [r7, #16]
 8002246:	697b      	ldr	r3, [r7, #20]
 8002248:	2b00      	cmp	r3, #0
 800224a:	d015      	beq.n	8002278 <HAL_ADC_IRQHandler+0x218>
 800224c:	693b      	ldr	r3, [r7, #16]
 800224e:	2b00      	cmp	r3, #0
 8002250:	d012      	beq.n	8002278 <HAL_ADC_IRQHandler+0x218>
 8002252:	687b      	ldr	r3, [r7, #4]
 8002254:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002256:	f043 0202 	orr.w	r2, r3, #2
 800225a:	687b      	ldr	r3, [r7, #4]
 800225c:	645a      	str	r2, [r3, #68]	@ 0x44
 800225e:	687b      	ldr	r3, [r7, #4]
 8002260:	681b      	ldr	r3, [r3, #0]
 8002262:	f06f 0220 	mvn.w	r2, #32
 8002266:	601a      	str	r2, [r3, #0]
 8002268:	6878      	ldr	r0, [r7, #4]
 800226a:	f000 f82a 	bl	80022c2 <HAL_ADC_ErrorCallback>
 800226e:	687b      	ldr	r3, [r7, #4]
 8002270:	681b      	ldr	r3, [r3, #0]
 8002272:	f06f 0220 	mvn.w	r2, #32
 8002276:	601a      	str	r2, [r3, #0]
 8002278:	bf00      	nop
 800227a:	3718      	adds	r7, #24
 800227c:	46bd      	mov	sp, r7
 800227e:	bd80      	pop	{r7, pc}

08002280 <HAL_ADC_GetValue>:
 8002280:	b480      	push	{r7}
 8002282:	b083      	sub	sp, #12
 8002284:	af00      	add	r7, sp, #0
 8002286:	6078      	str	r0, [r7, #4]
 8002288:	687b      	ldr	r3, [r7, #4]
 800228a:	681b      	ldr	r3, [r3, #0]
 800228c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800228e:	4618      	mov	r0, r3
 8002290:	370c      	adds	r7, #12
 8002292:	46bd      	mov	sp, r7
 8002294:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002298:	4770      	bx	lr

0800229a <HAL_ADC_ConvCpltCallback>:
 800229a:	b480      	push	{r7}
 800229c:	b083      	sub	sp, #12
 800229e:	af00      	add	r7, sp, #0
 80022a0:	6078      	str	r0, [r7, #4]
 80022a2:	bf00      	nop
 80022a4:	370c      	adds	r7, #12
 80022a6:	46bd      	mov	sp, r7
 80022a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022ac:	4770      	bx	lr

080022ae <HAL_ADC_LevelOutOfWindowCallback>:
 80022ae:	b480      	push	{r7}
 80022b0:	b083      	sub	sp, #12
 80022b2:	af00      	add	r7, sp, #0
 80022b4:	6078      	str	r0, [r7, #4]
 80022b6:	bf00      	nop
 80022b8:	370c      	adds	r7, #12
 80022ba:	46bd      	mov	sp, r7
 80022bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022c0:	4770      	bx	lr

080022c2 <HAL_ADC_ErrorCallback>:
 80022c2:	b480      	push	{r7}
 80022c4:	b083      	sub	sp, #12
 80022c6:	af00      	add	r7, sp, #0
 80022c8:	6078      	str	r0, [r7, #4]
 80022ca:	bf00      	nop
 80022cc:	370c      	adds	r7, #12
 80022ce:	46bd      	mov	sp, r7
 80022d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022d4:	4770      	bx	lr
	...

080022d8 <HAL_ADC_ConfigChannel>:
 80022d8:	b480      	push	{r7}
 80022da:	b085      	sub	sp, #20
 80022dc:	af00      	add	r7, sp, #0
 80022de:	6078      	str	r0, [r7, #4]
 80022e0:	6039      	str	r1, [r7, #0]
 80022e2:	2300      	movs	r3, #0
 80022e4:	60bb      	str	r3, [r7, #8]
 80022e6:	687b      	ldr	r3, [r7, #4]
 80022e8:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80022ec:	2b01      	cmp	r3, #1
 80022ee:	d101      	bne.n	80022f4 <HAL_ADC_ConfigChannel+0x1c>
 80022f0:	2302      	movs	r3, #2
 80022f2:	e105      	b.n	8002500 <HAL_ADC_ConfigChannel+0x228>
 80022f4:	687b      	ldr	r3, [r7, #4]
 80022f6:	2201      	movs	r2, #1
 80022f8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80022fc:	683b      	ldr	r3, [r7, #0]
 80022fe:	681b      	ldr	r3, [r3, #0]
 8002300:	2b09      	cmp	r3, #9
 8002302:	d925      	bls.n	8002350 <HAL_ADC_ConfigChannel+0x78>
 8002304:	687b      	ldr	r3, [r7, #4]
 8002306:	681b      	ldr	r3, [r3, #0]
 8002308:	68d9      	ldr	r1, [r3, #12]
 800230a:	683b      	ldr	r3, [r7, #0]
 800230c:	681b      	ldr	r3, [r3, #0]
 800230e:	b29b      	uxth	r3, r3
 8002310:	461a      	mov	r2, r3
 8002312:	4613      	mov	r3, r2
 8002314:	005b      	lsls	r3, r3, #1
 8002316:	4413      	add	r3, r2
 8002318:	3b1e      	subs	r3, #30
 800231a:	2207      	movs	r2, #7
 800231c:	fa02 f303 	lsl.w	r3, r2, r3
 8002320:	43da      	mvns	r2, r3
 8002322:	687b      	ldr	r3, [r7, #4]
 8002324:	681b      	ldr	r3, [r3, #0]
 8002326:	400a      	ands	r2, r1
 8002328:	60da      	str	r2, [r3, #12]
 800232a:	687b      	ldr	r3, [r7, #4]
 800232c:	681b      	ldr	r3, [r3, #0]
 800232e:	68d9      	ldr	r1, [r3, #12]
 8002330:	683b      	ldr	r3, [r7, #0]
 8002332:	689a      	ldr	r2, [r3, #8]
 8002334:	683b      	ldr	r3, [r7, #0]
 8002336:	681b      	ldr	r3, [r3, #0]
 8002338:	b29b      	uxth	r3, r3
 800233a:	4618      	mov	r0, r3
 800233c:	4603      	mov	r3, r0
 800233e:	005b      	lsls	r3, r3, #1
 8002340:	4403      	add	r3, r0
 8002342:	3b1e      	subs	r3, #30
 8002344:	409a      	lsls	r2, r3
 8002346:	687b      	ldr	r3, [r7, #4]
 8002348:	681b      	ldr	r3, [r3, #0]
 800234a:	430a      	orrs	r2, r1
 800234c:	60da      	str	r2, [r3, #12]
 800234e:	e022      	b.n	8002396 <HAL_ADC_ConfigChannel+0xbe>
 8002350:	687b      	ldr	r3, [r7, #4]
 8002352:	681b      	ldr	r3, [r3, #0]
 8002354:	6919      	ldr	r1, [r3, #16]
 8002356:	683b      	ldr	r3, [r7, #0]
 8002358:	681b      	ldr	r3, [r3, #0]
 800235a:	b29b      	uxth	r3, r3
 800235c:	461a      	mov	r2, r3
 800235e:	4613      	mov	r3, r2
 8002360:	005b      	lsls	r3, r3, #1
 8002362:	4413      	add	r3, r2
 8002364:	2207      	movs	r2, #7
 8002366:	fa02 f303 	lsl.w	r3, r2, r3
 800236a:	43da      	mvns	r2, r3
 800236c:	687b      	ldr	r3, [r7, #4]
 800236e:	681b      	ldr	r3, [r3, #0]
 8002370:	400a      	ands	r2, r1
 8002372:	611a      	str	r2, [r3, #16]
 8002374:	687b      	ldr	r3, [r7, #4]
 8002376:	681b      	ldr	r3, [r3, #0]
 8002378:	6919      	ldr	r1, [r3, #16]
 800237a:	683b      	ldr	r3, [r7, #0]
 800237c:	689a      	ldr	r2, [r3, #8]
 800237e:	683b      	ldr	r3, [r7, #0]
 8002380:	681b      	ldr	r3, [r3, #0]
 8002382:	b29b      	uxth	r3, r3
 8002384:	4618      	mov	r0, r3
 8002386:	4603      	mov	r3, r0
 8002388:	005b      	lsls	r3, r3, #1
 800238a:	4403      	add	r3, r0
 800238c:	409a      	lsls	r2, r3
 800238e:	687b      	ldr	r3, [r7, #4]
 8002390:	681b      	ldr	r3, [r3, #0]
 8002392:	430a      	orrs	r2, r1
 8002394:	611a      	str	r2, [r3, #16]
 8002396:	683b      	ldr	r3, [r7, #0]
 8002398:	685b      	ldr	r3, [r3, #4]
 800239a:	2b06      	cmp	r3, #6
 800239c:	d824      	bhi.n	80023e8 <HAL_ADC_ConfigChannel+0x110>
 800239e:	687b      	ldr	r3, [r7, #4]
 80023a0:	681b      	ldr	r3, [r3, #0]
 80023a2:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 80023a4:	683b      	ldr	r3, [r7, #0]
 80023a6:	685a      	ldr	r2, [r3, #4]
 80023a8:	4613      	mov	r3, r2
 80023aa:	009b      	lsls	r3, r3, #2
 80023ac:	4413      	add	r3, r2
 80023ae:	3b05      	subs	r3, #5
 80023b0:	221f      	movs	r2, #31
 80023b2:	fa02 f303 	lsl.w	r3, r2, r3
 80023b6:	43da      	mvns	r2, r3
 80023b8:	687b      	ldr	r3, [r7, #4]
 80023ba:	681b      	ldr	r3, [r3, #0]
 80023bc:	400a      	ands	r2, r1
 80023be:	635a      	str	r2, [r3, #52]	@ 0x34
 80023c0:	687b      	ldr	r3, [r7, #4]
 80023c2:	681b      	ldr	r3, [r3, #0]
 80023c4:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 80023c6:	683b      	ldr	r3, [r7, #0]
 80023c8:	681b      	ldr	r3, [r3, #0]
 80023ca:	b29b      	uxth	r3, r3
 80023cc:	4618      	mov	r0, r3
 80023ce:	683b      	ldr	r3, [r7, #0]
 80023d0:	685a      	ldr	r2, [r3, #4]
 80023d2:	4613      	mov	r3, r2
 80023d4:	009b      	lsls	r3, r3, #2
 80023d6:	4413      	add	r3, r2
 80023d8:	3b05      	subs	r3, #5
 80023da:	fa00 f203 	lsl.w	r2, r0, r3
 80023de:	687b      	ldr	r3, [r7, #4]
 80023e0:	681b      	ldr	r3, [r3, #0]
 80023e2:	430a      	orrs	r2, r1
 80023e4:	635a      	str	r2, [r3, #52]	@ 0x34
 80023e6:	e04c      	b.n	8002482 <HAL_ADC_ConfigChannel+0x1aa>
 80023e8:	683b      	ldr	r3, [r7, #0]
 80023ea:	685b      	ldr	r3, [r3, #4]
 80023ec:	2b0c      	cmp	r3, #12
 80023ee:	d824      	bhi.n	800243a <HAL_ADC_ConfigChannel+0x162>
 80023f0:	687b      	ldr	r3, [r7, #4]
 80023f2:	681b      	ldr	r3, [r3, #0]
 80023f4:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 80023f6:	683b      	ldr	r3, [r7, #0]
 80023f8:	685a      	ldr	r2, [r3, #4]
 80023fa:	4613      	mov	r3, r2
 80023fc:	009b      	lsls	r3, r3, #2
 80023fe:	4413      	add	r3, r2
 8002400:	3b23      	subs	r3, #35	@ 0x23
 8002402:	221f      	movs	r2, #31
 8002404:	fa02 f303 	lsl.w	r3, r2, r3
 8002408:	43da      	mvns	r2, r3
 800240a:	687b      	ldr	r3, [r7, #4]
 800240c:	681b      	ldr	r3, [r3, #0]
 800240e:	400a      	ands	r2, r1
 8002410:	631a      	str	r2, [r3, #48]	@ 0x30
 8002412:	687b      	ldr	r3, [r7, #4]
 8002414:	681b      	ldr	r3, [r3, #0]
 8002416:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8002418:	683b      	ldr	r3, [r7, #0]
 800241a:	681b      	ldr	r3, [r3, #0]
 800241c:	b29b      	uxth	r3, r3
 800241e:	4618      	mov	r0, r3
 8002420:	683b      	ldr	r3, [r7, #0]
 8002422:	685a      	ldr	r2, [r3, #4]
 8002424:	4613      	mov	r3, r2
 8002426:	009b      	lsls	r3, r3, #2
 8002428:	4413      	add	r3, r2
 800242a:	3b23      	subs	r3, #35	@ 0x23
 800242c:	fa00 f203 	lsl.w	r2, r0, r3
 8002430:	687b      	ldr	r3, [r7, #4]
 8002432:	681b      	ldr	r3, [r3, #0]
 8002434:	430a      	orrs	r2, r1
 8002436:	631a      	str	r2, [r3, #48]	@ 0x30
 8002438:	e023      	b.n	8002482 <HAL_ADC_ConfigChannel+0x1aa>
 800243a:	687b      	ldr	r3, [r7, #4]
 800243c:	681b      	ldr	r3, [r3, #0]
 800243e:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8002440:	683b      	ldr	r3, [r7, #0]
 8002442:	685a      	ldr	r2, [r3, #4]
 8002444:	4613      	mov	r3, r2
 8002446:	009b      	lsls	r3, r3, #2
 8002448:	4413      	add	r3, r2
 800244a:	3b41      	subs	r3, #65	@ 0x41
 800244c:	221f      	movs	r2, #31
 800244e:	fa02 f303 	lsl.w	r3, r2, r3
 8002452:	43da      	mvns	r2, r3
 8002454:	687b      	ldr	r3, [r7, #4]
 8002456:	681b      	ldr	r3, [r3, #0]
 8002458:	400a      	ands	r2, r1
 800245a:	62da      	str	r2, [r3, #44]	@ 0x2c
 800245c:	687b      	ldr	r3, [r7, #4]
 800245e:	681b      	ldr	r3, [r3, #0]
 8002460:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8002462:	683b      	ldr	r3, [r7, #0]
 8002464:	681b      	ldr	r3, [r3, #0]
 8002466:	b29b      	uxth	r3, r3
 8002468:	4618      	mov	r0, r3
 800246a:	683b      	ldr	r3, [r7, #0]
 800246c:	685a      	ldr	r2, [r3, #4]
 800246e:	4613      	mov	r3, r2
 8002470:	009b      	lsls	r3, r3, #2
 8002472:	4413      	add	r3, r2
 8002474:	3b41      	subs	r3, #65	@ 0x41
 8002476:	fa00 f203 	lsl.w	r2, r0, r3
 800247a:	687b      	ldr	r3, [r7, #4]
 800247c:	681b      	ldr	r3, [r3, #0]
 800247e:	430a      	orrs	r2, r1
 8002480:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002482:	4b22      	ldr	r3, [pc, #136]	@ (800250c <HAL_ADC_ConfigChannel+0x234>)
 8002484:	60fb      	str	r3, [r7, #12]
 8002486:	687b      	ldr	r3, [r7, #4]
 8002488:	681b      	ldr	r3, [r3, #0]
 800248a:	4a21      	ldr	r2, [pc, #132]	@ (8002510 <HAL_ADC_ConfigChannel+0x238>)
 800248c:	4293      	cmp	r3, r2
 800248e:	d109      	bne.n	80024a4 <HAL_ADC_ConfigChannel+0x1cc>
 8002490:	683b      	ldr	r3, [r7, #0]
 8002492:	681b      	ldr	r3, [r3, #0]
 8002494:	2b12      	cmp	r3, #18
 8002496:	d105      	bne.n	80024a4 <HAL_ADC_ConfigChannel+0x1cc>
 8002498:	68fb      	ldr	r3, [r7, #12]
 800249a:	685b      	ldr	r3, [r3, #4]
 800249c:	f443 0280 	orr.w	r2, r3, #4194304	@ 0x400000
 80024a0:	68fb      	ldr	r3, [r7, #12]
 80024a2:	605a      	str	r2, [r3, #4]
 80024a4:	687b      	ldr	r3, [r7, #4]
 80024a6:	681b      	ldr	r3, [r3, #0]
 80024a8:	4a19      	ldr	r2, [pc, #100]	@ (8002510 <HAL_ADC_ConfigChannel+0x238>)
 80024aa:	4293      	cmp	r3, r2
 80024ac:	d123      	bne.n	80024f6 <HAL_ADC_ConfigChannel+0x21e>
 80024ae:	683b      	ldr	r3, [r7, #0]
 80024b0:	681b      	ldr	r3, [r3, #0]
 80024b2:	2b10      	cmp	r3, #16
 80024b4:	d003      	beq.n	80024be <HAL_ADC_ConfigChannel+0x1e6>
 80024b6:	683b      	ldr	r3, [r7, #0]
 80024b8:	681b      	ldr	r3, [r3, #0]
 80024ba:	2b11      	cmp	r3, #17
 80024bc:	d11b      	bne.n	80024f6 <HAL_ADC_ConfigChannel+0x21e>
 80024be:	68fb      	ldr	r3, [r7, #12]
 80024c0:	685b      	ldr	r3, [r3, #4]
 80024c2:	f443 0200 	orr.w	r2, r3, #8388608	@ 0x800000
 80024c6:	68fb      	ldr	r3, [r7, #12]
 80024c8:	605a      	str	r2, [r3, #4]
 80024ca:	683b      	ldr	r3, [r7, #0]
 80024cc:	681b      	ldr	r3, [r3, #0]
 80024ce:	2b10      	cmp	r3, #16
 80024d0:	d111      	bne.n	80024f6 <HAL_ADC_ConfigChannel+0x21e>
 80024d2:	4b10      	ldr	r3, [pc, #64]	@ (8002514 <HAL_ADC_ConfigChannel+0x23c>)
 80024d4:	681b      	ldr	r3, [r3, #0]
 80024d6:	4a10      	ldr	r2, [pc, #64]	@ (8002518 <HAL_ADC_ConfigChannel+0x240>)
 80024d8:	fba2 2303 	umull	r2, r3, r2, r3
 80024dc:	0c9a      	lsrs	r2, r3, #18
 80024de:	4613      	mov	r3, r2
 80024e0:	009b      	lsls	r3, r3, #2
 80024e2:	4413      	add	r3, r2
 80024e4:	005b      	lsls	r3, r3, #1
 80024e6:	60bb      	str	r3, [r7, #8]
 80024e8:	e002      	b.n	80024f0 <HAL_ADC_ConfigChannel+0x218>
 80024ea:	68bb      	ldr	r3, [r7, #8]
 80024ec:	3b01      	subs	r3, #1
 80024ee:	60bb      	str	r3, [r7, #8]
 80024f0:	68bb      	ldr	r3, [r7, #8]
 80024f2:	2b00      	cmp	r3, #0
 80024f4:	d1f9      	bne.n	80024ea <HAL_ADC_ConfigChannel+0x212>
 80024f6:	687b      	ldr	r3, [r7, #4]
 80024f8:	2200      	movs	r2, #0
 80024fa:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80024fe:	2300      	movs	r3, #0
 8002500:	4618      	mov	r0, r3
 8002502:	3714      	adds	r7, #20
 8002504:	46bd      	mov	sp, r7
 8002506:	f85d 7b04 	ldr.w	r7, [sp], #4
 800250a:	4770      	bx	lr
 800250c:	40012300 	.word	0x40012300
 8002510:	40012000 	.word	0x40012000
 8002514:	20000004 	.word	0x20000004
 8002518:	431bde83 	.word	0x431bde83

0800251c <ADC_Init>:
 800251c:	b480      	push	{r7}
 800251e:	b085      	sub	sp, #20
 8002520:	af00      	add	r7, sp, #0
 8002522:	6078      	str	r0, [r7, #4]
 8002524:	4b79      	ldr	r3, [pc, #484]	@ (800270c <ADC_Init+0x1f0>)
 8002526:	60fb      	str	r3, [r7, #12]
 8002528:	68fb      	ldr	r3, [r7, #12]
 800252a:	685b      	ldr	r3, [r3, #4]
 800252c:	f423 3240 	bic.w	r2, r3, #196608	@ 0x30000
 8002530:	68fb      	ldr	r3, [r7, #12]
 8002532:	605a      	str	r2, [r3, #4]
 8002534:	68fb      	ldr	r3, [r7, #12]
 8002536:	685a      	ldr	r2, [r3, #4]
 8002538:	687b      	ldr	r3, [r7, #4]
 800253a:	685b      	ldr	r3, [r3, #4]
 800253c:	431a      	orrs	r2, r3
 800253e:	68fb      	ldr	r3, [r7, #12]
 8002540:	605a      	str	r2, [r3, #4]
 8002542:	687b      	ldr	r3, [r7, #4]
 8002544:	681b      	ldr	r3, [r3, #0]
 8002546:	685a      	ldr	r2, [r3, #4]
 8002548:	687b      	ldr	r3, [r7, #4]
 800254a:	681b      	ldr	r3, [r3, #0]
 800254c:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8002550:	605a      	str	r2, [r3, #4]
 8002552:	687b      	ldr	r3, [r7, #4]
 8002554:	681b      	ldr	r3, [r3, #0]
 8002556:	6859      	ldr	r1, [r3, #4]
 8002558:	687b      	ldr	r3, [r7, #4]
 800255a:	691b      	ldr	r3, [r3, #16]
 800255c:	021a      	lsls	r2, r3, #8
 800255e:	687b      	ldr	r3, [r7, #4]
 8002560:	681b      	ldr	r3, [r3, #0]
 8002562:	430a      	orrs	r2, r1
 8002564:	605a      	str	r2, [r3, #4]
 8002566:	687b      	ldr	r3, [r7, #4]
 8002568:	681b      	ldr	r3, [r3, #0]
 800256a:	685a      	ldr	r2, [r3, #4]
 800256c:	687b      	ldr	r3, [r7, #4]
 800256e:	681b      	ldr	r3, [r3, #0]
 8002570:	f022 7240 	bic.w	r2, r2, #50331648	@ 0x3000000
 8002574:	605a      	str	r2, [r3, #4]
 8002576:	687b      	ldr	r3, [r7, #4]
 8002578:	681b      	ldr	r3, [r3, #0]
 800257a:	6859      	ldr	r1, [r3, #4]
 800257c:	687b      	ldr	r3, [r7, #4]
 800257e:	689a      	ldr	r2, [r3, #8]
 8002580:	687b      	ldr	r3, [r7, #4]
 8002582:	681b      	ldr	r3, [r3, #0]
 8002584:	430a      	orrs	r2, r1
 8002586:	605a      	str	r2, [r3, #4]
 8002588:	687b      	ldr	r3, [r7, #4]
 800258a:	681b      	ldr	r3, [r3, #0]
 800258c:	689a      	ldr	r2, [r3, #8]
 800258e:	687b      	ldr	r3, [r7, #4]
 8002590:	681b      	ldr	r3, [r3, #0]
 8002592:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8002596:	609a      	str	r2, [r3, #8]
 8002598:	687b      	ldr	r3, [r7, #4]
 800259a:	681b      	ldr	r3, [r3, #0]
 800259c:	6899      	ldr	r1, [r3, #8]
 800259e:	687b      	ldr	r3, [r7, #4]
 80025a0:	68da      	ldr	r2, [r3, #12]
 80025a2:	687b      	ldr	r3, [r7, #4]
 80025a4:	681b      	ldr	r3, [r3, #0]
 80025a6:	430a      	orrs	r2, r1
 80025a8:	609a      	str	r2, [r3, #8]
 80025aa:	687b      	ldr	r3, [r7, #4]
 80025ac:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80025ae:	4a58      	ldr	r2, [pc, #352]	@ (8002710 <ADC_Init+0x1f4>)
 80025b0:	4293      	cmp	r3, r2
 80025b2:	d022      	beq.n	80025fa <ADC_Init+0xde>
 80025b4:	687b      	ldr	r3, [r7, #4]
 80025b6:	681b      	ldr	r3, [r3, #0]
 80025b8:	689a      	ldr	r2, [r3, #8]
 80025ba:	687b      	ldr	r3, [r7, #4]
 80025bc:	681b      	ldr	r3, [r3, #0]
 80025be:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 80025c2:	609a      	str	r2, [r3, #8]
 80025c4:	687b      	ldr	r3, [r7, #4]
 80025c6:	681b      	ldr	r3, [r3, #0]
 80025c8:	6899      	ldr	r1, [r3, #8]
 80025ca:	687b      	ldr	r3, [r7, #4]
 80025cc:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 80025ce:	687b      	ldr	r3, [r7, #4]
 80025d0:	681b      	ldr	r3, [r3, #0]
 80025d2:	430a      	orrs	r2, r1
 80025d4:	609a      	str	r2, [r3, #8]
 80025d6:	687b      	ldr	r3, [r7, #4]
 80025d8:	681b      	ldr	r3, [r3, #0]
 80025da:	689a      	ldr	r2, [r3, #8]
 80025dc:	687b      	ldr	r3, [r7, #4]
 80025de:	681b      	ldr	r3, [r3, #0]
 80025e0:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 80025e4:	609a      	str	r2, [r3, #8]
 80025e6:	687b      	ldr	r3, [r7, #4]
 80025e8:	681b      	ldr	r3, [r3, #0]
 80025ea:	6899      	ldr	r1, [r3, #8]
 80025ec:	687b      	ldr	r3, [r7, #4]
 80025ee:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80025f0:	687b      	ldr	r3, [r7, #4]
 80025f2:	681b      	ldr	r3, [r3, #0]
 80025f4:	430a      	orrs	r2, r1
 80025f6:	609a      	str	r2, [r3, #8]
 80025f8:	e00f      	b.n	800261a <ADC_Init+0xfe>
 80025fa:	687b      	ldr	r3, [r7, #4]
 80025fc:	681b      	ldr	r3, [r3, #0]
 80025fe:	689a      	ldr	r2, [r3, #8]
 8002600:	687b      	ldr	r3, [r7, #4]
 8002602:	681b      	ldr	r3, [r3, #0]
 8002604:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 8002608:	609a      	str	r2, [r3, #8]
 800260a:	687b      	ldr	r3, [r7, #4]
 800260c:	681b      	ldr	r3, [r3, #0]
 800260e:	689a      	ldr	r2, [r3, #8]
 8002610:	687b      	ldr	r3, [r7, #4]
 8002612:	681b      	ldr	r3, [r3, #0]
 8002614:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 8002618:	609a      	str	r2, [r3, #8]
 800261a:	687b      	ldr	r3, [r7, #4]
 800261c:	681b      	ldr	r3, [r3, #0]
 800261e:	689a      	ldr	r2, [r3, #8]
 8002620:	687b      	ldr	r3, [r7, #4]
 8002622:	681b      	ldr	r3, [r3, #0]
 8002624:	f022 0202 	bic.w	r2, r2, #2
 8002628:	609a      	str	r2, [r3, #8]
 800262a:	687b      	ldr	r3, [r7, #4]
 800262c:	681b      	ldr	r3, [r3, #0]
 800262e:	6899      	ldr	r1, [r3, #8]
 8002630:	687b      	ldr	r3, [r7, #4]
 8002632:	7e1b      	ldrb	r3, [r3, #24]
 8002634:	005a      	lsls	r2, r3, #1
 8002636:	687b      	ldr	r3, [r7, #4]
 8002638:	681b      	ldr	r3, [r3, #0]
 800263a:	430a      	orrs	r2, r1
 800263c:	609a      	str	r2, [r3, #8]
 800263e:	687b      	ldr	r3, [r7, #4]
 8002640:	f893 3020 	ldrb.w	r3, [r3, #32]
 8002644:	2b00      	cmp	r3, #0
 8002646:	d01b      	beq.n	8002680 <ADC_Init+0x164>
 8002648:	687b      	ldr	r3, [r7, #4]
 800264a:	681b      	ldr	r3, [r3, #0]
 800264c:	685a      	ldr	r2, [r3, #4]
 800264e:	687b      	ldr	r3, [r7, #4]
 8002650:	681b      	ldr	r3, [r3, #0]
 8002652:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8002656:	605a      	str	r2, [r3, #4]
 8002658:	687b      	ldr	r3, [r7, #4]
 800265a:	681b      	ldr	r3, [r3, #0]
 800265c:	685a      	ldr	r2, [r3, #4]
 800265e:	687b      	ldr	r3, [r7, #4]
 8002660:	681b      	ldr	r3, [r3, #0]
 8002662:	f422 4260 	bic.w	r2, r2, #57344	@ 0xe000
 8002666:	605a      	str	r2, [r3, #4]
 8002668:	687b      	ldr	r3, [r7, #4]
 800266a:	681b      	ldr	r3, [r3, #0]
 800266c:	6859      	ldr	r1, [r3, #4]
 800266e:	687b      	ldr	r3, [r7, #4]
 8002670:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002672:	3b01      	subs	r3, #1
 8002674:	035a      	lsls	r2, r3, #13
 8002676:	687b      	ldr	r3, [r7, #4]
 8002678:	681b      	ldr	r3, [r3, #0]
 800267a:	430a      	orrs	r2, r1
 800267c:	605a      	str	r2, [r3, #4]
 800267e:	e007      	b.n	8002690 <ADC_Init+0x174>
 8002680:	687b      	ldr	r3, [r7, #4]
 8002682:	681b      	ldr	r3, [r3, #0]
 8002684:	685a      	ldr	r2, [r3, #4]
 8002686:	687b      	ldr	r3, [r7, #4]
 8002688:	681b      	ldr	r3, [r3, #0]
 800268a:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800268e:	605a      	str	r2, [r3, #4]
 8002690:	687b      	ldr	r3, [r7, #4]
 8002692:	681b      	ldr	r3, [r3, #0]
 8002694:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8002696:	687b      	ldr	r3, [r7, #4]
 8002698:	681b      	ldr	r3, [r3, #0]
 800269a:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 800269e:	62da      	str	r2, [r3, #44]	@ 0x2c
 80026a0:	687b      	ldr	r3, [r7, #4]
 80026a2:	681b      	ldr	r3, [r3, #0]
 80026a4:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 80026a6:	687b      	ldr	r3, [r7, #4]
 80026a8:	69db      	ldr	r3, [r3, #28]
 80026aa:	3b01      	subs	r3, #1
 80026ac:	051a      	lsls	r2, r3, #20
 80026ae:	687b      	ldr	r3, [r7, #4]
 80026b0:	681b      	ldr	r3, [r3, #0]
 80026b2:	430a      	orrs	r2, r1
 80026b4:	62da      	str	r2, [r3, #44]	@ 0x2c
 80026b6:	687b      	ldr	r3, [r7, #4]
 80026b8:	681b      	ldr	r3, [r3, #0]
 80026ba:	689a      	ldr	r2, [r3, #8]
 80026bc:	687b      	ldr	r3, [r7, #4]
 80026be:	681b      	ldr	r3, [r3, #0]
 80026c0:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 80026c4:	609a      	str	r2, [r3, #8]
 80026c6:	687b      	ldr	r3, [r7, #4]
 80026c8:	681b      	ldr	r3, [r3, #0]
 80026ca:	6899      	ldr	r1, [r3, #8]
 80026cc:	687b      	ldr	r3, [r7, #4]
 80026ce:	f893 3030 	ldrb.w	r3, [r3, #48]	@ 0x30
 80026d2:	025a      	lsls	r2, r3, #9
 80026d4:	687b      	ldr	r3, [r7, #4]
 80026d6:	681b      	ldr	r3, [r3, #0]
 80026d8:	430a      	orrs	r2, r1
 80026da:	609a      	str	r2, [r3, #8]
 80026dc:	687b      	ldr	r3, [r7, #4]
 80026de:	681b      	ldr	r3, [r3, #0]
 80026e0:	689a      	ldr	r2, [r3, #8]
 80026e2:	687b      	ldr	r3, [r7, #4]
 80026e4:	681b      	ldr	r3, [r3, #0]
 80026e6:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80026ea:	609a      	str	r2, [r3, #8]
 80026ec:	687b      	ldr	r3, [r7, #4]
 80026ee:	681b      	ldr	r3, [r3, #0]
 80026f0:	6899      	ldr	r1, [r3, #8]
 80026f2:	687b      	ldr	r3, [r7, #4]
 80026f4:	695b      	ldr	r3, [r3, #20]
 80026f6:	029a      	lsls	r2, r3, #10
 80026f8:	687b      	ldr	r3, [r7, #4]
 80026fa:	681b      	ldr	r3, [r3, #0]
 80026fc:	430a      	orrs	r2, r1
 80026fe:	609a      	str	r2, [r3, #8]
 8002700:	bf00      	nop
 8002702:	3714      	adds	r7, #20
 8002704:	46bd      	mov	sp, r7
 8002706:	f85d 7b04 	ldr.w	r7, [sp], #4
 800270a:	4770      	bx	lr
 800270c:	40012300 	.word	0x40012300
 8002710:	0f000001 	.word	0x0f000001

08002714 <HAL_ADCEx_InjectedConvCpltCallback>:
 8002714:	b480      	push	{r7}
 8002716:	b083      	sub	sp, #12
 8002718:	af00      	add	r7, sp, #0
 800271a:	6078      	str	r0, [r7, #4]
 800271c:	bf00      	nop
 800271e:	370c      	adds	r7, #12
 8002720:	46bd      	mov	sp, r7
 8002722:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002726:	4770      	bx	lr

08002728 <__NVIC_SetPriorityGrouping>:
 8002728:	b480      	push	{r7}
 800272a:	b085      	sub	sp, #20
 800272c:	af00      	add	r7, sp, #0
 800272e:	6078      	str	r0, [r7, #4]
 8002730:	687b      	ldr	r3, [r7, #4]
 8002732:	f003 0307 	and.w	r3, r3, #7
 8002736:	60fb      	str	r3, [r7, #12]
 8002738:	4b0c      	ldr	r3, [pc, #48]	@ (800276c <__NVIC_SetPriorityGrouping+0x44>)
 800273a:	68db      	ldr	r3, [r3, #12]
 800273c:	60bb      	str	r3, [r7, #8]
 800273e:	68ba      	ldr	r2, [r7, #8]
 8002740:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8002744:	4013      	ands	r3, r2
 8002746:	60bb      	str	r3, [r7, #8]
 8002748:	68fb      	ldr	r3, [r7, #12]
 800274a:	021a      	lsls	r2, r3, #8
 800274c:	68bb      	ldr	r3, [r7, #8]
 800274e:	4313      	orrs	r3, r2
 8002750:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8002754:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8002758:	60bb      	str	r3, [r7, #8]
 800275a:	4a04      	ldr	r2, [pc, #16]	@ (800276c <__NVIC_SetPriorityGrouping+0x44>)
 800275c:	68bb      	ldr	r3, [r7, #8]
 800275e:	60d3      	str	r3, [r2, #12]
 8002760:	bf00      	nop
 8002762:	3714      	adds	r7, #20
 8002764:	46bd      	mov	sp, r7
 8002766:	f85d 7b04 	ldr.w	r7, [sp], #4
 800276a:	4770      	bx	lr
 800276c:	e000ed00 	.word	0xe000ed00

08002770 <__NVIC_GetPriorityGrouping>:
 8002770:	b480      	push	{r7}
 8002772:	af00      	add	r7, sp, #0
 8002774:	4b04      	ldr	r3, [pc, #16]	@ (8002788 <__NVIC_GetPriorityGrouping+0x18>)
 8002776:	68db      	ldr	r3, [r3, #12]
 8002778:	0a1b      	lsrs	r3, r3, #8
 800277a:	f003 0307 	and.w	r3, r3, #7
 800277e:	4618      	mov	r0, r3
 8002780:	46bd      	mov	sp, r7
 8002782:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002786:	4770      	bx	lr
 8002788:	e000ed00 	.word	0xe000ed00

0800278c <__NVIC_EnableIRQ>:
 800278c:	b480      	push	{r7}
 800278e:	b083      	sub	sp, #12
 8002790:	af00      	add	r7, sp, #0
 8002792:	4603      	mov	r3, r0
 8002794:	71fb      	strb	r3, [r7, #7]
 8002796:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800279a:	2b00      	cmp	r3, #0
 800279c:	db0b      	blt.n	80027b6 <__NVIC_EnableIRQ+0x2a>
 800279e:	79fb      	ldrb	r3, [r7, #7]
 80027a0:	f003 021f 	and.w	r2, r3, #31
 80027a4:	4907      	ldr	r1, [pc, #28]	@ (80027c4 <__NVIC_EnableIRQ+0x38>)
 80027a6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80027aa:	095b      	lsrs	r3, r3, #5
 80027ac:	2001      	movs	r0, #1
 80027ae:	fa00 f202 	lsl.w	r2, r0, r2
 80027b2:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80027b6:	bf00      	nop
 80027b8:	370c      	adds	r7, #12
 80027ba:	46bd      	mov	sp, r7
 80027bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027c0:	4770      	bx	lr
 80027c2:	bf00      	nop
 80027c4:	e000e100 	.word	0xe000e100

080027c8 <__NVIC_SetPriority>:
 80027c8:	b480      	push	{r7}
 80027ca:	b083      	sub	sp, #12
 80027cc:	af00      	add	r7, sp, #0
 80027ce:	4603      	mov	r3, r0
 80027d0:	6039      	str	r1, [r7, #0]
 80027d2:	71fb      	strb	r3, [r7, #7]
 80027d4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80027d8:	2b00      	cmp	r3, #0
 80027da:	db0a      	blt.n	80027f2 <__NVIC_SetPriority+0x2a>
 80027dc:	683b      	ldr	r3, [r7, #0]
 80027de:	b2da      	uxtb	r2, r3
 80027e0:	490c      	ldr	r1, [pc, #48]	@ (8002814 <__NVIC_SetPriority+0x4c>)
 80027e2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80027e6:	0112      	lsls	r2, r2, #4
 80027e8:	b2d2      	uxtb	r2, r2
 80027ea:	440b      	add	r3, r1
 80027ec:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 80027f0:	e00a      	b.n	8002808 <__NVIC_SetPriority+0x40>
 80027f2:	683b      	ldr	r3, [r7, #0]
 80027f4:	b2da      	uxtb	r2, r3
 80027f6:	4908      	ldr	r1, [pc, #32]	@ (8002818 <__NVIC_SetPriority+0x50>)
 80027f8:	79fb      	ldrb	r3, [r7, #7]
 80027fa:	f003 030f 	and.w	r3, r3, #15
 80027fe:	3b04      	subs	r3, #4
 8002800:	0112      	lsls	r2, r2, #4
 8002802:	b2d2      	uxtb	r2, r2
 8002804:	440b      	add	r3, r1
 8002806:	761a      	strb	r2, [r3, #24]
 8002808:	bf00      	nop
 800280a:	370c      	adds	r7, #12
 800280c:	46bd      	mov	sp, r7
 800280e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002812:	4770      	bx	lr
 8002814:	e000e100 	.word	0xe000e100
 8002818:	e000ed00 	.word	0xe000ed00

0800281c <NVIC_EncodePriority>:
 800281c:	b480      	push	{r7}
 800281e:	b089      	sub	sp, #36	@ 0x24
 8002820:	af00      	add	r7, sp, #0
 8002822:	60f8      	str	r0, [r7, #12]
 8002824:	60b9      	str	r1, [r7, #8]
 8002826:	607a      	str	r2, [r7, #4]
 8002828:	68fb      	ldr	r3, [r7, #12]
 800282a:	f003 0307 	and.w	r3, r3, #7
 800282e:	61fb      	str	r3, [r7, #28]
 8002830:	69fb      	ldr	r3, [r7, #28]
 8002832:	f1c3 0307 	rsb	r3, r3, #7
 8002836:	2b04      	cmp	r3, #4
 8002838:	bf28      	it	cs
 800283a:	2304      	movcs	r3, #4
 800283c:	61bb      	str	r3, [r7, #24]
 800283e:	69fb      	ldr	r3, [r7, #28]
 8002840:	3304      	adds	r3, #4
 8002842:	2b06      	cmp	r3, #6
 8002844:	d902      	bls.n	800284c <NVIC_EncodePriority+0x30>
 8002846:	69fb      	ldr	r3, [r7, #28]
 8002848:	3b03      	subs	r3, #3
 800284a:	e000      	b.n	800284e <NVIC_EncodePriority+0x32>
 800284c:	2300      	movs	r3, #0
 800284e:	617b      	str	r3, [r7, #20]
 8002850:	f04f 32ff 	mov.w	r2, #4294967295
 8002854:	69bb      	ldr	r3, [r7, #24]
 8002856:	fa02 f303 	lsl.w	r3, r2, r3
 800285a:	43da      	mvns	r2, r3
 800285c:	68bb      	ldr	r3, [r7, #8]
 800285e:	401a      	ands	r2, r3
 8002860:	697b      	ldr	r3, [r7, #20]
 8002862:	409a      	lsls	r2, r3
 8002864:	f04f 31ff 	mov.w	r1, #4294967295
 8002868:	697b      	ldr	r3, [r7, #20]
 800286a:	fa01 f303 	lsl.w	r3, r1, r3
 800286e:	43d9      	mvns	r1, r3
 8002870:	687b      	ldr	r3, [r7, #4]
 8002872:	400b      	ands	r3, r1
 8002874:	4313      	orrs	r3, r2
 8002876:	4618      	mov	r0, r3
 8002878:	3724      	adds	r7, #36	@ 0x24
 800287a:	46bd      	mov	sp, r7
 800287c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002880:	4770      	bx	lr
	...

08002884 <SysTick_Config>:
 8002884:	b580      	push	{r7, lr}
 8002886:	b082      	sub	sp, #8
 8002888:	af00      	add	r7, sp, #0
 800288a:	6078      	str	r0, [r7, #4]
 800288c:	687b      	ldr	r3, [r7, #4]
 800288e:	3b01      	subs	r3, #1
 8002890:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8002894:	d301      	bcc.n	800289a <SysTick_Config+0x16>
 8002896:	2301      	movs	r3, #1
 8002898:	e00f      	b.n	80028ba <SysTick_Config+0x36>
 800289a:	4a0a      	ldr	r2, [pc, #40]	@ (80028c4 <SysTick_Config+0x40>)
 800289c:	687b      	ldr	r3, [r7, #4]
 800289e:	3b01      	subs	r3, #1
 80028a0:	6053      	str	r3, [r2, #4]
 80028a2:	210f      	movs	r1, #15
 80028a4:	f04f 30ff 	mov.w	r0, #4294967295
 80028a8:	f7ff ff8e 	bl	80027c8 <__NVIC_SetPriority>
 80028ac:	4b05      	ldr	r3, [pc, #20]	@ (80028c4 <SysTick_Config+0x40>)
 80028ae:	2200      	movs	r2, #0
 80028b0:	609a      	str	r2, [r3, #8]
 80028b2:	4b04      	ldr	r3, [pc, #16]	@ (80028c4 <SysTick_Config+0x40>)
 80028b4:	2207      	movs	r2, #7
 80028b6:	601a      	str	r2, [r3, #0]
 80028b8:	2300      	movs	r3, #0
 80028ba:	4618      	mov	r0, r3
 80028bc:	3708      	adds	r7, #8
 80028be:	46bd      	mov	sp, r7
 80028c0:	bd80      	pop	{r7, pc}
 80028c2:	bf00      	nop
 80028c4:	e000e010 	.word	0xe000e010

080028c8 <HAL_NVIC_SetPriorityGrouping>:
 80028c8:	b580      	push	{r7, lr}
 80028ca:	b082      	sub	sp, #8
 80028cc:	af00      	add	r7, sp, #0
 80028ce:	6078      	str	r0, [r7, #4]
 80028d0:	6878      	ldr	r0, [r7, #4]
 80028d2:	f7ff ff29 	bl	8002728 <__NVIC_SetPriorityGrouping>
 80028d6:	bf00      	nop
 80028d8:	3708      	adds	r7, #8
 80028da:	46bd      	mov	sp, r7
 80028dc:	bd80      	pop	{r7, pc}

080028de <HAL_NVIC_SetPriority>:
 80028de:	b580      	push	{r7, lr}
 80028e0:	b086      	sub	sp, #24
 80028e2:	af00      	add	r7, sp, #0
 80028e4:	4603      	mov	r3, r0
 80028e6:	60b9      	str	r1, [r7, #8]
 80028e8:	607a      	str	r2, [r7, #4]
 80028ea:	73fb      	strb	r3, [r7, #15]
 80028ec:	2300      	movs	r3, #0
 80028ee:	617b      	str	r3, [r7, #20]
 80028f0:	f7ff ff3e 	bl	8002770 <__NVIC_GetPriorityGrouping>
 80028f4:	6178      	str	r0, [r7, #20]
 80028f6:	687a      	ldr	r2, [r7, #4]
 80028f8:	68b9      	ldr	r1, [r7, #8]
 80028fa:	6978      	ldr	r0, [r7, #20]
 80028fc:	f7ff ff8e 	bl	800281c <NVIC_EncodePriority>
 8002900:	4602      	mov	r2, r0
 8002902:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8002906:	4611      	mov	r1, r2
 8002908:	4618      	mov	r0, r3
 800290a:	f7ff ff5d 	bl	80027c8 <__NVIC_SetPriority>
 800290e:	bf00      	nop
 8002910:	3718      	adds	r7, #24
 8002912:	46bd      	mov	sp, r7
 8002914:	bd80      	pop	{r7, pc}

08002916 <HAL_NVIC_EnableIRQ>:
 8002916:	b580      	push	{r7, lr}
 8002918:	b082      	sub	sp, #8
 800291a:	af00      	add	r7, sp, #0
 800291c:	4603      	mov	r3, r0
 800291e:	71fb      	strb	r3, [r7, #7]
 8002920:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002924:	4618      	mov	r0, r3
 8002926:	f7ff ff31 	bl	800278c <__NVIC_EnableIRQ>
 800292a:	bf00      	nop
 800292c:	3708      	adds	r7, #8
 800292e:	46bd      	mov	sp, r7
 8002930:	bd80      	pop	{r7, pc}

08002932 <HAL_SYSTICK_Config>:
 8002932:	b580      	push	{r7, lr}
 8002934:	b082      	sub	sp, #8
 8002936:	af00      	add	r7, sp, #0
 8002938:	6078      	str	r0, [r7, #4]
 800293a:	6878      	ldr	r0, [r7, #4]
 800293c:	f7ff ffa2 	bl	8002884 <SysTick_Config>
 8002940:	4603      	mov	r3, r0
 8002942:	4618      	mov	r0, r3
 8002944:	3708      	adds	r7, #8
 8002946:	46bd      	mov	sp, r7
 8002948:	bd80      	pop	{r7, pc}
	...

0800294c <HAL_DMA_Init>:
 800294c:	b580      	push	{r7, lr}
 800294e:	b086      	sub	sp, #24
 8002950:	af00      	add	r7, sp, #0
 8002952:	6078      	str	r0, [r7, #4]
 8002954:	2300      	movs	r3, #0
 8002956:	617b      	str	r3, [r7, #20]
 8002958:	f7ff f97e 	bl	8001c58 <HAL_GetTick>
 800295c:	6138      	str	r0, [r7, #16]
 800295e:	687b      	ldr	r3, [r7, #4]
 8002960:	2b00      	cmp	r3, #0
 8002962:	d101      	bne.n	8002968 <HAL_DMA_Init+0x1c>
 8002964:	2301      	movs	r3, #1
 8002966:	e099      	b.n	8002a9c <HAL_DMA_Init+0x150>
 8002968:	687b      	ldr	r3, [r7, #4]
 800296a:	2202      	movs	r2, #2
 800296c:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8002970:	687b      	ldr	r3, [r7, #4]
 8002972:	2200      	movs	r2, #0
 8002974:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8002978:	687b      	ldr	r3, [r7, #4]
 800297a:	681b      	ldr	r3, [r3, #0]
 800297c:	681a      	ldr	r2, [r3, #0]
 800297e:	687b      	ldr	r3, [r7, #4]
 8002980:	681b      	ldr	r3, [r3, #0]
 8002982:	f022 0201 	bic.w	r2, r2, #1
 8002986:	601a      	str	r2, [r3, #0]
 8002988:	e00f      	b.n	80029aa <HAL_DMA_Init+0x5e>
 800298a:	f7ff f965 	bl	8001c58 <HAL_GetTick>
 800298e:	4602      	mov	r2, r0
 8002990:	693b      	ldr	r3, [r7, #16]
 8002992:	1ad3      	subs	r3, r2, r3
 8002994:	2b05      	cmp	r3, #5
 8002996:	d908      	bls.n	80029aa <HAL_DMA_Init+0x5e>
 8002998:	687b      	ldr	r3, [r7, #4]
 800299a:	2220      	movs	r2, #32
 800299c:	655a      	str	r2, [r3, #84]	@ 0x54
 800299e:	687b      	ldr	r3, [r7, #4]
 80029a0:	2203      	movs	r2, #3
 80029a2:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80029a6:	2303      	movs	r3, #3
 80029a8:	e078      	b.n	8002a9c <HAL_DMA_Init+0x150>
 80029aa:	687b      	ldr	r3, [r7, #4]
 80029ac:	681b      	ldr	r3, [r3, #0]
 80029ae:	681b      	ldr	r3, [r3, #0]
 80029b0:	f003 0301 	and.w	r3, r3, #1
 80029b4:	2b00      	cmp	r3, #0
 80029b6:	d1e8      	bne.n	800298a <HAL_DMA_Init+0x3e>
 80029b8:	687b      	ldr	r3, [r7, #4]
 80029ba:	681b      	ldr	r3, [r3, #0]
 80029bc:	681b      	ldr	r3, [r3, #0]
 80029be:	617b      	str	r3, [r7, #20]
 80029c0:	697a      	ldr	r2, [r7, #20]
 80029c2:	4b38      	ldr	r3, [pc, #224]	@ (8002aa4 <HAL_DMA_Init+0x158>)
 80029c4:	4013      	ands	r3, r2
 80029c6:	617b      	str	r3, [r7, #20]
 80029c8:	687b      	ldr	r3, [r7, #4]
 80029ca:	685a      	ldr	r2, [r3, #4]
 80029cc:	687b      	ldr	r3, [r7, #4]
 80029ce:	689b      	ldr	r3, [r3, #8]
 80029d0:	431a      	orrs	r2, r3
 80029d2:	687b      	ldr	r3, [r7, #4]
 80029d4:	68db      	ldr	r3, [r3, #12]
 80029d6:	431a      	orrs	r2, r3
 80029d8:	687b      	ldr	r3, [r7, #4]
 80029da:	691b      	ldr	r3, [r3, #16]
 80029dc:	431a      	orrs	r2, r3
 80029de:	687b      	ldr	r3, [r7, #4]
 80029e0:	695b      	ldr	r3, [r3, #20]
 80029e2:	431a      	orrs	r2, r3
 80029e4:	687b      	ldr	r3, [r7, #4]
 80029e6:	699b      	ldr	r3, [r3, #24]
 80029e8:	431a      	orrs	r2, r3
 80029ea:	687b      	ldr	r3, [r7, #4]
 80029ec:	69db      	ldr	r3, [r3, #28]
 80029ee:	431a      	orrs	r2, r3
 80029f0:	687b      	ldr	r3, [r7, #4]
 80029f2:	6a1b      	ldr	r3, [r3, #32]
 80029f4:	4313      	orrs	r3, r2
 80029f6:	697a      	ldr	r2, [r7, #20]
 80029f8:	4313      	orrs	r3, r2
 80029fa:	617b      	str	r3, [r7, #20]
 80029fc:	687b      	ldr	r3, [r7, #4]
 80029fe:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002a00:	2b04      	cmp	r3, #4
 8002a02:	d107      	bne.n	8002a14 <HAL_DMA_Init+0xc8>
 8002a04:	687b      	ldr	r3, [r7, #4]
 8002a06:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8002a08:	687b      	ldr	r3, [r7, #4]
 8002a0a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002a0c:	4313      	orrs	r3, r2
 8002a0e:	697a      	ldr	r2, [r7, #20]
 8002a10:	4313      	orrs	r3, r2
 8002a12:	617b      	str	r3, [r7, #20]
 8002a14:	687b      	ldr	r3, [r7, #4]
 8002a16:	681b      	ldr	r3, [r3, #0]
 8002a18:	697a      	ldr	r2, [r7, #20]
 8002a1a:	601a      	str	r2, [r3, #0]
 8002a1c:	687b      	ldr	r3, [r7, #4]
 8002a1e:	681b      	ldr	r3, [r3, #0]
 8002a20:	695b      	ldr	r3, [r3, #20]
 8002a22:	617b      	str	r3, [r7, #20]
 8002a24:	697b      	ldr	r3, [r7, #20]
 8002a26:	f023 0307 	bic.w	r3, r3, #7
 8002a2a:	617b      	str	r3, [r7, #20]
 8002a2c:	687b      	ldr	r3, [r7, #4]
 8002a2e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002a30:	697a      	ldr	r2, [r7, #20]
 8002a32:	4313      	orrs	r3, r2
 8002a34:	617b      	str	r3, [r7, #20]
 8002a36:	687b      	ldr	r3, [r7, #4]
 8002a38:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002a3a:	2b04      	cmp	r3, #4
 8002a3c:	d117      	bne.n	8002a6e <HAL_DMA_Init+0x122>
 8002a3e:	687b      	ldr	r3, [r7, #4]
 8002a40:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002a42:	697a      	ldr	r2, [r7, #20]
 8002a44:	4313      	orrs	r3, r2
 8002a46:	617b      	str	r3, [r7, #20]
 8002a48:	687b      	ldr	r3, [r7, #4]
 8002a4a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002a4c:	2b00      	cmp	r3, #0
 8002a4e:	d00e      	beq.n	8002a6e <HAL_DMA_Init+0x122>
 8002a50:	6878      	ldr	r0, [r7, #4]
 8002a52:	f000 fa91 	bl	8002f78 <DMA_CheckFifoParam>
 8002a56:	4603      	mov	r3, r0
 8002a58:	2b00      	cmp	r3, #0
 8002a5a:	d008      	beq.n	8002a6e <HAL_DMA_Init+0x122>
 8002a5c:	687b      	ldr	r3, [r7, #4]
 8002a5e:	2240      	movs	r2, #64	@ 0x40
 8002a60:	655a      	str	r2, [r3, #84]	@ 0x54
 8002a62:	687b      	ldr	r3, [r7, #4]
 8002a64:	2201      	movs	r2, #1
 8002a66:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8002a6a:	2301      	movs	r3, #1
 8002a6c:	e016      	b.n	8002a9c <HAL_DMA_Init+0x150>
 8002a6e:	687b      	ldr	r3, [r7, #4]
 8002a70:	681b      	ldr	r3, [r3, #0]
 8002a72:	697a      	ldr	r2, [r7, #20]
 8002a74:	615a      	str	r2, [r3, #20]
 8002a76:	6878      	ldr	r0, [r7, #4]
 8002a78:	f000 fa48 	bl	8002f0c <DMA_CalcBaseAndBitshift>
 8002a7c:	4603      	mov	r3, r0
 8002a7e:	60fb      	str	r3, [r7, #12]
 8002a80:	687b      	ldr	r3, [r7, #4]
 8002a82:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002a84:	223f      	movs	r2, #63	@ 0x3f
 8002a86:	409a      	lsls	r2, r3
 8002a88:	68fb      	ldr	r3, [r7, #12]
 8002a8a:	609a      	str	r2, [r3, #8]
 8002a8c:	687b      	ldr	r3, [r7, #4]
 8002a8e:	2200      	movs	r2, #0
 8002a90:	655a      	str	r2, [r3, #84]	@ 0x54
 8002a92:	687b      	ldr	r3, [r7, #4]
 8002a94:	2201      	movs	r2, #1
 8002a96:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8002a9a:	2300      	movs	r3, #0
 8002a9c:	4618      	mov	r0, r3
 8002a9e:	3718      	adds	r7, #24
 8002aa0:	46bd      	mov	sp, r7
 8002aa2:	bd80      	pop	{r7, pc}
 8002aa4:	f010803f 	.word	0xf010803f

08002aa8 <HAL_DMA_Start_IT>:
 8002aa8:	b580      	push	{r7, lr}
 8002aaa:	b086      	sub	sp, #24
 8002aac:	af00      	add	r7, sp, #0
 8002aae:	60f8      	str	r0, [r7, #12]
 8002ab0:	60b9      	str	r1, [r7, #8]
 8002ab2:	607a      	str	r2, [r7, #4]
 8002ab4:	603b      	str	r3, [r7, #0]
 8002ab6:	2300      	movs	r3, #0
 8002ab8:	75fb      	strb	r3, [r7, #23]
 8002aba:	68fb      	ldr	r3, [r7, #12]
 8002abc:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002abe:	613b      	str	r3, [r7, #16]
 8002ac0:	68fb      	ldr	r3, [r7, #12]
 8002ac2:	f893 3034 	ldrb.w	r3, [r3, #52]	@ 0x34
 8002ac6:	2b01      	cmp	r3, #1
 8002ac8:	d101      	bne.n	8002ace <HAL_DMA_Start_IT+0x26>
 8002aca:	2302      	movs	r3, #2
 8002acc:	e040      	b.n	8002b50 <HAL_DMA_Start_IT+0xa8>
 8002ace:	68fb      	ldr	r3, [r7, #12]
 8002ad0:	2201      	movs	r2, #1
 8002ad2:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8002ad6:	68fb      	ldr	r3, [r7, #12]
 8002ad8:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8002adc:	b2db      	uxtb	r3, r3
 8002ade:	2b01      	cmp	r3, #1
 8002ae0:	d12f      	bne.n	8002b42 <HAL_DMA_Start_IT+0x9a>
 8002ae2:	68fb      	ldr	r3, [r7, #12]
 8002ae4:	2202      	movs	r2, #2
 8002ae6:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8002aea:	68fb      	ldr	r3, [r7, #12]
 8002aec:	2200      	movs	r2, #0
 8002aee:	655a      	str	r2, [r3, #84]	@ 0x54
 8002af0:	683b      	ldr	r3, [r7, #0]
 8002af2:	687a      	ldr	r2, [r7, #4]
 8002af4:	68b9      	ldr	r1, [r7, #8]
 8002af6:	68f8      	ldr	r0, [r7, #12]
 8002af8:	f000 f9da 	bl	8002eb0 <DMA_SetConfig>
 8002afc:	68fb      	ldr	r3, [r7, #12]
 8002afe:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002b00:	223f      	movs	r2, #63	@ 0x3f
 8002b02:	409a      	lsls	r2, r3
 8002b04:	693b      	ldr	r3, [r7, #16]
 8002b06:	609a      	str	r2, [r3, #8]
 8002b08:	68fb      	ldr	r3, [r7, #12]
 8002b0a:	681b      	ldr	r3, [r3, #0]
 8002b0c:	681a      	ldr	r2, [r3, #0]
 8002b0e:	68fb      	ldr	r3, [r7, #12]
 8002b10:	681b      	ldr	r3, [r3, #0]
 8002b12:	f042 0216 	orr.w	r2, r2, #22
 8002b16:	601a      	str	r2, [r3, #0]
 8002b18:	68fb      	ldr	r3, [r7, #12]
 8002b1a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002b1c:	2b00      	cmp	r3, #0
 8002b1e:	d007      	beq.n	8002b30 <HAL_DMA_Start_IT+0x88>
 8002b20:	68fb      	ldr	r3, [r7, #12]
 8002b22:	681b      	ldr	r3, [r3, #0]
 8002b24:	681a      	ldr	r2, [r3, #0]
 8002b26:	68fb      	ldr	r3, [r7, #12]
 8002b28:	681b      	ldr	r3, [r3, #0]
 8002b2a:	f042 0208 	orr.w	r2, r2, #8
 8002b2e:	601a      	str	r2, [r3, #0]
 8002b30:	68fb      	ldr	r3, [r7, #12]
 8002b32:	681b      	ldr	r3, [r3, #0]
 8002b34:	681a      	ldr	r2, [r3, #0]
 8002b36:	68fb      	ldr	r3, [r7, #12]
 8002b38:	681b      	ldr	r3, [r3, #0]
 8002b3a:	f042 0201 	orr.w	r2, r2, #1
 8002b3e:	601a      	str	r2, [r3, #0]
 8002b40:	e005      	b.n	8002b4e <HAL_DMA_Start_IT+0xa6>
 8002b42:	68fb      	ldr	r3, [r7, #12]
 8002b44:	2200      	movs	r2, #0
 8002b46:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8002b4a:	2302      	movs	r3, #2
 8002b4c:	75fb      	strb	r3, [r7, #23]
 8002b4e:	7dfb      	ldrb	r3, [r7, #23]
 8002b50:	4618      	mov	r0, r3
 8002b52:	3718      	adds	r7, #24
 8002b54:	46bd      	mov	sp, r7
 8002b56:	bd80      	pop	{r7, pc}

08002b58 <HAL_DMA_Abort_IT>:
 8002b58:	b480      	push	{r7}
 8002b5a:	b083      	sub	sp, #12
 8002b5c:	af00      	add	r7, sp, #0
 8002b5e:	6078      	str	r0, [r7, #4]
 8002b60:	687b      	ldr	r3, [r7, #4]
 8002b62:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8002b66:	b2db      	uxtb	r3, r3
 8002b68:	2b02      	cmp	r3, #2
 8002b6a:	d004      	beq.n	8002b76 <HAL_DMA_Abort_IT+0x1e>
 8002b6c:	687b      	ldr	r3, [r7, #4]
 8002b6e:	2280      	movs	r2, #128	@ 0x80
 8002b70:	655a      	str	r2, [r3, #84]	@ 0x54
 8002b72:	2301      	movs	r3, #1
 8002b74:	e00c      	b.n	8002b90 <HAL_DMA_Abort_IT+0x38>
 8002b76:	687b      	ldr	r3, [r7, #4]
 8002b78:	2205      	movs	r2, #5
 8002b7a:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8002b7e:	687b      	ldr	r3, [r7, #4]
 8002b80:	681b      	ldr	r3, [r3, #0]
 8002b82:	681a      	ldr	r2, [r3, #0]
 8002b84:	687b      	ldr	r3, [r7, #4]
 8002b86:	681b      	ldr	r3, [r3, #0]
 8002b88:	f022 0201 	bic.w	r2, r2, #1
 8002b8c:	601a      	str	r2, [r3, #0]
 8002b8e:	2300      	movs	r3, #0
 8002b90:	4618      	mov	r0, r3
 8002b92:	370c      	adds	r7, #12
 8002b94:	46bd      	mov	sp, r7
 8002b96:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b9a:	4770      	bx	lr

08002b9c <HAL_DMA_IRQHandler>:
 8002b9c:	b580      	push	{r7, lr}
 8002b9e:	b086      	sub	sp, #24
 8002ba0:	af00      	add	r7, sp, #0
 8002ba2:	6078      	str	r0, [r7, #4]
 8002ba4:	2300      	movs	r3, #0
 8002ba6:	60bb      	str	r3, [r7, #8]
 8002ba8:	4b8e      	ldr	r3, [pc, #568]	@ (8002de4 <HAL_DMA_IRQHandler+0x248>)
 8002baa:	681b      	ldr	r3, [r3, #0]
 8002bac:	4a8e      	ldr	r2, [pc, #568]	@ (8002de8 <HAL_DMA_IRQHandler+0x24c>)
 8002bae:	fba2 2303 	umull	r2, r3, r2, r3
 8002bb2:	0a9b      	lsrs	r3, r3, #10
 8002bb4:	617b      	str	r3, [r7, #20]
 8002bb6:	687b      	ldr	r3, [r7, #4]
 8002bb8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002bba:	613b      	str	r3, [r7, #16]
 8002bbc:	693b      	ldr	r3, [r7, #16]
 8002bbe:	681b      	ldr	r3, [r3, #0]
 8002bc0:	60fb      	str	r3, [r7, #12]
 8002bc2:	687b      	ldr	r3, [r7, #4]
 8002bc4:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002bc6:	2208      	movs	r2, #8
 8002bc8:	409a      	lsls	r2, r3
 8002bca:	68fb      	ldr	r3, [r7, #12]
 8002bcc:	4013      	ands	r3, r2
 8002bce:	2b00      	cmp	r3, #0
 8002bd0:	d01a      	beq.n	8002c08 <HAL_DMA_IRQHandler+0x6c>
 8002bd2:	687b      	ldr	r3, [r7, #4]
 8002bd4:	681b      	ldr	r3, [r3, #0]
 8002bd6:	681b      	ldr	r3, [r3, #0]
 8002bd8:	f003 0304 	and.w	r3, r3, #4
 8002bdc:	2b00      	cmp	r3, #0
 8002bde:	d013      	beq.n	8002c08 <HAL_DMA_IRQHandler+0x6c>
 8002be0:	687b      	ldr	r3, [r7, #4]
 8002be2:	681b      	ldr	r3, [r3, #0]
 8002be4:	681a      	ldr	r2, [r3, #0]
 8002be6:	687b      	ldr	r3, [r7, #4]
 8002be8:	681b      	ldr	r3, [r3, #0]
 8002bea:	f022 0204 	bic.w	r2, r2, #4
 8002bee:	601a      	str	r2, [r3, #0]
 8002bf0:	687b      	ldr	r3, [r7, #4]
 8002bf2:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002bf4:	2208      	movs	r2, #8
 8002bf6:	409a      	lsls	r2, r3
 8002bf8:	693b      	ldr	r3, [r7, #16]
 8002bfa:	609a      	str	r2, [r3, #8]
 8002bfc:	687b      	ldr	r3, [r7, #4]
 8002bfe:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002c00:	f043 0201 	orr.w	r2, r3, #1
 8002c04:	687b      	ldr	r3, [r7, #4]
 8002c06:	655a      	str	r2, [r3, #84]	@ 0x54
 8002c08:	687b      	ldr	r3, [r7, #4]
 8002c0a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002c0c:	2201      	movs	r2, #1
 8002c0e:	409a      	lsls	r2, r3
 8002c10:	68fb      	ldr	r3, [r7, #12]
 8002c12:	4013      	ands	r3, r2
 8002c14:	2b00      	cmp	r3, #0
 8002c16:	d012      	beq.n	8002c3e <HAL_DMA_IRQHandler+0xa2>
 8002c18:	687b      	ldr	r3, [r7, #4]
 8002c1a:	681b      	ldr	r3, [r3, #0]
 8002c1c:	695b      	ldr	r3, [r3, #20]
 8002c1e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8002c22:	2b00      	cmp	r3, #0
 8002c24:	d00b      	beq.n	8002c3e <HAL_DMA_IRQHandler+0xa2>
 8002c26:	687b      	ldr	r3, [r7, #4]
 8002c28:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002c2a:	2201      	movs	r2, #1
 8002c2c:	409a      	lsls	r2, r3
 8002c2e:	693b      	ldr	r3, [r7, #16]
 8002c30:	609a      	str	r2, [r3, #8]
 8002c32:	687b      	ldr	r3, [r7, #4]
 8002c34:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002c36:	f043 0202 	orr.w	r2, r3, #2
 8002c3a:	687b      	ldr	r3, [r7, #4]
 8002c3c:	655a      	str	r2, [r3, #84]	@ 0x54
 8002c3e:	687b      	ldr	r3, [r7, #4]
 8002c40:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002c42:	2204      	movs	r2, #4
 8002c44:	409a      	lsls	r2, r3
 8002c46:	68fb      	ldr	r3, [r7, #12]
 8002c48:	4013      	ands	r3, r2
 8002c4a:	2b00      	cmp	r3, #0
 8002c4c:	d012      	beq.n	8002c74 <HAL_DMA_IRQHandler+0xd8>
 8002c4e:	687b      	ldr	r3, [r7, #4]
 8002c50:	681b      	ldr	r3, [r3, #0]
 8002c52:	681b      	ldr	r3, [r3, #0]
 8002c54:	f003 0302 	and.w	r3, r3, #2
 8002c58:	2b00      	cmp	r3, #0
 8002c5a:	d00b      	beq.n	8002c74 <HAL_DMA_IRQHandler+0xd8>
 8002c5c:	687b      	ldr	r3, [r7, #4]
 8002c5e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002c60:	2204      	movs	r2, #4
 8002c62:	409a      	lsls	r2, r3
 8002c64:	693b      	ldr	r3, [r7, #16]
 8002c66:	609a      	str	r2, [r3, #8]
 8002c68:	687b      	ldr	r3, [r7, #4]
 8002c6a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002c6c:	f043 0204 	orr.w	r2, r3, #4
 8002c70:	687b      	ldr	r3, [r7, #4]
 8002c72:	655a      	str	r2, [r3, #84]	@ 0x54
 8002c74:	687b      	ldr	r3, [r7, #4]
 8002c76:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002c78:	2210      	movs	r2, #16
 8002c7a:	409a      	lsls	r2, r3
 8002c7c:	68fb      	ldr	r3, [r7, #12]
 8002c7e:	4013      	ands	r3, r2
 8002c80:	2b00      	cmp	r3, #0
 8002c82:	d043      	beq.n	8002d0c <HAL_DMA_IRQHandler+0x170>
 8002c84:	687b      	ldr	r3, [r7, #4]
 8002c86:	681b      	ldr	r3, [r3, #0]
 8002c88:	681b      	ldr	r3, [r3, #0]
 8002c8a:	f003 0308 	and.w	r3, r3, #8
 8002c8e:	2b00      	cmp	r3, #0
 8002c90:	d03c      	beq.n	8002d0c <HAL_DMA_IRQHandler+0x170>
 8002c92:	687b      	ldr	r3, [r7, #4]
 8002c94:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002c96:	2210      	movs	r2, #16
 8002c98:	409a      	lsls	r2, r3
 8002c9a:	693b      	ldr	r3, [r7, #16]
 8002c9c:	609a      	str	r2, [r3, #8]
 8002c9e:	687b      	ldr	r3, [r7, #4]
 8002ca0:	681b      	ldr	r3, [r3, #0]
 8002ca2:	681b      	ldr	r3, [r3, #0]
 8002ca4:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8002ca8:	2b00      	cmp	r3, #0
 8002caa:	d018      	beq.n	8002cde <HAL_DMA_IRQHandler+0x142>
 8002cac:	687b      	ldr	r3, [r7, #4]
 8002cae:	681b      	ldr	r3, [r3, #0]
 8002cb0:	681b      	ldr	r3, [r3, #0]
 8002cb2:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8002cb6:	2b00      	cmp	r3, #0
 8002cb8:	d108      	bne.n	8002ccc <HAL_DMA_IRQHandler+0x130>
 8002cba:	687b      	ldr	r3, [r7, #4]
 8002cbc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002cbe:	2b00      	cmp	r3, #0
 8002cc0:	d024      	beq.n	8002d0c <HAL_DMA_IRQHandler+0x170>
 8002cc2:	687b      	ldr	r3, [r7, #4]
 8002cc4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002cc6:	6878      	ldr	r0, [r7, #4]
 8002cc8:	4798      	blx	r3
 8002cca:	e01f      	b.n	8002d0c <HAL_DMA_IRQHandler+0x170>
 8002ccc:	687b      	ldr	r3, [r7, #4]
 8002cce:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8002cd0:	2b00      	cmp	r3, #0
 8002cd2:	d01b      	beq.n	8002d0c <HAL_DMA_IRQHandler+0x170>
 8002cd4:	687b      	ldr	r3, [r7, #4]
 8002cd6:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8002cd8:	6878      	ldr	r0, [r7, #4]
 8002cda:	4798      	blx	r3
 8002cdc:	e016      	b.n	8002d0c <HAL_DMA_IRQHandler+0x170>
 8002cde:	687b      	ldr	r3, [r7, #4]
 8002ce0:	681b      	ldr	r3, [r3, #0]
 8002ce2:	681b      	ldr	r3, [r3, #0]
 8002ce4:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002ce8:	2b00      	cmp	r3, #0
 8002cea:	d107      	bne.n	8002cfc <HAL_DMA_IRQHandler+0x160>
 8002cec:	687b      	ldr	r3, [r7, #4]
 8002cee:	681b      	ldr	r3, [r3, #0]
 8002cf0:	681a      	ldr	r2, [r3, #0]
 8002cf2:	687b      	ldr	r3, [r7, #4]
 8002cf4:	681b      	ldr	r3, [r3, #0]
 8002cf6:	f022 0208 	bic.w	r2, r2, #8
 8002cfa:	601a      	str	r2, [r3, #0]
 8002cfc:	687b      	ldr	r3, [r7, #4]
 8002cfe:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002d00:	2b00      	cmp	r3, #0
 8002d02:	d003      	beq.n	8002d0c <HAL_DMA_IRQHandler+0x170>
 8002d04:	687b      	ldr	r3, [r7, #4]
 8002d06:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002d08:	6878      	ldr	r0, [r7, #4]
 8002d0a:	4798      	blx	r3
 8002d0c:	687b      	ldr	r3, [r7, #4]
 8002d0e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002d10:	2220      	movs	r2, #32
 8002d12:	409a      	lsls	r2, r3
 8002d14:	68fb      	ldr	r3, [r7, #12]
 8002d16:	4013      	ands	r3, r2
 8002d18:	2b00      	cmp	r3, #0
 8002d1a:	f000 808f 	beq.w	8002e3c <HAL_DMA_IRQHandler+0x2a0>
 8002d1e:	687b      	ldr	r3, [r7, #4]
 8002d20:	681b      	ldr	r3, [r3, #0]
 8002d22:	681b      	ldr	r3, [r3, #0]
 8002d24:	f003 0310 	and.w	r3, r3, #16
 8002d28:	2b00      	cmp	r3, #0
 8002d2a:	f000 8087 	beq.w	8002e3c <HAL_DMA_IRQHandler+0x2a0>
 8002d2e:	687b      	ldr	r3, [r7, #4]
 8002d30:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002d32:	2220      	movs	r2, #32
 8002d34:	409a      	lsls	r2, r3
 8002d36:	693b      	ldr	r3, [r7, #16]
 8002d38:	609a      	str	r2, [r3, #8]
 8002d3a:	687b      	ldr	r3, [r7, #4]
 8002d3c:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8002d40:	b2db      	uxtb	r3, r3
 8002d42:	2b05      	cmp	r3, #5
 8002d44:	d136      	bne.n	8002db4 <HAL_DMA_IRQHandler+0x218>
 8002d46:	687b      	ldr	r3, [r7, #4]
 8002d48:	681b      	ldr	r3, [r3, #0]
 8002d4a:	681a      	ldr	r2, [r3, #0]
 8002d4c:	687b      	ldr	r3, [r7, #4]
 8002d4e:	681b      	ldr	r3, [r3, #0]
 8002d50:	f022 0216 	bic.w	r2, r2, #22
 8002d54:	601a      	str	r2, [r3, #0]
 8002d56:	687b      	ldr	r3, [r7, #4]
 8002d58:	681b      	ldr	r3, [r3, #0]
 8002d5a:	695a      	ldr	r2, [r3, #20]
 8002d5c:	687b      	ldr	r3, [r7, #4]
 8002d5e:	681b      	ldr	r3, [r3, #0]
 8002d60:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8002d64:	615a      	str	r2, [r3, #20]
 8002d66:	687b      	ldr	r3, [r7, #4]
 8002d68:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002d6a:	2b00      	cmp	r3, #0
 8002d6c:	d103      	bne.n	8002d76 <HAL_DMA_IRQHandler+0x1da>
 8002d6e:	687b      	ldr	r3, [r7, #4]
 8002d70:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8002d72:	2b00      	cmp	r3, #0
 8002d74:	d007      	beq.n	8002d86 <HAL_DMA_IRQHandler+0x1ea>
 8002d76:	687b      	ldr	r3, [r7, #4]
 8002d78:	681b      	ldr	r3, [r3, #0]
 8002d7a:	681a      	ldr	r2, [r3, #0]
 8002d7c:	687b      	ldr	r3, [r7, #4]
 8002d7e:	681b      	ldr	r3, [r3, #0]
 8002d80:	f022 0208 	bic.w	r2, r2, #8
 8002d84:	601a      	str	r2, [r3, #0]
 8002d86:	687b      	ldr	r3, [r7, #4]
 8002d88:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002d8a:	223f      	movs	r2, #63	@ 0x3f
 8002d8c:	409a      	lsls	r2, r3
 8002d8e:	693b      	ldr	r3, [r7, #16]
 8002d90:	609a      	str	r2, [r3, #8]
 8002d92:	687b      	ldr	r3, [r7, #4]
 8002d94:	2201      	movs	r2, #1
 8002d96:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8002d9a:	687b      	ldr	r3, [r7, #4]
 8002d9c:	2200      	movs	r2, #0
 8002d9e:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8002da2:	687b      	ldr	r3, [r7, #4]
 8002da4:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8002da6:	2b00      	cmp	r3, #0
 8002da8:	d07e      	beq.n	8002ea8 <HAL_DMA_IRQHandler+0x30c>
 8002daa:	687b      	ldr	r3, [r7, #4]
 8002dac:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8002dae:	6878      	ldr	r0, [r7, #4]
 8002db0:	4798      	blx	r3
 8002db2:	e079      	b.n	8002ea8 <HAL_DMA_IRQHandler+0x30c>
 8002db4:	687b      	ldr	r3, [r7, #4]
 8002db6:	681b      	ldr	r3, [r3, #0]
 8002db8:	681b      	ldr	r3, [r3, #0]
 8002dba:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8002dbe:	2b00      	cmp	r3, #0
 8002dc0:	d01d      	beq.n	8002dfe <HAL_DMA_IRQHandler+0x262>
 8002dc2:	687b      	ldr	r3, [r7, #4]
 8002dc4:	681b      	ldr	r3, [r3, #0]
 8002dc6:	681b      	ldr	r3, [r3, #0]
 8002dc8:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8002dcc:	2b00      	cmp	r3, #0
 8002dce:	d10d      	bne.n	8002dec <HAL_DMA_IRQHandler+0x250>
 8002dd0:	687b      	ldr	r3, [r7, #4]
 8002dd2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002dd4:	2b00      	cmp	r3, #0
 8002dd6:	d031      	beq.n	8002e3c <HAL_DMA_IRQHandler+0x2a0>
 8002dd8:	687b      	ldr	r3, [r7, #4]
 8002dda:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002ddc:	6878      	ldr	r0, [r7, #4]
 8002dde:	4798      	blx	r3
 8002de0:	e02c      	b.n	8002e3c <HAL_DMA_IRQHandler+0x2a0>
 8002de2:	bf00      	nop
 8002de4:	20000004 	.word	0x20000004
 8002de8:	1b4e81b5 	.word	0x1b4e81b5
 8002dec:	687b      	ldr	r3, [r7, #4]
 8002dee:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002df0:	2b00      	cmp	r3, #0
 8002df2:	d023      	beq.n	8002e3c <HAL_DMA_IRQHandler+0x2a0>
 8002df4:	687b      	ldr	r3, [r7, #4]
 8002df6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002df8:	6878      	ldr	r0, [r7, #4]
 8002dfa:	4798      	blx	r3
 8002dfc:	e01e      	b.n	8002e3c <HAL_DMA_IRQHandler+0x2a0>
 8002dfe:	687b      	ldr	r3, [r7, #4]
 8002e00:	681b      	ldr	r3, [r3, #0]
 8002e02:	681b      	ldr	r3, [r3, #0]
 8002e04:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002e08:	2b00      	cmp	r3, #0
 8002e0a:	d10f      	bne.n	8002e2c <HAL_DMA_IRQHandler+0x290>
 8002e0c:	687b      	ldr	r3, [r7, #4]
 8002e0e:	681b      	ldr	r3, [r3, #0]
 8002e10:	681a      	ldr	r2, [r3, #0]
 8002e12:	687b      	ldr	r3, [r7, #4]
 8002e14:	681b      	ldr	r3, [r3, #0]
 8002e16:	f022 0210 	bic.w	r2, r2, #16
 8002e1a:	601a      	str	r2, [r3, #0]
 8002e1c:	687b      	ldr	r3, [r7, #4]
 8002e1e:	2201      	movs	r2, #1
 8002e20:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8002e24:	687b      	ldr	r3, [r7, #4]
 8002e26:	2200      	movs	r2, #0
 8002e28:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8002e2c:	687b      	ldr	r3, [r7, #4]
 8002e2e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002e30:	2b00      	cmp	r3, #0
 8002e32:	d003      	beq.n	8002e3c <HAL_DMA_IRQHandler+0x2a0>
 8002e34:	687b      	ldr	r3, [r7, #4]
 8002e36:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002e38:	6878      	ldr	r0, [r7, #4]
 8002e3a:	4798      	blx	r3
 8002e3c:	687b      	ldr	r3, [r7, #4]
 8002e3e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002e40:	2b00      	cmp	r3, #0
 8002e42:	d032      	beq.n	8002eaa <HAL_DMA_IRQHandler+0x30e>
 8002e44:	687b      	ldr	r3, [r7, #4]
 8002e46:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002e48:	f003 0301 	and.w	r3, r3, #1
 8002e4c:	2b00      	cmp	r3, #0
 8002e4e:	d022      	beq.n	8002e96 <HAL_DMA_IRQHandler+0x2fa>
 8002e50:	687b      	ldr	r3, [r7, #4]
 8002e52:	2205      	movs	r2, #5
 8002e54:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8002e58:	687b      	ldr	r3, [r7, #4]
 8002e5a:	681b      	ldr	r3, [r3, #0]
 8002e5c:	681a      	ldr	r2, [r3, #0]
 8002e5e:	687b      	ldr	r3, [r7, #4]
 8002e60:	681b      	ldr	r3, [r3, #0]
 8002e62:	f022 0201 	bic.w	r2, r2, #1
 8002e66:	601a      	str	r2, [r3, #0]
 8002e68:	68bb      	ldr	r3, [r7, #8]
 8002e6a:	3301      	adds	r3, #1
 8002e6c:	60bb      	str	r3, [r7, #8]
 8002e6e:	697a      	ldr	r2, [r7, #20]
 8002e70:	429a      	cmp	r2, r3
 8002e72:	d307      	bcc.n	8002e84 <HAL_DMA_IRQHandler+0x2e8>
 8002e74:	687b      	ldr	r3, [r7, #4]
 8002e76:	681b      	ldr	r3, [r3, #0]
 8002e78:	681b      	ldr	r3, [r3, #0]
 8002e7a:	f003 0301 	and.w	r3, r3, #1
 8002e7e:	2b00      	cmp	r3, #0
 8002e80:	d1f2      	bne.n	8002e68 <HAL_DMA_IRQHandler+0x2cc>
 8002e82:	e000      	b.n	8002e86 <HAL_DMA_IRQHandler+0x2ea>
 8002e84:	bf00      	nop
 8002e86:	687b      	ldr	r3, [r7, #4]
 8002e88:	2201      	movs	r2, #1
 8002e8a:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8002e8e:	687b      	ldr	r3, [r7, #4]
 8002e90:	2200      	movs	r2, #0
 8002e92:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8002e96:	687b      	ldr	r3, [r7, #4]
 8002e98:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002e9a:	2b00      	cmp	r3, #0
 8002e9c:	d005      	beq.n	8002eaa <HAL_DMA_IRQHandler+0x30e>
 8002e9e:	687b      	ldr	r3, [r7, #4]
 8002ea0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002ea2:	6878      	ldr	r0, [r7, #4]
 8002ea4:	4798      	blx	r3
 8002ea6:	e000      	b.n	8002eaa <HAL_DMA_IRQHandler+0x30e>
 8002ea8:	bf00      	nop
 8002eaa:	3718      	adds	r7, #24
 8002eac:	46bd      	mov	sp, r7
 8002eae:	bd80      	pop	{r7, pc}

08002eb0 <DMA_SetConfig>:
 8002eb0:	b480      	push	{r7}
 8002eb2:	b085      	sub	sp, #20
 8002eb4:	af00      	add	r7, sp, #0
 8002eb6:	60f8      	str	r0, [r7, #12]
 8002eb8:	60b9      	str	r1, [r7, #8]
 8002eba:	607a      	str	r2, [r7, #4]
 8002ebc:	603b      	str	r3, [r7, #0]
 8002ebe:	68fb      	ldr	r3, [r7, #12]
 8002ec0:	681b      	ldr	r3, [r3, #0]
 8002ec2:	681a      	ldr	r2, [r3, #0]
 8002ec4:	68fb      	ldr	r3, [r7, #12]
 8002ec6:	681b      	ldr	r3, [r3, #0]
 8002ec8:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 8002ecc:	601a      	str	r2, [r3, #0]
 8002ece:	68fb      	ldr	r3, [r7, #12]
 8002ed0:	681b      	ldr	r3, [r3, #0]
 8002ed2:	683a      	ldr	r2, [r7, #0]
 8002ed4:	605a      	str	r2, [r3, #4]
 8002ed6:	68fb      	ldr	r3, [r7, #12]
 8002ed8:	689b      	ldr	r3, [r3, #8]
 8002eda:	2b40      	cmp	r3, #64	@ 0x40
 8002edc:	d108      	bne.n	8002ef0 <DMA_SetConfig+0x40>
 8002ede:	68fb      	ldr	r3, [r7, #12]
 8002ee0:	681b      	ldr	r3, [r3, #0]
 8002ee2:	687a      	ldr	r2, [r7, #4]
 8002ee4:	609a      	str	r2, [r3, #8]
 8002ee6:	68fb      	ldr	r3, [r7, #12]
 8002ee8:	681b      	ldr	r3, [r3, #0]
 8002eea:	68ba      	ldr	r2, [r7, #8]
 8002eec:	60da      	str	r2, [r3, #12]
 8002eee:	e007      	b.n	8002f00 <DMA_SetConfig+0x50>
 8002ef0:	68fb      	ldr	r3, [r7, #12]
 8002ef2:	681b      	ldr	r3, [r3, #0]
 8002ef4:	68ba      	ldr	r2, [r7, #8]
 8002ef6:	609a      	str	r2, [r3, #8]
 8002ef8:	68fb      	ldr	r3, [r7, #12]
 8002efa:	681b      	ldr	r3, [r3, #0]
 8002efc:	687a      	ldr	r2, [r7, #4]
 8002efe:	60da      	str	r2, [r3, #12]
 8002f00:	bf00      	nop
 8002f02:	3714      	adds	r7, #20
 8002f04:	46bd      	mov	sp, r7
 8002f06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f0a:	4770      	bx	lr

08002f0c <DMA_CalcBaseAndBitshift>:
 8002f0c:	b480      	push	{r7}
 8002f0e:	b085      	sub	sp, #20
 8002f10:	af00      	add	r7, sp, #0
 8002f12:	6078      	str	r0, [r7, #4]
 8002f14:	687b      	ldr	r3, [r7, #4]
 8002f16:	681b      	ldr	r3, [r3, #0]
 8002f18:	b2db      	uxtb	r3, r3
 8002f1a:	3b10      	subs	r3, #16
 8002f1c:	4a14      	ldr	r2, [pc, #80]	@ (8002f70 <DMA_CalcBaseAndBitshift+0x64>)
 8002f1e:	fba2 2303 	umull	r2, r3, r2, r3
 8002f22:	091b      	lsrs	r3, r3, #4
 8002f24:	60fb      	str	r3, [r7, #12]
 8002f26:	4a13      	ldr	r2, [pc, #76]	@ (8002f74 <DMA_CalcBaseAndBitshift+0x68>)
 8002f28:	68fb      	ldr	r3, [r7, #12]
 8002f2a:	4413      	add	r3, r2
 8002f2c:	781b      	ldrb	r3, [r3, #0]
 8002f2e:	461a      	mov	r2, r3
 8002f30:	687b      	ldr	r3, [r7, #4]
 8002f32:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002f34:	68fb      	ldr	r3, [r7, #12]
 8002f36:	2b03      	cmp	r3, #3
 8002f38:	d909      	bls.n	8002f4e <DMA_CalcBaseAndBitshift+0x42>
 8002f3a:	687b      	ldr	r3, [r7, #4]
 8002f3c:	681b      	ldr	r3, [r3, #0]
 8002f3e:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 8002f42:	f023 0303 	bic.w	r3, r3, #3
 8002f46:	1d1a      	adds	r2, r3, #4
 8002f48:	687b      	ldr	r3, [r7, #4]
 8002f4a:	659a      	str	r2, [r3, #88]	@ 0x58
 8002f4c:	e007      	b.n	8002f5e <DMA_CalcBaseAndBitshift+0x52>
 8002f4e:	687b      	ldr	r3, [r7, #4]
 8002f50:	681b      	ldr	r3, [r3, #0]
 8002f52:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 8002f56:	f023 0303 	bic.w	r3, r3, #3
 8002f5a:	687a      	ldr	r2, [r7, #4]
 8002f5c:	6593      	str	r3, [r2, #88]	@ 0x58
 8002f5e:	687b      	ldr	r3, [r7, #4]
 8002f60:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002f62:	4618      	mov	r0, r3
 8002f64:	3714      	adds	r7, #20
 8002f66:	46bd      	mov	sp, r7
 8002f68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f6c:	4770      	bx	lr
 8002f6e:	bf00      	nop
 8002f70:	aaaaaaab 	.word	0xaaaaaaab
 8002f74:	08006a70 	.word	0x08006a70

08002f78 <DMA_CheckFifoParam>:
 8002f78:	b480      	push	{r7}
 8002f7a:	b085      	sub	sp, #20
 8002f7c:	af00      	add	r7, sp, #0
 8002f7e:	6078      	str	r0, [r7, #4]
 8002f80:	2300      	movs	r3, #0
 8002f82:	73fb      	strb	r3, [r7, #15]
 8002f84:	687b      	ldr	r3, [r7, #4]
 8002f86:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002f88:	60bb      	str	r3, [r7, #8]
 8002f8a:	687b      	ldr	r3, [r7, #4]
 8002f8c:	699b      	ldr	r3, [r3, #24]
 8002f8e:	2b00      	cmp	r3, #0
 8002f90:	d11f      	bne.n	8002fd2 <DMA_CheckFifoParam+0x5a>
 8002f92:	68bb      	ldr	r3, [r7, #8]
 8002f94:	2b03      	cmp	r3, #3
 8002f96:	d856      	bhi.n	8003046 <DMA_CheckFifoParam+0xce>
 8002f98:	a201      	add	r2, pc, #4	@ (adr r2, 8002fa0 <DMA_CheckFifoParam+0x28>)
 8002f9a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002f9e:	bf00      	nop
 8002fa0:	08002fb1 	.word	0x08002fb1
 8002fa4:	08002fc3 	.word	0x08002fc3
 8002fa8:	08002fb1 	.word	0x08002fb1
 8002fac:	08003047 	.word	0x08003047
 8002fb0:	687b      	ldr	r3, [r7, #4]
 8002fb2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002fb4:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8002fb8:	2b00      	cmp	r3, #0
 8002fba:	d046      	beq.n	800304a <DMA_CheckFifoParam+0xd2>
 8002fbc:	2301      	movs	r3, #1
 8002fbe:	73fb      	strb	r3, [r7, #15]
 8002fc0:	e043      	b.n	800304a <DMA_CheckFifoParam+0xd2>
 8002fc2:	687b      	ldr	r3, [r7, #4]
 8002fc4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002fc6:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 8002fca:	d140      	bne.n	800304e <DMA_CheckFifoParam+0xd6>
 8002fcc:	2301      	movs	r3, #1
 8002fce:	73fb      	strb	r3, [r7, #15]
 8002fd0:	e03d      	b.n	800304e <DMA_CheckFifoParam+0xd6>
 8002fd2:	687b      	ldr	r3, [r7, #4]
 8002fd4:	699b      	ldr	r3, [r3, #24]
 8002fd6:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8002fda:	d121      	bne.n	8003020 <DMA_CheckFifoParam+0xa8>
 8002fdc:	68bb      	ldr	r3, [r7, #8]
 8002fde:	2b03      	cmp	r3, #3
 8002fe0:	d837      	bhi.n	8003052 <DMA_CheckFifoParam+0xda>
 8002fe2:	a201      	add	r2, pc, #4	@ (adr r2, 8002fe8 <DMA_CheckFifoParam+0x70>)
 8002fe4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002fe8:	08002ff9 	.word	0x08002ff9
 8002fec:	08002fff 	.word	0x08002fff
 8002ff0:	08002ff9 	.word	0x08002ff9
 8002ff4:	08003011 	.word	0x08003011
 8002ff8:	2301      	movs	r3, #1
 8002ffa:	73fb      	strb	r3, [r7, #15]
 8002ffc:	e030      	b.n	8003060 <DMA_CheckFifoParam+0xe8>
 8002ffe:	687b      	ldr	r3, [r7, #4]
 8003000:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003002:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8003006:	2b00      	cmp	r3, #0
 8003008:	d025      	beq.n	8003056 <DMA_CheckFifoParam+0xde>
 800300a:	2301      	movs	r3, #1
 800300c:	73fb      	strb	r3, [r7, #15]
 800300e:	e022      	b.n	8003056 <DMA_CheckFifoParam+0xde>
 8003010:	687b      	ldr	r3, [r7, #4]
 8003012:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003014:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 8003018:	d11f      	bne.n	800305a <DMA_CheckFifoParam+0xe2>
 800301a:	2301      	movs	r3, #1
 800301c:	73fb      	strb	r3, [r7, #15]
 800301e:	e01c      	b.n	800305a <DMA_CheckFifoParam+0xe2>
 8003020:	68bb      	ldr	r3, [r7, #8]
 8003022:	2b02      	cmp	r3, #2
 8003024:	d903      	bls.n	800302e <DMA_CheckFifoParam+0xb6>
 8003026:	68bb      	ldr	r3, [r7, #8]
 8003028:	2b03      	cmp	r3, #3
 800302a:	d003      	beq.n	8003034 <DMA_CheckFifoParam+0xbc>
 800302c:	e018      	b.n	8003060 <DMA_CheckFifoParam+0xe8>
 800302e:	2301      	movs	r3, #1
 8003030:	73fb      	strb	r3, [r7, #15]
 8003032:	e015      	b.n	8003060 <DMA_CheckFifoParam+0xe8>
 8003034:	687b      	ldr	r3, [r7, #4]
 8003036:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003038:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 800303c:	2b00      	cmp	r3, #0
 800303e:	d00e      	beq.n	800305e <DMA_CheckFifoParam+0xe6>
 8003040:	2301      	movs	r3, #1
 8003042:	73fb      	strb	r3, [r7, #15]
 8003044:	e00b      	b.n	800305e <DMA_CheckFifoParam+0xe6>
 8003046:	bf00      	nop
 8003048:	e00a      	b.n	8003060 <DMA_CheckFifoParam+0xe8>
 800304a:	bf00      	nop
 800304c:	e008      	b.n	8003060 <DMA_CheckFifoParam+0xe8>
 800304e:	bf00      	nop
 8003050:	e006      	b.n	8003060 <DMA_CheckFifoParam+0xe8>
 8003052:	bf00      	nop
 8003054:	e004      	b.n	8003060 <DMA_CheckFifoParam+0xe8>
 8003056:	bf00      	nop
 8003058:	e002      	b.n	8003060 <DMA_CheckFifoParam+0xe8>
 800305a:	bf00      	nop
 800305c:	e000      	b.n	8003060 <DMA_CheckFifoParam+0xe8>
 800305e:	bf00      	nop
 8003060:	7bfb      	ldrb	r3, [r7, #15]
 8003062:	4618      	mov	r0, r3
 8003064:	3714      	adds	r7, #20
 8003066:	46bd      	mov	sp, r7
 8003068:	f85d 7b04 	ldr.w	r7, [sp], #4
 800306c:	4770      	bx	lr
 800306e:	bf00      	nop

08003070 <HAL_GPIO_Init>:
 8003070:	b480      	push	{r7}
 8003072:	b089      	sub	sp, #36	@ 0x24
 8003074:	af00      	add	r7, sp, #0
 8003076:	6078      	str	r0, [r7, #4]
 8003078:	6039      	str	r1, [r7, #0]
 800307a:	2300      	movs	r3, #0
 800307c:	617b      	str	r3, [r7, #20]
 800307e:	2300      	movs	r3, #0
 8003080:	613b      	str	r3, [r7, #16]
 8003082:	2300      	movs	r3, #0
 8003084:	61bb      	str	r3, [r7, #24]
 8003086:	2300      	movs	r3, #0
 8003088:	61fb      	str	r3, [r7, #28]
 800308a:	e16b      	b.n	8003364 <HAL_GPIO_Init+0x2f4>
 800308c:	2201      	movs	r2, #1
 800308e:	69fb      	ldr	r3, [r7, #28]
 8003090:	fa02 f303 	lsl.w	r3, r2, r3
 8003094:	617b      	str	r3, [r7, #20]
 8003096:	683b      	ldr	r3, [r7, #0]
 8003098:	681b      	ldr	r3, [r3, #0]
 800309a:	697a      	ldr	r2, [r7, #20]
 800309c:	4013      	ands	r3, r2
 800309e:	613b      	str	r3, [r7, #16]
 80030a0:	693a      	ldr	r2, [r7, #16]
 80030a2:	697b      	ldr	r3, [r7, #20]
 80030a4:	429a      	cmp	r2, r3
 80030a6:	f040 815a 	bne.w	800335e <HAL_GPIO_Init+0x2ee>
 80030aa:	683b      	ldr	r3, [r7, #0]
 80030ac:	685b      	ldr	r3, [r3, #4]
 80030ae:	f003 0303 	and.w	r3, r3, #3
 80030b2:	2b01      	cmp	r3, #1
 80030b4:	d005      	beq.n	80030c2 <HAL_GPIO_Init+0x52>
 80030b6:	683b      	ldr	r3, [r7, #0]
 80030b8:	685b      	ldr	r3, [r3, #4]
 80030ba:	f003 0303 	and.w	r3, r3, #3
 80030be:	2b02      	cmp	r3, #2
 80030c0:	d130      	bne.n	8003124 <HAL_GPIO_Init+0xb4>
 80030c2:	687b      	ldr	r3, [r7, #4]
 80030c4:	689b      	ldr	r3, [r3, #8]
 80030c6:	61bb      	str	r3, [r7, #24]
 80030c8:	69fb      	ldr	r3, [r7, #28]
 80030ca:	005b      	lsls	r3, r3, #1
 80030cc:	2203      	movs	r2, #3
 80030ce:	fa02 f303 	lsl.w	r3, r2, r3
 80030d2:	43db      	mvns	r3, r3
 80030d4:	69ba      	ldr	r2, [r7, #24]
 80030d6:	4013      	ands	r3, r2
 80030d8:	61bb      	str	r3, [r7, #24]
 80030da:	683b      	ldr	r3, [r7, #0]
 80030dc:	68da      	ldr	r2, [r3, #12]
 80030de:	69fb      	ldr	r3, [r7, #28]
 80030e0:	005b      	lsls	r3, r3, #1
 80030e2:	fa02 f303 	lsl.w	r3, r2, r3
 80030e6:	69ba      	ldr	r2, [r7, #24]
 80030e8:	4313      	orrs	r3, r2
 80030ea:	61bb      	str	r3, [r7, #24]
 80030ec:	687b      	ldr	r3, [r7, #4]
 80030ee:	69ba      	ldr	r2, [r7, #24]
 80030f0:	609a      	str	r2, [r3, #8]
 80030f2:	687b      	ldr	r3, [r7, #4]
 80030f4:	685b      	ldr	r3, [r3, #4]
 80030f6:	61bb      	str	r3, [r7, #24]
 80030f8:	2201      	movs	r2, #1
 80030fa:	69fb      	ldr	r3, [r7, #28]
 80030fc:	fa02 f303 	lsl.w	r3, r2, r3
 8003100:	43db      	mvns	r3, r3
 8003102:	69ba      	ldr	r2, [r7, #24]
 8003104:	4013      	ands	r3, r2
 8003106:	61bb      	str	r3, [r7, #24]
 8003108:	683b      	ldr	r3, [r7, #0]
 800310a:	685b      	ldr	r3, [r3, #4]
 800310c:	091b      	lsrs	r3, r3, #4
 800310e:	f003 0201 	and.w	r2, r3, #1
 8003112:	69fb      	ldr	r3, [r7, #28]
 8003114:	fa02 f303 	lsl.w	r3, r2, r3
 8003118:	69ba      	ldr	r2, [r7, #24]
 800311a:	4313      	orrs	r3, r2
 800311c:	61bb      	str	r3, [r7, #24]
 800311e:	687b      	ldr	r3, [r7, #4]
 8003120:	69ba      	ldr	r2, [r7, #24]
 8003122:	605a      	str	r2, [r3, #4]
 8003124:	683b      	ldr	r3, [r7, #0]
 8003126:	685b      	ldr	r3, [r3, #4]
 8003128:	f003 0303 	and.w	r3, r3, #3
 800312c:	2b03      	cmp	r3, #3
 800312e:	d017      	beq.n	8003160 <HAL_GPIO_Init+0xf0>
 8003130:	687b      	ldr	r3, [r7, #4]
 8003132:	68db      	ldr	r3, [r3, #12]
 8003134:	61bb      	str	r3, [r7, #24]
 8003136:	69fb      	ldr	r3, [r7, #28]
 8003138:	005b      	lsls	r3, r3, #1
 800313a:	2203      	movs	r2, #3
 800313c:	fa02 f303 	lsl.w	r3, r2, r3
 8003140:	43db      	mvns	r3, r3
 8003142:	69ba      	ldr	r2, [r7, #24]
 8003144:	4013      	ands	r3, r2
 8003146:	61bb      	str	r3, [r7, #24]
 8003148:	683b      	ldr	r3, [r7, #0]
 800314a:	689a      	ldr	r2, [r3, #8]
 800314c:	69fb      	ldr	r3, [r7, #28]
 800314e:	005b      	lsls	r3, r3, #1
 8003150:	fa02 f303 	lsl.w	r3, r2, r3
 8003154:	69ba      	ldr	r2, [r7, #24]
 8003156:	4313      	orrs	r3, r2
 8003158:	61bb      	str	r3, [r7, #24]
 800315a:	687b      	ldr	r3, [r7, #4]
 800315c:	69ba      	ldr	r2, [r7, #24]
 800315e:	60da      	str	r2, [r3, #12]
 8003160:	683b      	ldr	r3, [r7, #0]
 8003162:	685b      	ldr	r3, [r3, #4]
 8003164:	f003 0303 	and.w	r3, r3, #3
 8003168:	2b02      	cmp	r3, #2
 800316a:	d123      	bne.n	80031b4 <HAL_GPIO_Init+0x144>
 800316c:	69fb      	ldr	r3, [r7, #28]
 800316e:	08da      	lsrs	r2, r3, #3
 8003170:	687b      	ldr	r3, [r7, #4]
 8003172:	3208      	adds	r2, #8
 8003174:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8003178:	61bb      	str	r3, [r7, #24]
 800317a:	69fb      	ldr	r3, [r7, #28]
 800317c:	f003 0307 	and.w	r3, r3, #7
 8003180:	009b      	lsls	r3, r3, #2
 8003182:	220f      	movs	r2, #15
 8003184:	fa02 f303 	lsl.w	r3, r2, r3
 8003188:	43db      	mvns	r3, r3
 800318a:	69ba      	ldr	r2, [r7, #24]
 800318c:	4013      	ands	r3, r2
 800318e:	61bb      	str	r3, [r7, #24]
 8003190:	683b      	ldr	r3, [r7, #0]
 8003192:	691a      	ldr	r2, [r3, #16]
 8003194:	69fb      	ldr	r3, [r7, #28]
 8003196:	f003 0307 	and.w	r3, r3, #7
 800319a:	009b      	lsls	r3, r3, #2
 800319c:	fa02 f303 	lsl.w	r3, r2, r3
 80031a0:	69ba      	ldr	r2, [r7, #24]
 80031a2:	4313      	orrs	r3, r2
 80031a4:	61bb      	str	r3, [r7, #24]
 80031a6:	69fb      	ldr	r3, [r7, #28]
 80031a8:	08da      	lsrs	r2, r3, #3
 80031aa:	687b      	ldr	r3, [r7, #4]
 80031ac:	3208      	adds	r2, #8
 80031ae:	69b9      	ldr	r1, [r7, #24]
 80031b0:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80031b4:	687b      	ldr	r3, [r7, #4]
 80031b6:	681b      	ldr	r3, [r3, #0]
 80031b8:	61bb      	str	r3, [r7, #24]
 80031ba:	69fb      	ldr	r3, [r7, #28]
 80031bc:	005b      	lsls	r3, r3, #1
 80031be:	2203      	movs	r2, #3
 80031c0:	fa02 f303 	lsl.w	r3, r2, r3
 80031c4:	43db      	mvns	r3, r3
 80031c6:	69ba      	ldr	r2, [r7, #24]
 80031c8:	4013      	ands	r3, r2
 80031ca:	61bb      	str	r3, [r7, #24]
 80031cc:	683b      	ldr	r3, [r7, #0]
 80031ce:	685b      	ldr	r3, [r3, #4]
 80031d0:	f003 0203 	and.w	r2, r3, #3
 80031d4:	69fb      	ldr	r3, [r7, #28]
 80031d6:	005b      	lsls	r3, r3, #1
 80031d8:	fa02 f303 	lsl.w	r3, r2, r3
 80031dc:	69ba      	ldr	r2, [r7, #24]
 80031de:	4313      	orrs	r3, r2
 80031e0:	61bb      	str	r3, [r7, #24]
 80031e2:	687b      	ldr	r3, [r7, #4]
 80031e4:	69ba      	ldr	r2, [r7, #24]
 80031e6:	601a      	str	r2, [r3, #0]
 80031e8:	683b      	ldr	r3, [r7, #0]
 80031ea:	685b      	ldr	r3, [r3, #4]
 80031ec:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 80031f0:	2b00      	cmp	r3, #0
 80031f2:	f000 80b4 	beq.w	800335e <HAL_GPIO_Init+0x2ee>
 80031f6:	2300      	movs	r3, #0
 80031f8:	60fb      	str	r3, [r7, #12]
 80031fa:	4b60      	ldr	r3, [pc, #384]	@ (800337c <HAL_GPIO_Init+0x30c>)
 80031fc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80031fe:	4a5f      	ldr	r2, [pc, #380]	@ (800337c <HAL_GPIO_Init+0x30c>)
 8003200:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8003204:	6453      	str	r3, [r2, #68]	@ 0x44
 8003206:	4b5d      	ldr	r3, [pc, #372]	@ (800337c <HAL_GPIO_Init+0x30c>)
 8003208:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800320a:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 800320e:	60fb      	str	r3, [r7, #12]
 8003210:	68fb      	ldr	r3, [r7, #12]
 8003212:	4a5b      	ldr	r2, [pc, #364]	@ (8003380 <HAL_GPIO_Init+0x310>)
 8003214:	69fb      	ldr	r3, [r7, #28]
 8003216:	089b      	lsrs	r3, r3, #2
 8003218:	3302      	adds	r3, #2
 800321a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800321e:	61bb      	str	r3, [r7, #24]
 8003220:	69fb      	ldr	r3, [r7, #28]
 8003222:	f003 0303 	and.w	r3, r3, #3
 8003226:	009b      	lsls	r3, r3, #2
 8003228:	220f      	movs	r2, #15
 800322a:	fa02 f303 	lsl.w	r3, r2, r3
 800322e:	43db      	mvns	r3, r3
 8003230:	69ba      	ldr	r2, [r7, #24]
 8003232:	4013      	ands	r3, r2
 8003234:	61bb      	str	r3, [r7, #24]
 8003236:	687b      	ldr	r3, [r7, #4]
 8003238:	4a52      	ldr	r2, [pc, #328]	@ (8003384 <HAL_GPIO_Init+0x314>)
 800323a:	4293      	cmp	r3, r2
 800323c:	d02b      	beq.n	8003296 <HAL_GPIO_Init+0x226>
 800323e:	687b      	ldr	r3, [r7, #4]
 8003240:	4a51      	ldr	r2, [pc, #324]	@ (8003388 <HAL_GPIO_Init+0x318>)
 8003242:	4293      	cmp	r3, r2
 8003244:	d025      	beq.n	8003292 <HAL_GPIO_Init+0x222>
 8003246:	687b      	ldr	r3, [r7, #4]
 8003248:	4a50      	ldr	r2, [pc, #320]	@ (800338c <HAL_GPIO_Init+0x31c>)
 800324a:	4293      	cmp	r3, r2
 800324c:	d01f      	beq.n	800328e <HAL_GPIO_Init+0x21e>
 800324e:	687b      	ldr	r3, [r7, #4]
 8003250:	4a4f      	ldr	r2, [pc, #316]	@ (8003390 <HAL_GPIO_Init+0x320>)
 8003252:	4293      	cmp	r3, r2
 8003254:	d019      	beq.n	800328a <HAL_GPIO_Init+0x21a>
 8003256:	687b      	ldr	r3, [r7, #4]
 8003258:	4a4e      	ldr	r2, [pc, #312]	@ (8003394 <HAL_GPIO_Init+0x324>)
 800325a:	4293      	cmp	r3, r2
 800325c:	d013      	beq.n	8003286 <HAL_GPIO_Init+0x216>
 800325e:	687b      	ldr	r3, [r7, #4]
 8003260:	4a4d      	ldr	r2, [pc, #308]	@ (8003398 <HAL_GPIO_Init+0x328>)
 8003262:	4293      	cmp	r3, r2
 8003264:	d00d      	beq.n	8003282 <HAL_GPIO_Init+0x212>
 8003266:	687b      	ldr	r3, [r7, #4]
 8003268:	4a4c      	ldr	r2, [pc, #304]	@ (800339c <HAL_GPIO_Init+0x32c>)
 800326a:	4293      	cmp	r3, r2
 800326c:	d007      	beq.n	800327e <HAL_GPIO_Init+0x20e>
 800326e:	687b      	ldr	r3, [r7, #4]
 8003270:	4a4b      	ldr	r2, [pc, #300]	@ (80033a0 <HAL_GPIO_Init+0x330>)
 8003272:	4293      	cmp	r3, r2
 8003274:	d101      	bne.n	800327a <HAL_GPIO_Init+0x20a>
 8003276:	2307      	movs	r3, #7
 8003278:	e00e      	b.n	8003298 <HAL_GPIO_Init+0x228>
 800327a:	2308      	movs	r3, #8
 800327c:	e00c      	b.n	8003298 <HAL_GPIO_Init+0x228>
 800327e:	2306      	movs	r3, #6
 8003280:	e00a      	b.n	8003298 <HAL_GPIO_Init+0x228>
 8003282:	2305      	movs	r3, #5
 8003284:	e008      	b.n	8003298 <HAL_GPIO_Init+0x228>
 8003286:	2304      	movs	r3, #4
 8003288:	e006      	b.n	8003298 <HAL_GPIO_Init+0x228>
 800328a:	2303      	movs	r3, #3
 800328c:	e004      	b.n	8003298 <HAL_GPIO_Init+0x228>
 800328e:	2302      	movs	r3, #2
 8003290:	e002      	b.n	8003298 <HAL_GPIO_Init+0x228>
 8003292:	2301      	movs	r3, #1
 8003294:	e000      	b.n	8003298 <HAL_GPIO_Init+0x228>
 8003296:	2300      	movs	r3, #0
 8003298:	69fa      	ldr	r2, [r7, #28]
 800329a:	f002 0203 	and.w	r2, r2, #3
 800329e:	0092      	lsls	r2, r2, #2
 80032a0:	4093      	lsls	r3, r2
 80032a2:	69ba      	ldr	r2, [r7, #24]
 80032a4:	4313      	orrs	r3, r2
 80032a6:	61bb      	str	r3, [r7, #24]
 80032a8:	4935      	ldr	r1, [pc, #212]	@ (8003380 <HAL_GPIO_Init+0x310>)
 80032aa:	69fb      	ldr	r3, [r7, #28]
 80032ac:	089b      	lsrs	r3, r3, #2
 80032ae:	3302      	adds	r3, #2
 80032b0:	69ba      	ldr	r2, [r7, #24]
 80032b2:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80032b6:	4b3b      	ldr	r3, [pc, #236]	@ (80033a4 <HAL_GPIO_Init+0x334>)
 80032b8:	689b      	ldr	r3, [r3, #8]
 80032ba:	61bb      	str	r3, [r7, #24]
 80032bc:	693b      	ldr	r3, [r7, #16]
 80032be:	43db      	mvns	r3, r3
 80032c0:	69ba      	ldr	r2, [r7, #24]
 80032c2:	4013      	ands	r3, r2
 80032c4:	61bb      	str	r3, [r7, #24]
 80032c6:	683b      	ldr	r3, [r7, #0]
 80032c8:	685b      	ldr	r3, [r3, #4]
 80032ca:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 80032ce:	2b00      	cmp	r3, #0
 80032d0:	d003      	beq.n	80032da <HAL_GPIO_Init+0x26a>
 80032d2:	69ba      	ldr	r2, [r7, #24]
 80032d4:	693b      	ldr	r3, [r7, #16]
 80032d6:	4313      	orrs	r3, r2
 80032d8:	61bb      	str	r3, [r7, #24]
 80032da:	4a32      	ldr	r2, [pc, #200]	@ (80033a4 <HAL_GPIO_Init+0x334>)
 80032dc:	69bb      	ldr	r3, [r7, #24]
 80032de:	6093      	str	r3, [r2, #8]
 80032e0:	4b30      	ldr	r3, [pc, #192]	@ (80033a4 <HAL_GPIO_Init+0x334>)
 80032e2:	68db      	ldr	r3, [r3, #12]
 80032e4:	61bb      	str	r3, [r7, #24]
 80032e6:	693b      	ldr	r3, [r7, #16]
 80032e8:	43db      	mvns	r3, r3
 80032ea:	69ba      	ldr	r2, [r7, #24]
 80032ec:	4013      	ands	r3, r2
 80032ee:	61bb      	str	r3, [r7, #24]
 80032f0:	683b      	ldr	r3, [r7, #0]
 80032f2:	685b      	ldr	r3, [r3, #4]
 80032f4:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 80032f8:	2b00      	cmp	r3, #0
 80032fa:	d003      	beq.n	8003304 <HAL_GPIO_Init+0x294>
 80032fc:	69ba      	ldr	r2, [r7, #24]
 80032fe:	693b      	ldr	r3, [r7, #16]
 8003300:	4313      	orrs	r3, r2
 8003302:	61bb      	str	r3, [r7, #24]
 8003304:	4a27      	ldr	r2, [pc, #156]	@ (80033a4 <HAL_GPIO_Init+0x334>)
 8003306:	69bb      	ldr	r3, [r7, #24]
 8003308:	60d3      	str	r3, [r2, #12]
 800330a:	4b26      	ldr	r3, [pc, #152]	@ (80033a4 <HAL_GPIO_Init+0x334>)
 800330c:	685b      	ldr	r3, [r3, #4]
 800330e:	61bb      	str	r3, [r7, #24]
 8003310:	693b      	ldr	r3, [r7, #16]
 8003312:	43db      	mvns	r3, r3
 8003314:	69ba      	ldr	r2, [r7, #24]
 8003316:	4013      	ands	r3, r2
 8003318:	61bb      	str	r3, [r7, #24]
 800331a:	683b      	ldr	r3, [r7, #0]
 800331c:	685b      	ldr	r3, [r3, #4]
 800331e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003322:	2b00      	cmp	r3, #0
 8003324:	d003      	beq.n	800332e <HAL_GPIO_Init+0x2be>
 8003326:	69ba      	ldr	r2, [r7, #24]
 8003328:	693b      	ldr	r3, [r7, #16]
 800332a:	4313      	orrs	r3, r2
 800332c:	61bb      	str	r3, [r7, #24]
 800332e:	4a1d      	ldr	r2, [pc, #116]	@ (80033a4 <HAL_GPIO_Init+0x334>)
 8003330:	69bb      	ldr	r3, [r7, #24]
 8003332:	6053      	str	r3, [r2, #4]
 8003334:	4b1b      	ldr	r3, [pc, #108]	@ (80033a4 <HAL_GPIO_Init+0x334>)
 8003336:	681b      	ldr	r3, [r3, #0]
 8003338:	61bb      	str	r3, [r7, #24]
 800333a:	693b      	ldr	r3, [r7, #16]
 800333c:	43db      	mvns	r3, r3
 800333e:	69ba      	ldr	r2, [r7, #24]
 8003340:	4013      	ands	r3, r2
 8003342:	61bb      	str	r3, [r7, #24]
 8003344:	683b      	ldr	r3, [r7, #0]
 8003346:	685b      	ldr	r3, [r3, #4]
 8003348:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800334c:	2b00      	cmp	r3, #0
 800334e:	d003      	beq.n	8003358 <HAL_GPIO_Init+0x2e8>
 8003350:	69ba      	ldr	r2, [r7, #24]
 8003352:	693b      	ldr	r3, [r7, #16]
 8003354:	4313      	orrs	r3, r2
 8003356:	61bb      	str	r3, [r7, #24]
 8003358:	4a12      	ldr	r2, [pc, #72]	@ (80033a4 <HAL_GPIO_Init+0x334>)
 800335a:	69bb      	ldr	r3, [r7, #24]
 800335c:	6013      	str	r3, [r2, #0]
 800335e:	69fb      	ldr	r3, [r7, #28]
 8003360:	3301      	adds	r3, #1
 8003362:	61fb      	str	r3, [r7, #28]
 8003364:	69fb      	ldr	r3, [r7, #28]
 8003366:	2b0f      	cmp	r3, #15
 8003368:	f67f ae90 	bls.w	800308c <HAL_GPIO_Init+0x1c>
 800336c:	bf00      	nop
 800336e:	bf00      	nop
 8003370:	3724      	adds	r7, #36	@ 0x24
 8003372:	46bd      	mov	sp, r7
 8003374:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003378:	4770      	bx	lr
 800337a:	bf00      	nop
 800337c:	40023800 	.word	0x40023800
 8003380:	40013800 	.word	0x40013800
 8003384:	40020000 	.word	0x40020000
 8003388:	40020400 	.word	0x40020400
 800338c:	40020800 	.word	0x40020800
 8003390:	40020c00 	.word	0x40020c00
 8003394:	40021000 	.word	0x40021000
 8003398:	40021400 	.word	0x40021400
 800339c:	40021800 	.word	0x40021800
 80033a0:	40021c00 	.word	0x40021c00
 80033a4:	40013c00 	.word	0x40013c00

080033a8 <HAL_RCC_OscConfig>:
 80033a8:	b580      	push	{r7, lr}
 80033aa:	b086      	sub	sp, #24
 80033ac:	af00      	add	r7, sp, #0
 80033ae:	6078      	str	r0, [r7, #4]
 80033b0:	687b      	ldr	r3, [r7, #4]
 80033b2:	2b00      	cmp	r3, #0
 80033b4:	d101      	bne.n	80033ba <HAL_RCC_OscConfig+0x12>
 80033b6:	2301      	movs	r3, #1
 80033b8:	e267      	b.n	800388a <HAL_RCC_OscConfig+0x4e2>
 80033ba:	687b      	ldr	r3, [r7, #4]
 80033bc:	681b      	ldr	r3, [r3, #0]
 80033be:	f003 0301 	and.w	r3, r3, #1
 80033c2:	2b00      	cmp	r3, #0
 80033c4:	d075      	beq.n	80034b2 <HAL_RCC_OscConfig+0x10a>
 80033c6:	4b88      	ldr	r3, [pc, #544]	@ (80035e8 <HAL_RCC_OscConfig+0x240>)
 80033c8:	689b      	ldr	r3, [r3, #8]
 80033ca:	f003 030c 	and.w	r3, r3, #12
 80033ce:	2b04      	cmp	r3, #4
 80033d0:	d00c      	beq.n	80033ec <HAL_RCC_OscConfig+0x44>
 80033d2:	4b85      	ldr	r3, [pc, #532]	@ (80035e8 <HAL_RCC_OscConfig+0x240>)
 80033d4:	689b      	ldr	r3, [r3, #8]
 80033d6:	f003 030c 	and.w	r3, r3, #12
 80033da:	2b08      	cmp	r3, #8
 80033dc:	d112      	bne.n	8003404 <HAL_RCC_OscConfig+0x5c>
 80033de:	4b82      	ldr	r3, [pc, #520]	@ (80035e8 <HAL_RCC_OscConfig+0x240>)
 80033e0:	685b      	ldr	r3, [r3, #4]
 80033e2:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80033e6:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 80033ea:	d10b      	bne.n	8003404 <HAL_RCC_OscConfig+0x5c>
 80033ec:	4b7e      	ldr	r3, [pc, #504]	@ (80035e8 <HAL_RCC_OscConfig+0x240>)
 80033ee:	681b      	ldr	r3, [r3, #0]
 80033f0:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80033f4:	2b00      	cmp	r3, #0
 80033f6:	d05b      	beq.n	80034b0 <HAL_RCC_OscConfig+0x108>
 80033f8:	687b      	ldr	r3, [r7, #4]
 80033fa:	685b      	ldr	r3, [r3, #4]
 80033fc:	2b00      	cmp	r3, #0
 80033fe:	d157      	bne.n	80034b0 <HAL_RCC_OscConfig+0x108>
 8003400:	2301      	movs	r3, #1
 8003402:	e242      	b.n	800388a <HAL_RCC_OscConfig+0x4e2>
 8003404:	687b      	ldr	r3, [r7, #4]
 8003406:	685b      	ldr	r3, [r3, #4]
 8003408:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800340c:	d106      	bne.n	800341c <HAL_RCC_OscConfig+0x74>
 800340e:	4b76      	ldr	r3, [pc, #472]	@ (80035e8 <HAL_RCC_OscConfig+0x240>)
 8003410:	681b      	ldr	r3, [r3, #0]
 8003412:	4a75      	ldr	r2, [pc, #468]	@ (80035e8 <HAL_RCC_OscConfig+0x240>)
 8003414:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8003418:	6013      	str	r3, [r2, #0]
 800341a:	e01d      	b.n	8003458 <HAL_RCC_OscConfig+0xb0>
 800341c:	687b      	ldr	r3, [r7, #4]
 800341e:	685b      	ldr	r3, [r3, #4]
 8003420:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8003424:	d10c      	bne.n	8003440 <HAL_RCC_OscConfig+0x98>
 8003426:	4b70      	ldr	r3, [pc, #448]	@ (80035e8 <HAL_RCC_OscConfig+0x240>)
 8003428:	681b      	ldr	r3, [r3, #0]
 800342a:	4a6f      	ldr	r2, [pc, #444]	@ (80035e8 <HAL_RCC_OscConfig+0x240>)
 800342c:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8003430:	6013      	str	r3, [r2, #0]
 8003432:	4b6d      	ldr	r3, [pc, #436]	@ (80035e8 <HAL_RCC_OscConfig+0x240>)
 8003434:	681b      	ldr	r3, [r3, #0]
 8003436:	4a6c      	ldr	r2, [pc, #432]	@ (80035e8 <HAL_RCC_OscConfig+0x240>)
 8003438:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800343c:	6013      	str	r3, [r2, #0]
 800343e:	e00b      	b.n	8003458 <HAL_RCC_OscConfig+0xb0>
 8003440:	4b69      	ldr	r3, [pc, #420]	@ (80035e8 <HAL_RCC_OscConfig+0x240>)
 8003442:	681b      	ldr	r3, [r3, #0]
 8003444:	4a68      	ldr	r2, [pc, #416]	@ (80035e8 <HAL_RCC_OscConfig+0x240>)
 8003446:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 800344a:	6013      	str	r3, [r2, #0]
 800344c:	4b66      	ldr	r3, [pc, #408]	@ (80035e8 <HAL_RCC_OscConfig+0x240>)
 800344e:	681b      	ldr	r3, [r3, #0]
 8003450:	4a65      	ldr	r2, [pc, #404]	@ (80035e8 <HAL_RCC_OscConfig+0x240>)
 8003452:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8003456:	6013      	str	r3, [r2, #0]
 8003458:	687b      	ldr	r3, [r7, #4]
 800345a:	685b      	ldr	r3, [r3, #4]
 800345c:	2b00      	cmp	r3, #0
 800345e:	d013      	beq.n	8003488 <HAL_RCC_OscConfig+0xe0>
 8003460:	f7fe fbfa 	bl	8001c58 <HAL_GetTick>
 8003464:	6138      	str	r0, [r7, #16]
 8003466:	e008      	b.n	800347a <HAL_RCC_OscConfig+0xd2>
 8003468:	f7fe fbf6 	bl	8001c58 <HAL_GetTick>
 800346c:	4602      	mov	r2, r0
 800346e:	693b      	ldr	r3, [r7, #16]
 8003470:	1ad3      	subs	r3, r2, r3
 8003472:	2b64      	cmp	r3, #100	@ 0x64
 8003474:	d901      	bls.n	800347a <HAL_RCC_OscConfig+0xd2>
 8003476:	2303      	movs	r3, #3
 8003478:	e207      	b.n	800388a <HAL_RCC_OscConfig+0x4e2>
 800347a:	4b5b      	ldr	r3, [pc, #364]	@ (80035e8 <HAL_RCC_OscConfig+0x240>)
 800347c:	681b      	ldr	r3, [r3, #0]
 800347e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003482:	2b00      	cmp	r3, #0
 8003484:	d0f0      	beq.n	8003468 <HAL_RCC_OscConfig+0xc0>
 8003486:	e014      	b.n	80034b2 <HAL_RCC_OscConfig+0x10a>
 8003488:	f7fe fbe6 	bl	8001c58 <HAL_GetTick>
 800348c:	6138      	str	r0, [r7, #16]
 800348e:	e008      	b.n	80034a2 <HAL_RCC_OscConfig+0xfa>
 8003490:	f7fe fbe2 	bl	8001c58 <HAL_GetTick>
 8003494:	4602      	mov	r2, r0
 8003496:	693b      	ldr	r3, [r7, #16]
 8003498:	1ad3      	subs	r3, r2, r3
 800349a:	2b64      	cmp	r3, #100	@ 0x64
 800349c:	d901      	bls.n	80034a2 <HAL_RCC_OscConfig+0xfa>
 800349e:	2303      	movs	r3, #3
 80034a0:	e1f3      	b.n	800388a <HAL_RCC_OscConfig+0x4e2>
 80034a2:	4b51      	ldr	r3, [pc, #324]	@ (80035e8 <HAL_RCC_OscConfig+0x240>)
 80034a4:	681b      	ldr	r3, [r3, #0]
 80034a6:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80034aa:	2b00      	cmp	r3, #0
 80034ac:	d1f0      	bne.n	8003490 <HAL_RCC_OscConfig+0xe8>
 80034ae:	e000      	b.n	80034b2 <HAL_RCC_OscConfig+0x10a>
 80034b0:	bf00      	nop
 80034b2:	687b      	ldr	r3, [r7, #4]
 80034b4:	681b      	ldr	r3, [r3, #0]
 80034b6:	f003 0302 	and.w	r3, r3, #2
 80034ba:	2b00      	cmp	r3, #0
 80034bc:	d063      	beq.n	8003586 <HAL_RCC_OscConfig+0x1de>
 80034be:	4b4a      	ldr	r3, [pc, #296]	@ (80035e8 <HAL_RCC_OscConfig+0x240>)
 80034c0:	689b      	ldr	r3, [r3, #8]
 80034c2:	f003 030c 	and.w	r3, r3, #12
 80034c6:	2b00      	cmp	r3, #0
 80034c8:	d00b      	beq.n	80034e2 <HAL_RCC_OscConfig+0x13a>
 80034ca:	4b47      	ldr	r3, [pc, #284]	@ (80035e8 <HAL_RCC_OscConfig+0x240>)
 80034cc:	689b      	ldr	r3, [r3, #8]
 80034ce:	f003 030c 	and.w	r3, r3, #12
 80034d2:	2b08      	cmp	r3, #8
 80034d4:	d11c      	bne.n	8003510 <HAL_RCC_OscConfig+0x168>
 80034d6:	4b44      	ldr	r3, [pc, #272]	@ (80035e8 <HAL_RCC_OscConfig+0x240>)
 80034d8:	685b      	ldr	r3, [r3, #4]
 80034da:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80034de:	2b00      	cmp	r3, #0
 80034e0:	d116      	bne.n	8003510 <HAL_RCC_OscConfig+0x168>
 80034e2:	4b41      	ldr	r3, [pc, #260]	@ (80035e8 <HAL_RCC_OscConfig+0x240>)
 80034e4:	681b      	ldr	r3, [r3, #0]
 80034e6:	f003 0302 	and.w	r3, r3, #2
 80034ea:	2b00      	cmp	r3, #0
 80034ec:	d005      	beq.n	80034fa <HAL_RCC_OscConfig+0x152>
 80034ee:	687b      	ldr	r3, [r7, #4]
 80034f0:	68db      	ldr	r3, [r3, #12]
 80034f2:	2b01      	cmp	r3, #1
 80034f4:	d001      	beq.n	80034fa <HAL_RCC_OscConfig+0x152>
 80034f6:	2301      	movs	r3, #1
 80034f8:	e1c7      	b.n	800388a <HAL_RCC_OscConfig+0x4e2>
 80034fa:	4b3b      	ldr	r3, [pc, #236]	@ (80035e8 <HAL_RCC_OscConfig+0x240>)
 80034fc:	681b      	ldr	r3, [r3, #0]
 80034fe:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8003502:	687b      	ldr	r3, [r7, #4]
 8003504:	691b      	ldr	r3, [r3, #16]
 8003506:	00db      	lsls	r3, r3, #3
 8003508:	4937      	ldr	r1, [pc, #220]	@ (80035e8 <HAL_RCC_OscConfig+0x240>)
 800350a:	4313      	orrs	r3, r2
 800350c:	600b      	str	r3, [r1, #0]
 800350e:	e03a      	b.n	8003586 <HAL_RCC_OscConfig+0x1de>
 8003510:	687b      	ldr	r3, [r7, #4]
 8003512:	68db      	ldr	r3, [r3, #12]
 8003514:	2b00      	cmp	r3, #0
 8003516:	d020      	beq.n	800355a <HAL_RCC_OscConfig+0x1b2>
 8003518:	4b34      	ldr	r3, [pc, #208]	@ (80035ec <HAL_RCC_OscConfig+0x244>)
 800351a:	2201      	movs	r2, #1
 800351c:	601a      	str	r2, [r3, #0]
 800351e:	f7fe fb9b 	bl	8001c58 <HAL_GetTick>
 8003522:	6138      	str	r0, [r7, #16]
 8003524:	e008      	b.n	8003538 <HAL_RCC_OscConfig+0x190>
 8003526:	f7fe fb97 	bl	8001c58 <HAL_GetTick>
 800352a:	4602      	mov	r2, r0
 800352c:	693b      	ldr	r3, [r7, #16]
 800352e:	1ad3      	subs	r3, r2, r3
 8003530:	2b02      	cmp	r3, #2
 8003532:	d901      	bls.n	8003538 <HAL_RCC_OscConfig+0x190>
 8003534:	2303      	movs	r3, #3
 8003536:	e1a8      	b.n	800388a <HAL_RCC_OscConfig+0x4e2>
 8003538:	4b2b      	ldr	r3, [pc, #172]	@ (80035e8 <HAL_RCC_OscConfig+0x240>)
 800353a:	681b      	ldr	r3, [r3, #0]
 800353c:	f003 0302 	and.w	r3, r3, #2
 8003540:	2b00      	cmp	r3, #0
 8003542:	d0f0      	beq.n	8003526 <HAL_RCC_OscConfig+0x17e>
 8003544:	4b28      	ldr	r3, [pc, #160]	@ (80035e8 <HAL_RCC_OscConfig+0x240>)
 8003546:	681b      	ldr	r3, [r3, #0]
 8003548:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 800354c:	687b      	ldr	r3, [r7, #4]
 800354e:	691b      	ldr	r3, [r3, #16]
 8003550:	00db      	lsls	r3, r3, #3
 8003552:	4925      	ldr	r1, [pc, #148]	@ (80035e8 <HAL_RCC_OscConfig+0x240>)
 8003554:	4313      	orrs	r3, r2
 8003556:	600b      	str	r3, [r1, #0]
 8003558:	e015      	b.n	8003586 <HAL_RCC_OscConfig+0x1de>
 800355a:	4b24      	ldr	r3, [pc, #144]	@ (80035ec <HAL_RCC_OscConfig+0x244>)
 800355c:	2200      	movs	r2, #0
 800355e:	601a      	str	r2, [r3, #0]
 8003560:	f7fe fb7a 	bl	8001c58 <HAL_GetTick>
 8003564:	6138      	str	r0, [r7, #16]
 8003566:	e008      	b.n	800357a <HAL_RCC_OscConfig+0x1d2>
 8003568:	f7fe fb76 	bl	8001c58 <HAL_GetTick>
 800356c:	4602      	mov	r2, r0
 800356e:	693b      	ldr	r3, [r7, #16]
 8003570:	1ad3      	subs	r3, r2, r3
 8003572:	2b02      	cmp	r3, #2
 8003574:	d901      	bls.n	800357a <HAL_RCC_OscConfig+0x1d2>
 8003576:	2303      	movs	r3, #3
 8003578:	e187      	b.n	800388a <HAL_RCC_OscConfig+0x4e2>
 800357a:	4b1b      	ldr	r3, [pc, #108]	@ (80035e8 <HAL_RCC_OscConfig+0x240>)
 800357c:	681b      	ldr	r3, [r3, #0]
 800357e:	f003 0302 	and.w	r3, r3, #2
 8003582:	2b00      	cmp	r3, #0
 8003584:	d1f0      	bne.n	8003568 <HAL_RCC_OscConfig+0x1c0>
 8003586:	687b      	ldr	r3, [r7, #4]
 8003588:	681b      	ldr	r3, [r3, #0]
 800358a:	f003 0308 	and.w	r3, r3, #8
 800358e:	2b00      	cmp	r3, #0
 8003590:	d036      	beq.n	8003600 <HAL_RCC_OscConfig+0x258>
 8003592:	687b      	ldr	r3, [r7, #4]
 8003594:	695b      	ldr	r3, [r3, #20]
 8003596:	2b00      	cmp	r3, #0
 8003598:	d016      	beq.n	80035c8 <HAL_RCC_OscConfig+0x220>
 800359a:	4b15      	ldr	r3, [pc, #84]	@ (80035f0 <HAL_RCC_OscConfig+0x248>)
 800359c:	2201      	movs	r2, #1
 800359e:	601a      	str	r2, [r3, #0]
 80035a0:	f7fe fb5a 	bl	8001c58 <HAL_GetTick>
 80035a4:	6138      	str	r0, [r7, #16]
 80035a6:	e008      	b.n	80035ba <HAL_RCC_OscConfig+0x212>
 80035a8:	f7fe fb56 	bl	8001c58 <HAL_GetTick>
 80035ac:	4602      	mov	r2, r0
 80035ae:	693b      	ldr	r3, [r7, #16]
 80035b0:	1ad3      	subs	r3, r2, r3
 80035b2:	2b02      	cmp	r3, #2
 80035b4:	d901      	bls.n	80035ba <HAL_RCC_OscConfig+0x212>
 80035b6:	2303      	movs	r3, #3
 80035b8:	e167      	b.n	800388a <HAL_RCC_OscConfig+0x4e2>
 80035ba:	4b0b      	ldr	r3, [pc, #44]	@ (80035e8 <HAL_RCC_OscConfig+0x240>)
 80035bc:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80035be:	f003 0302 	and.w	r3, r3, #2
 80035c2:	2b00      	cmp	r3, #0
 80035c4:	d0f0      	beq.n	80035a8 <HAL_RCC_OscConfig+0x200>
 80035c6:	e01b      	b.n	8003600 <HAL_RCC_OscConfig+0x258>
 80035c8:	4b09      	ldr	r3, [pc, #36]	@ (80035f0 <HAL_RCC_OscConfig+0x248>)
 80035ca:	2200      	movs	r2, #0
 80035cc:	601a      	str	r2, [r3, #0]
 80035ce:	f7fe fb43 	bl	8001c58 <HAL_GetTick>
 80035d2:	6138      	str	r0, [r7, #16]
 80035d4:	e00e      	b.n	80035f4 <HAL_RCC_OscConfig+0x24c>
 80035d6:	f7fe fb3f 	bl	8001c58 <HAL_GetTick>
 80035da:	4602      	mov	r2, r0
 80035dc:	693b      	ldr	r3, [r7, #16]
 80035de:	1ad3      	subs	r3, r2, r3
 80035e0:	2b02      	cmp	r3, #2
 80035e2:	d907      	bls.n	80035f4 <HAL_RCC_OscConfig+0x24c>
 80035e4:	2303      	movs	r3, #3
 80035e6:	e150      	b.n	800388a <HAL_RCC_OscConfig+0x4e2>
 80035e8:	40023800 	.word	0x40023800
 80035ec:	42470000 	.word	0x42470000
 80035f0:	42470e80 	.word	0x42470e80
 80035f4:	4b88      	ldr	r3, [pc, #544]	@ (8003818 <HAL_RCC_OscConfig+0x470>)
 80035f6:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80035f8:	f003 0302 	and.w	r3, r3, #2
 80035fc:	2b00      	cmp	r3, #0
 80035fe:	d1ea      	bne.n	80035d6 <HAL_RCC_OscConfig+0x22e>
 8003600:	687b      	ldr	r3, [r7, #4]
 8003602:	681b      	ldr	r3, [r3, #0]
 8003604:	f003 0304 	and.w	r3, r3, #4
 8003608:	2b00      	cmp	r3, #0
 800360a:	f000 8097 	beq.w	800373c <HAL_RCC_OscConfig+0x394>
 800360e:	2300      	movs	r3, #0
 8003610:	75fb      	strb	r3, [r7, #23]
 8003612:	4b81      	ldr	r3, [pc, #516]	@ (8003818 <HAL_RCC_OscConfig+0x470>)
 8003614:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003616:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800361a:	2b00      	cmp	r3, #0
 800361c:	d10f      	bne.n	800363e <HAL_RCC_OscConfig+0x296>
 800361e:	2300      	movs	r3, #0
 8003620:	60bb      	str	r3, [r7, #8]
 8003622:	4b7d      	ldr	r3, [pc, #500]	@ (8003818 <HAL_RCC_OscConfig+0x470>)
 8003624:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003626:	4a7c      	ldr	r2, [pc, #496]	@ (8003818 <HAL_RCC_OscConfig+0x470>)
 8003628:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800362c:	6413      	str	r3, [r2, #64]	@ 0x40
 800362e:	4b7a      	ldr	r3, [pc, #488]	@ (8003818 <HAL_RCC_OscConfig+0x470>)
 8003630:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003632:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8003636:	60bb      	str	r3, [r7, #8]
 8003638:	68bb      	ldr	r3, [r7, #8]
 800363a:	2301      	movs	r3, #1
 800363c:	75fb      	strb	r3, [r7, #23]
 800363e:	4b77      	ldr	r3, [pc, #476]	@ (800381c <HAL_RCC_OscConfig+0x474>)
 8003640:	681b      	ldr	r3, [r3, #0]
 8003642:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003646:	2b00      	cmp	r3, #0
 8003648:	d118      	bne.n	800367c <HAL_RCC_OscConfig+0x2d4>
 800364a:	4b74      	ldr	r3, [pc, #464]	@ (800381c <HAL_RCC_OscConfig+0x474>)
 800364c:	681b      	ldr	r3, [r3, #0]
 800364e:	4a73      	ldr	r2, [pc, #460]	@ (800381c <HAL_RCC_OscConfig+0x474>)
 8003650:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8003654:	6013      	str	r3, [r2, #0]
 8003656:	f7fe faff 	bl	8001c58 <HAL_GetTick>
 800365a:	6138      	str	r0, [r7, #16]
 800365c:	e008      	b.n	8003670 <HAL_RCC_OscConfig+0x2c8>
 800365e:	f7fe fafb 	bl	8001c58 <HAL_GetTick>
 8003662:	4602      	mov	r2, r0
 8003664:	693b      	ldr	r3, [r7, #16]
 8003666:	1ad3      	subs	r3, r2, r3
 8003668:	2b02      	cmp	r3, #2
 800366a:	d901      	bls.n	8003670 <HAL_RCC_OscConfig+0x2c8>
 800366c:	2303      	movs	r3, #3
 800366e:	e10c      	b.n	800388a <HAL_RCC_OscConfig+0x4e2>
 8003670:	4b6a      	ldr	r3, [pc, #424]	@ (800381c <HAL_RCC_OscConfig+0x474>)
 8003672:	681b      	ldr	r3, [r3, #0]
 8003674:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003678:	2b00      	cmp	r3, #0
 800367a:	d0f0      	beq.n	800365e <HAL_RCC_OscConfig+0x2b6>
 800367c:	687b      	ldr	r3, [r7, #4]
 800367e:	689b      	ldr	r3, [r3, #8]
 8003680:	2b01      	cmp	r3, #1
 8003682:	d106      	bne.n	8003692 <HAL_RCC_OscConfig+0x2ea>
 8003684:	4b64      	ldr	r3, [pc, #400]	@ (8003818 <HAL_RCC_OscConfig+0x470>)
 8003686:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8003688:	4a63      	ldr	r2, [pc, #396]	@ (8003818 <HAL_RCC_OscConfig+0x470>)
 800368a:	f043 0301 	orr.w	r3, r3, #1
 800368e:	6713      	str	r3, [r2, #112]	@ 0x70
 8003690:	e01c      	b.n	80036cc <HAL_RCC_OscConfig+0x324>
 8003692:	687b      	ldr	r3, [r7, #4]
 8003694:	689b      	ldr	r3, [r3, #8]
 8003696:	2b05      	cmp	r3, #5
 8003698:	d10c      	bne.n	80036b4 <HAL_RCC_OscConfig+0x30c>
 800369a:	4b5f      	ldr	r3, [pc, #380]	@ (8003818 <HAL_RCC_OscConfig+0x470>)
 800369c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800369e:	4a5e      	ldr	r2, [pc, #376]	@ (8003818 <HAL_RCC_OscConfig+0x470>)
 80036a0:	f043 0304 	orr.w	r3, r3, #4
 80036a4:	6713      	str	r3, [r2, #112]	@ 0x70
 80036a6:	4b5c      	ldr	r3, [pc, #368]	@ (8003818 <HAL_RCC_OscConfig+0x470>)
 80036a8:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80036aa:	4a5b      	ldr	r2, [pc, #364]	@ (8003818 <HAL_RCC_OscConfig+0x470>)
 80036ac:	f043 0301 	orr.w	r3, r3, #1
 80036b0:	6713      	str	r3, [r2, #112]	@ 0x70
 80036b2:	e00b      	b.n	80036cc <HAL_RCC_OscConfig+0x324>
 80036b4:	4b58      	ldr	r3, [pc, #352]	@ (8003818 <HAL_RCC_OscConfig+0x470>)
 80036b6:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80036b8:	4a57      	ldr	r2, [pc, #348]	@ (8003818 <HAL_RCC_OscConfig+0x470>)
 80036ba:	f023 0301 	bic.w	r3, r3, #1
 80036be:	6713      	str	r3, [r2, #112]	@ 0x70
 80036c0:	4b55      	ldr	r3, [pc, #340]	@ (8003818 <HAL_RCC_OscConfig+0x470>)
 80036c2:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80036c4:	4a54      	ldr	r2, [pc, #336]	@ (8003818 <HAL_RCC_OscConfig+0x470>)
 80036c6:	f023 0304 	bic.w	r3, r3, #4
 80036ca:	6713      	str	r3, [r2, #112]	@ 0x70
 80036cc:	687b      	ldr	r3, [r7, #4]
 80036ce:	689b      	ldr	r3, [r3, #8]
 80036d0:	2b00      	cmp	r3, #0
 80036d2:	d015      	beq.n	8003700 <HAL_RCC_OscConfig+0x358>
 80036d4:	f7fe fac0 	bl	8001c58 <HAL_GetTick>
 80036d8:	6138      	str	r0, [r7, #16]
 80036da:	e00a      	b.n	80036f2 <HAL_RCC_OscConfig+0x34a>
 80036dc:	f7fe fabc 	bl	8001c58 <HAL_GetTick>
 80036e0:	4602      	mov	r2, r0
 80036e2:	693b      	ldr	r3, [r7, #16]
 80036e4:	1ad3      	subs	r3, r2, r3
 80036e6:	f241 3288 	movw	r2, #5000	@ 0x1388
 80036ea:	4293      	cmp	r3, r2
 80036ec:	d901      	bls.n	80036f2 <HAL_RCC_OscConfig+0x34a>
 80036ee:	2303      	movs	r3, #3
 80036f0:	e0cb      	b.n	800388a <HAL_RCC_OscConfig+0x4e2>
 80036f2:	4b49      	ldr	r3, [pc, #292]	@ (8003818 <HAL_RCC_OscConfig+0x470>)
 80036f4:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80036f6:	f003 0302 	and.w	r3, r3, #2
 80036fa:	2b00      	cmp	r3, #0
 80036fc:	d0ee      	beq.n	80036dc <HAL_RCC_OscConfig+0x334>
 80036fe:	e014      	b.n	800372a <HAL_RCC_OscConfig+0x382>
 8003700:	f7fe faaa 	bl	8001c58 <HAL_GetTick>
 8003704:	6138      	str	r0, [r7, #16]
 8003706:	e00a      	b.n	800371e <HAL_RCC_OscConfig+0x376>
 8003708:	f7fe faa6 	bl	8001c58 <HAL_GetTick>
 800370c:	4602      	mov	r2, r0
 800370e:	693b      	ldr	r3, [r7, #16]
 8003710:	1ad3      	subs	r3, r2, r3
 8003712:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003716:	4293      	cmp	r3, r2
 8003718:	d901      	bls.n	800371e <HAL_RCC_OscConfig+0x376>
 800371a:	2303      	movs	r3, #3
 800371c:	e0b5      	b.n	800388a <HAL_RCC_OscConfig+0x4e2>
 800371e:	4b3e      	ldr	r3, [pc, #248]	@ (8003818 <HAL_RCC_OscConfig+0x470>)
 8003720:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8003722:	f003 0302 	and.w	r3, r3, #2
 8003726:	2b00      	cmp	r3, #0
 8003728:	d1ee      	bne.n	8003708 <HAL_RCC_OscConfig+0x360>
 800372a:	7dfb      	ldrb	r3, [r7, #23]
 800372c:	2b01      	cmp	r3, #1
 800372e:	d105      	bne.n	800373c <HAL_RCC_OscConfig+0x394>
 8003730:	4b39      	ldr	r3, [pc, #228]	@ (8003818 <HAL_RCC_OscConfig+0x470>)
 8003732:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003734:	4a38      	ldr	r2, [pc, #224]	@ (8003818 <HAL_RCC_OscConfig+0x470>)
 8003736:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 800373a:	6413      	str	r3, [r2, #64]	@ 0x40
 800373c:	687b      	ldr	r3, [r7, #4]
 800373e:	699b      	ldr	r3, [r3, #24]
 8003740:	2b00      	cmp	r3, #0
 8003742:	f000 80a1 	beq.w	8003888 <HAL_RCC_OscConfig+0x4e0>
 8003746:	4b34      	ldr	r3, [pc, #208]	@ (8003818 <HAL_RCC_OscConfig+0x470>)
 8003748:	689b      	ldr	r3, [r3, #8]
 800374a:	f003 030c 	and.w	r3, r3, #12
 800374e:	2b08      	cmp	r3, #8
 8003750:	d05c      	beq.n	800380c <HAL_RCC_OscConfig+0x464>
 8003752:	687b      	ldr	r3, [r7, #4]
 8003754:	699b      	ldr	r3, [r3, #24]
 8003756:	2b02      	cmp	r3, #2
 8003758:	d141      	bne.n	80037de <HAL_RCC_OscConfig+0x436>
 800375a:	4b31      	ldr	r3, [pc, #196]	@ (8003820 <HAL_RCC_OscConfig+0x478>)
 800375c:	2200      	movs	r2, #0
 800375e:	601a      	str	r2, [r3, #0]
 8003760:	f7fe fa7a 	bl	8001c58 <HAL_GetTick>
 8003764:	6138      	str	r0, [r7, #16]
 8003766:	e008      	b.n	800377a <HAL_RCC_OscConfig+0x3d2>
 8003768:	f7fe fa76 	bl	8001c58 <HAL_GetTick>
 800376c:	4602      	mov	r2, r0
 800376e:	693b      	ldr	r3, [r7, #16]
 8003770:	1ad3      	subs	r3, r2, r3
 8003772:	2b02      	cmp	r3, #2
 8003774:	d901      	bls.n	800377a <HAL_RCC_OscConfig+0x3d2>
 8003776:	2303      	movs	r3, #3
 8003778:	e087      	b.n	800388a <HAL_RCC_OscConfig+0x4e2>
 800377a:	4b27      	ldr	r3, [pc, #156]	@ (8003818 <HAL_RCC_OscConfig+0x470>)
 800377c:	681b      	ldr	r3, [r3, #0]
 800377e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003782:	2b00      	cmp	r3, #0
 8003784:	d1f0      	bne.n	8003768 <HAL_RCC_OscConfig+0x3c0>
 8003786:	687b      	ldr	r3, [r7, #4]
 8003788:	69da      	ldr	r2, [r3, #28]
 800378a:	687b      	ldr	r3, [r7, #4]
 800378c:	6a1b      	ldr	r3, [r3, #32]
 800378e:	431a      	orrs	r2, r3
 8003790:	687b      	ldr	r3, [r7, #4]
 8003792:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003794:	019b      	lsls	r3, r3, #6
 8003796:	431a      	orrs	r2, r3
 8003798:	687b      	ldr	r3, [r7, #4]
 800379a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800379c:	085b      	lsrs	r3, r3, #1
 800379e:	3b01      	subs	r3, #1
 80037a0:	041b      	lsls	r3, r3, #16
 80037a2:	431a      	orrs	r2, r3
 80037a4:	687b      	ldr	r3, [r7, #4]
 80037a6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80037a8:	061b      	lsls	r3, r3, #24
 80037aa:	491b      	ldr	r1, [pc, #108]	@ (8003818 <HAL_RCC_OscConfig+0x470>)
 80037ac:	4313      	orrs	r3, r2
 80037ae:	604b      	str	r3, [r1, #4]
 80037b0:	4b1b      	ldr	r3, [pc, #108]	@ (8003820 <HAL_RCC_OscConfig+0x478>)
 80037b2:	2201      	movs	r2, #1
 80037b4:	601a      	str	r2, [r3, #0]
 80037b6:	f7fe fa4f 	bl	8001c58 <HAL_GetTick>
 80037ba:	6138      	str	r0, [r7, #16]
 80037bc:	e008      	b.n	80037d0 <HAL_RCC_OscConfig+0x428>
 80037be:	f7fe fa4b 	bl	8001c58 <HAL_GetTick>
 80037c2:	4602      	mov	r2, r0
 80037c4:	693b      	ldr	r3, [r7, #16]
 80037c6:	1ad3      	subs	r3, r2, r3
 80037c8:	2b02      	cmp	r3, #2
 80037ca:	d901      	bls.n	80037d0 <HAL_RCC_OscConfig+0x428>
 80037cc:	2303      	movs	r3, #3
 80037ce:	e05c      	b.n	800388a <HAL_RCC_OscConfig+0x4e2>
 80037d0:	4b11      	ldr	r3, [pc, #68]	@ (8003818 <HAL_RCC_OscConfig+0x470>)
 80037d2:	681b      	ldr	r3, [r3, #0]
 80037d4:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80037d8:	2b00      	cmp	r3, #0
 80037da:	d0f0      	beq.n	80037be <HAL_RCC_OscConfig+0x416>
 80037dc:	e054      	b.n	8003888 <HAL_RCC_OscConfig+0x4e0>
 80037de:	4b10      	ldr	r3, [pc, #64]	@ (8003820 <HAL_RCC_OscConfig+0x478>)
 80037e0:	2200      	movs	r2, #0
 80037e2:	601a      	str	r2, [r3, #0]
 80037e4:	f7fe fa38 	bl	8001c58 <HAL_GetTick>
 80037e8:	6138      	str	r0, [r7, #16]
 80037ea:	e008      	b.n	80037fe <HAL_RCC_OscConfig+0x456>
 80037ec:	f7fe fa34 	bl	8001c58 <HAL_GetTick>
 80037f0:	4602      	mov	r2, r0
 80037f2:	693b      	ldr	r3, [r7, #16]
 80037f4:	1ad3      	subs	r3, r2, r3
 80037f6:	2b02      	cmp	r3, #2
 80037f8:	d901      	bls.n	80037fe <HAL_RCC_OscConfig+0x456>
 80037fa:	2303      	movs	r3, #3
 80037fc:	e045      	b.n	800388a <HAL_RCC_OscConfig+0x4e2>
 80037fe:	4b06      	ldr	r3, [pc, #24]	@ (8003818 <HAL_RCC_OscConfig+0x470>)
 8003800:	681b      	ldr	r3, [r3, #0]
 8003802:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003806:	2b00      	cmp	r3, #0
 8003808:	d1f0      	bne.n	80037ec <HAL_RCC_OscConfig+0x444>
 800380a:	e03d      	b.n	8003888 <HAL_RCC_OscConfig+0x4e0>
 800380c:	687b      	ldr	r3, [r7, #4]
 800380e:	699b      	ldr	r3, [r3, #24]
 8003810:	2b01      	cmp	r3, #1
 8003812:	d107      	bne.n	8003824 <HAL_RCC_OscConfig+0x47c>
 8003814:	2301      	movs	r3, #1
 8003816:	e038      	b.n	800388a <HAL_RCC_OscConfig+0x4e2>
 8003818:	40023800 	.word	0x40023800
 800381c:	40007000 	.word	0x40007000
 8003820:	42470060 	.word	0x42470060
 8003824:	4b1b      	ldr	r3, [pc, #108]	@ (8003894 <HAL_RCC_OscConfig+0x4ec>)
 8003826:	685b      	ldr	r3, [r3, #4]
 8003828:	60fb      	str	r3, [r7, #12]
 800382a:	687b      	ldr	r3, [r7, #4]
 800382c:	699b      	ldr	r3, [r3, #24]
 800382e:	2b01      	cmp	r3, #1
 8003830:	d028      	beq.n	8003884 <HAL_RCC_OscConfig+0x4dc>
 8003832:	68fb      	ldr	r3, [r7, #12]
 8003834:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 8003838:	687b      	ldr	r3, [r7, #4]
 800383a:	69db      	ldr	r3, [r3, #28]
 800383c:	429a      	cmp	r2, r3
 800383e:	d121      	bne.n	8003884 <HAL_RCC_OscConfig+0x4dc>
 8003840:	68fb      	ldr	r3, [r7, #12]
 8003842:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 8003846:	687b      	ldr	r3, [r7, #4]
 8003848:	6a1b      	ldr	r3, [r3, #32]
 800384a:	429a      	cmp	r2, r3
 800384c:	d11a      	bne.n	8003884 <HAL_RCC_OscConfig+0x4dc>
 800384e:	68fa      	ldr	r2, [r7, #12]
 8003850:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 8003854:	4013      	ands	r3, r2
 8003856:	687a      	ldr	r2, [r7, #4]
 8003858:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 800385a:	0192      	lsls	r2, r2, #6
 800385c:	4293      	cmp	r3, r2
 800385e:	d111      	bne.n	8003884 <HAL_RCC_OscConfig+0x4dc>
 8003860:	68fb      	ldr	r3, [r7, #12]
 8003862:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 8003866:	687b      	ldr	r3, [r7, #4]
 8003868:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800386a:	085b      	lsrs	r3, r3, #1
 800386c:	3b01      	subs	r3, #1
 800386e:	041b      	lsls	r3, r3, #16
 8003870:	429a      	cmp	r2, r3
 8003872:	d107      	bne.n	8003884 <HAL_RCC_OscConfig+0x4dc>
 8003874:	68fb      	ldr	r3, [r7, #12]
 8003876:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 800387a:	687b      	ldr	r3, [r7, #4]
 800387c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800387e:	061b      	lsls	r3, r3, #24
 8003880:	429a      	cmp	r2, r3
 8003882:	d001      	beq.n	8003888 <HAL_RCC_OscConfig+0x4e0>
 8003884:	2301      	movs	r3, #1
 8003886:	e000      	b.n	800388a <HAL_RCC_OscConfig+0x4e2>
 8003888:	2300      	movs	r3, #0
 800388a:	4618      	mov	r0, r3
 800388c:	3718      	adds	r7, #24
 800388e:	46bd      	mov	sp, r7
 8003890:	bd80      	pop	{r7, pc}
 8003892:	bf00      	nop
 8003894:	40023800 	.word	0x40023800

08003898 <HAL_RCC_ClockConfig>:
 8003898:	b580      	push	{r7, lr}
 800389a:	b084      	sub	sp, #16
 800389c:	af00      	add	r7, sp, #0
 800389e:	6078      	str	r0, [r7, #4]
 80038a0:	6039      	str	r1, [r7, #0]
 80038a2:	687b      	ldr	r3, [r7, #4]
 80038a4:	2b00      	cmp	r3, #0
 80038a6:	d101      	bne.n	80038ac <HAL_RCC_ClockConfig+0x14>
 80038a8:	2301      	movs	r3, #1
 80038aa:	e0cc      	b.n	8003a46 <HAL_RCC_ClockConfig+0x1ae>
 80038ac:	4b68      	ldr	r3, [pc, #416]	@ (8003a50 <HAL_RCC_ClockConfig+0x1b8>)
 80038ae:	681b      	ldr	r3, [r3, #0]
 80038b0:	f003 0307 	and.w	r3, r3, #7
 80038b4:	683a      	ldr	r2, [r7, #0]
 80038b6:	429a      	cmp	r2, r3
 80038b8:	d90c      	bls.n	80038d4 <HAL_RCC_ClockConfig+0x3c>
 80038ba:	4b65      	ldr	r3, [pc, #404]	@ (8003a50 <HAL_RCC_ClockConfig+0x1b8>)
 80038bc:	683a      	ldr	r2, [r7, #0]
 80038be:	b2d2      	uxtb	r2, r2
 80038c0:	701a      	strb	r2, [r3, #0]
 80038c2:	4b63      	ldr	r3, [pc, #396]	@ (8003a50 <HAL_RCC_ClockConfig+0x1b8>)
 80038c4:	681b      	ldr	r3, [r3, #0]
 80038c6:	f003 0307 	and.w	r3, r3, #7
 80038ca:	683a      	ldr	r2, [r7, #0]
 80038cc:	429a      	cmp	r2, r3
 80038ce:	d001      	beq.n	80038d4 <HAL_RCC_ClockConfig+0x3c>
 80038d0:	2301      	movs	r3, #1
 80038d2:	e0b8      	b.n	8003a46 <HAL_RCC_ClockConfig+0x1ae>
 80038d4:	687b      	ldr	r3, [r7, #4]
 80038d6:	681b      	ldr	r3, [r3, #0]
 80038d8:	f003 0302 	and.w	r3, r3, #2
 80038dc:	2b00      	cmp	r3, #0
 80038de:	d020      	beq.n	8003922 <HAL_RCC_ClockConfig+0x8a>
 80038e0:	687b      	ldr	r3, [r7, #4]
 80038e2:	681b      	ldr	r3, [r3, #0]
 80038e4:	f003 0304 	and.w	r3, r3, #4
 80038e8:	2b00      	cmp	r3, #0
 80038ea:	d005      	beq.n	80038f8 <HAL_RCC_ClockConfig+0x60>
 80038ec:	4b59      	ldr	r3, [pc, #356]	@ (8003a54 <HAL_RCC_ClockConfig+0x1bc>)
 80038ee:	689b      	ldr	r3, [r3, #8]
 80038f0:	4a58      	ldr	r2, [pc, #352]	@ (8003a54 <HAL_RCC_ClockConfig+0x1bc>)
 80038f2:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 80038f6:	6093      	str	r3, [r2, #8]
 80038f8:	687b      	ldr	r3, [r7, #4]
 80038fa:	681b      	ldr	r3, [r3, #0]
 80038fc:	f003 0308 	and.w	r3, r3, #8
 8003900:	2b00      	cmp	r3, #0
 8003902:	d005      	beq.n	8003910 <HAL_RCC_ClockConfig+0x78>
 8003904:	4b53      	ldr	r3, [pc, #332]	@ (8003a54 <HAL_RCC_ClockConfig+0x1bc>)
 8003906:	689b      	ldr	r3, [r3, #8]
 8003908:	4a52      	ldr	r2, [pc, #328]	@ (8003a54 <HAL_RCC_ClockConfig+0x1bc>)
 800390a:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 800390e:	6093      	str	r3, [r2, #8]
 8003910:	4b50      	ldr	r3, [pc, #320]	@ (8003a54 <HAL_RCC_ClockConfig+0x1bc>)
 8003912:	689b      	ldr	r3, [r3, #8]
 8003914:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8003918:	687b      	ldr	r3, [r7, #4]
 800391a:	689b      	ldr	r3, [r3, #8]
 800391c:	494d      	ldr	r1, [pc, #308]	@ (8003a54 <HAL_RCC_ClockConfig+0x1bc>)
 800391e:	4313      	orrs	r3, r2
 8003920:	608b      	str	r3, [r1, #8]
 8003922:	687b      	ldr	r3, [r7, #4]
 8003924:	681b      	ldr	r3, [r3, #0]
 8003926:	f003 0301 	and.w	r3, r3, #1
 800392a:	2b00      	cmp	r3, #0
 800392c:	d044      	beq.n	80039b8 <HAL_RCC_ClockConfig+0x120>
 800392e:	687b      	ldr	r3, [r7, #4]
 8003930:	685b      	ldr	r3, [r3, #4]
 8003932:	2b01      	cmp	r3, #1
 8003934:	d107      	bne.n	8003946 <HAL_RCC_ClockConfig+0xae>
 8003936:	4b47      	ldr	r3, [pc, #284]	@ (8003a54 <HAL_RCC_ClockConfig+0x1bc>)
 8003938:	681b      	ldr	r3, [r3, #0]
 800393a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800393e:	2b00      	cmp	r3, #0
 8003940:	d119      	bne.n	8003976 <HAL_RCC_ClockConfig+0xde>
 8003942:	2301      	movs	r3, #1
 8003944:	e07f      	b.n	8003a46 <HAL_RCC_ClockConfig+0x1ae>
 8003946:	687b      	ldr	r3, [r7, #4]
 8003948:	685b      	ldr	r3, [r3, #4]
 800394a:	2b02      	cmp	r3, #2
 800394c:	d003      	beq.n	8003956 <HAL_RCC_ClockConfig+0xbe>
 800394e:	687b      	ldr	r3, [r7, #4]
 8003950:	685b      	ldr	r3, [r3, #4]
 8003952:	2b03      	cmp	r3, #3
 8003954:	d107      	bne.n	8003966 <HAL_RCC_ClockConfig+0xce>
 8003956:	4b3f      	ldr	r3, [pc, #252]	@ (8003a54 <HAL_RCC_ClockConfig+0x1bc>)
 8003958:	681b      	ldr	r3, [r3, #0]
 800395a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800395e:	2b00      	cmp	r3, #0
 8003960:	d109      	bne.n	8003976 <HAL_RCC_ClockConfig+0xde>
 8003962:	2301      	movs	r3, #1
 8003964:	e06f      	b.n	8003a46 <HAL_RCC_ClockConfig+0x1ae>
 8003966:	4b3b      	ldr	r3, [pc, #236]	@ (8003a54 <HAL_RCC_ClockConfig+0x1bc>)
 8003968:	681b      	ldr	r3, [r3, #0]
 800396a:	f003 0302 	and.w	r3, r3, #2
 800396e:	2b00      	cmp	r3, #0
 8003970:	d101      	bne.n	8003976 <HAL_RCC_ClockConfig+0xde>
 8003972:	2301      	movs	r3, #1
 8003974:	e067      	b.n	8003a46 <HAL_RCC_ClockConfig+0x1ae>
 8003976:	4b37      	ldr	r3, [pc, #220]	@ (8003a54 <HAL_RCC_ClockConfig+0x1bc>)
 8003978:	689b      	ldr	r3, [r3, #8]
 800397a:	f023 0203 	bic.w	r2, r3, #3
 800397e:	687b      	ldr	r3, [r7, #4]
 8003980:	685b      	ldr	r3, [r3, #4]
 8003982:	4934      	ldr	r1, [pc, #208]	@ (8003a54 <HAL_RCC_ClockConfig+0x1bc>)
 8003984:	4313      	orrs	r3, r2
 8003986:	608b      	str	r3, [r1, #8]
 8003988:	f7fe f966 	bl	8001c58 <HAL_GetTick>
 800398c:	60f8      	str	r0, [r7, #12]
 800398e:	e00a      	b.n	80039a6 <HAL_RCC_ClockConfig+0x10e>
 8003990:	f7fe f962 	bl	8001c58 <HAL_GetTick>
 8003994:	4602      	mov	r2, r0
 8003996:	68fb      	ldr	r3, [r7, #12]
 8003998:	1ad3      	subs	r3, r2, r3
 800399a:	f241 3288 	movw	r2, #5000	@ 0x1388
 800399e:	4293      	cmp	r3, r2
 80039a0:	d901      	bls.n	80039a6 <HAL_RCC_ClockConfig+0x10e>
 80039a2:	2303      	movs	r3, #3
 80039a4:	e04f      	b.n	8003a46 <HAL_RCC_ClockConfig+0x1ae>
 80039a6:	4b2b      	ldr	r3, [pc, #172]	@ (8003a54 <HAL_RCC_ClockConfig+0x1bc>)
 80039a8:	689b      	ldr	r3, [r3, #8]
 80039aa:	f003 020c 	and.w	r2, r3, #12
 80039ae:	687b      	ldr	r3, [r7, #4]
 80039b0:	685b      	ldr	r3, [r3, #4]
 80039b2:	009b      	lsls	r3, r3, #2
 80039b4:	429a      	cmp	r2, r3
 80039b6:	d1eb      	bne.n	8003990 <HAL_RCC_ClockConfig+0xf8>
 80039b8:	4b25      	ldr	r3, [pc, #148]	@ (8003a50 <HAL_RCC_ClockConfig+0x1b8>)
 80039ba:	681b      	ldr	r3, [r3, #0]
 80039bc:	f003 0307 	and.w	r3, r3, #7
 80039c0:	683a      	ldr	r2, [r7, #0]
 80039c2:	429a      	cmp	r2, r3
 80039c4:	d20c      	bcs.n	80039e0 <HAL_RCC_ClockConfig+0x148>
 80039c6:	4b22      	ldr	r3, [pc, #136]	@ (8003a50 <HAL_RCC_ClockConfig+0x1b8>)
 80039c8:	683a      	ldr	r2, [r7, #0]
 80039ca:	b2d2      	uxtb	r2, r2
 80039cc:	701a      	strb	r2, [r3, #0]
 80039ce:	4b20      	ldr	r3, [pc, #128]	@ (8003a50 <HAL_RCC_ClockConfig+0x1b8>)
 80039d0:	681b      	ldr	r3, [r3, #0]
 80039d2:	f003 0307 	and.w	r3, r3, #7
 80039d6:	683a      	ldr	r2, [r7, #0]
 80039d8:	429a      	cmp	r2, r3
 80039da:	d001      	beq.n	80039e0 <HAL_RCC_ClockConfig+0x148>
 80039dc:	2301      	movs	r3, #1
 80039de:	e032      	b.n	8003a46 <HAL_RCC_ClockConfig+0x1ae>
 80039e0:	687b      	ldr	r3, [r7, #4]
 80039e2:	681b      	ldr	r3, [r3, #0]
 80039e4:	f003 0304 	and.w	r3, r3, #4
 80039e8:	2b00      	cmp	r3, #0
 80039ea:	d008      	beq.n	80039fe <HAL_RCC_ClockConfig+0x166>
 80039ec:	4b19      	ldr	r3, [pc, #100]	@ (8003a54 <HAL_RCC_ClockConfig+0x1bc>)
 80039ee:	689b      	ldr	r3, [r3, #8]
 80039f0:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 80039f4:	687b      	ldr	r3, [r7, #4]
 80039f6:	68db      	ldr	r3, [r3, #12]
 80039f8:	4916      	ldr	r1, [pc, #88]	@ (8003a54 <HAL_RCC_ClockConfig+0x1bc>)
 80039fa:	4313      	orrs	r3, r2
 80039fc:	608b      	str	r3, [r1, #8]
 80039fe:	687b      	ldr	r3, [r7, #4]
 8003a00:	681b      	ldr	r3, [r3, #0]
 8003a02:	f003 0308 	and.w	r3, r3, #8
 8003a06:	2b00      	cmp	r3, #0
 8003a08:	d009      	beq.n	8003a1e <HAL_RCC_ClockConfig+0x186>
 8003a0a:	4b12      	ldr	r3, [pc, #72]	@ (8003a54 <HAL_RCC_ClockConfig+0x1bc>)
 8003a0c:	689b      	ldr	r3, [r3, #8]
 8003a0e:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 8003a12:	687b      	ldr	r3, [r7, #4]
 8003a14:	691b      	ldr	r3, [r3, #16]
 8003a16:	00db      	lsls	r3, r3, #3
 8003a18:	490e      	ldr	r1, [pc, #56]	@ (8003a54 <HAL_RCC_ClockConfig+0x1bc>)
 8003a1a:	4313      	orrs	r3, r2
 8003a1c:	608b      	str	r3, [r1, #8]
 8003a1e:	f000 f821 	bl	8003a64 <HAL_RCC_GetSysClockFreq>
 8003a22:	4602      	mov	r2, r0
 8003a24:	4b0b      	ldr	r3, [pc, #44]	@ (8003a54 <HAL_RCC_ClockConfig+0x1bc>)
 8003a26:	689b      	ldr	r3, [r3, #8]
 8003a28:	091b      	lsrs	r3, r3, #4
 8003a2a:	f003 030f 	and.w	r3, r3, #15
 8003a2e:	490a      	ldr	r1, [pc, #40]	@ (8003a58 <HAL_RCC_ClockConfig+0x1c0>)
 8003a30:	5ccb      	ldrb	r3, [r1, r3]
 8003a32:	fa22 f303 	lsr.w	r3, r2, r3
 8003a36:	4a09      	ldr	r2, [pc, #36]	@ (8003a5c <HAL_RCC_ClockConfig+0x1c4>)
 8003a38:	6013      	str	r3, [r2, #0]
 8003a3a:	4b09      	ldr	r3, [pc, #36]	@ (8003a60 <HAL_RCC_ClockConfig+0x1c8>)
 8003a3c:	681b      	ldr	r3, [r3, #0]
 8003a3e:	4618      	mov	r0, r3
 8003a40:	f7fe f8c6 	bl	8001bd0 <HAL_InitTick>
 8003a44:	2300      	movs	r3, #0
 8003a46:	4618      	mov	r0, r3
 8003a48:	3710      	adds	r7, #16
 8003a4a:	46bd      	mov	sp, r7
 8003a4c:	bd80      	pop	{r7, pc}
 8003a4e:	bf00      	nop
 8003a50:	40023c00 	.word	0x40023c00
 8003a54:	40023800 	.word	0x40023800
 8003a58:	08006a60 	.word	0x08006a60
 8003a5c:	20000004 	.word	0x20000004
 8003a60:	20000008 	.word	0x20000008

08003a64 <HAL_RCC_GetSysClockFreq>:
 8003a64:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8003a68:	b094      	sub	sp, #80	@ 0x50
 8003a6a:	af00      	add	r7, sp, #0
 8003a6c:	2300      	movs	r3, #0
 8003a6e:	647b      	str	r3, [r7, #68]	@ 0x44
 8003a70:	2300      	movs	r3, #0
 8003a72:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8003a74:	2300      	movs	r3, #0
 8003a76:	643b      	str	r3, [r7, #64]	@ 0x40
 8003a78:	2300      	movs	r3, #0
 8003a7a:	64bb      	str	r3, [r7, #72]	@ 0x48
 8003a7c:	4b79      	ldr	r3, [pc, #484]	@ (8003c64 <HAL_RCC_GetSysClockFreq+0x200>)
 8003a7e:	689b      	ldr	r3, [r3, #8]
 8003a80:	f003 030c 	and.w	r3, r3, #12
 8003a84:	2b08      	cmp	r3, #8
 8003a86:	d00d      	beq.n	8003aa4 <HAL_RCC_GetSysClockFreq+0x40>
 8003a88:	2b08      	cmp	r3, #8
 8003a8a:	f200 80e1 	bhi.w	8003c50 <HAL_RCC_GetSysClockFreq+0x1ec>
 8003a8e:	2b00      	cmp	r3, #0
 8003a90:	d002      	beq.n	8003a98 <HAL_RCC_GetSysClockFreq+0x34>
 8003a92:	2b04      	cmp	r3, #4
 8003a94:	d003      	beq.n	8003a9e <HAL_RCC_GetSysClockFreq+0x3a>
 8003a96:	e0db      	b.n	8003c50 <HAL_RCC_GetSysClockFreq+0x1ec>
 8003a98:	4b73      	ldr	r3, [pc, #460]	@ (8003c68 <HAL_RCC_GetSysClockFreq+0x204>)
 8003a9a:	64bb      	str	r3, [r7, #72]	@ 0x48
 8003a9c:	e0db      	b.n	8003c56 <HAL_RCC_GetSysClockFreq+0x1f2>
 8003a9e:	4b73      	ldr	r3, [pc, #460]	@ (8003c6c <HAL_RCC_GetSysClockFreq+0x208>)
 8003aa0:	64bb      	str	r3, [r7, #72]	@ 0x48
 8003aa2:	e0d8      	b.n	8003c56 <HAL_RCC_GetSysClockFreq+0x1f2>
 8003aa4:	4b6f      	ldr	r3, [pc, #444]	@ (8003c64 <HAL_RCC_GetSysClockFreq+0x200>)
 8003aa6:	685b      	ldr	r3, [r3, #4]
 8003aa8:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8003aac:	647b      	str	r3, [r7, #68]	@ 0x44
 8003aae:	4b6d      	ldr	r3, [pc, #436]	@ (8003c64 <HAL_RCC_GetSysClockFreq+0x200>)
 8003ab0:	685b      	ldr	r3, [r3, #4]
 8003ab2:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8003ab6:	2b00      	cmp	r3, #0
 8003ab8:	d063      	beq.n	8003b82 <HAL_RCC_GetSysClockFreq+0x11e>
 8003aba:	4b6a      	ldr	r3, [pc, #424]	@ (8003c64 <HAL_RCC_GetSysClockFreq+0x200>)
 8003abc:	685b      	ldr	r3, [r3, #4]
 8003abe:	099b      	lsrs	r3, r3, #6
 8003ac0:	2200      	movs	r2, #0
 8003ac2:	63bb      	str	r3, [r7, #56]	@ 0x38
 8003ac4:	63fa      	str	r2, [r7, #60]	@ 0x3c
 8003ac6:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8003ac8:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8003acc:	633b      	str	r3, [r7, #48]	@ 0x30
 8003ace:	2300      	movs	r3, #0
 8003ad0:	637b      	str	r3, [r7, #52]	@ 0x34
 8003ad2:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	@ 0x30
 8003ad6:	4622      	mov	r2, r4
 8003ad8:	462b      	mov	r3, r5
 8003ada:	f04f 0000 	mov.w	r0, #0
 8003ade:	f04f 0100 	mov.w	r1, #0
 8003ae2:	0159      	lsls	r1, r3, #5
 8003ae4:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8003ae8:	0150      	lsls	r0, r2, #5
 8003aea:	4602      	mov	r2, r0
 8003aec:	460b      	mov	r3, r1
 8003aee:	4621      	mov	r1, r4
 8003af0:	1a51      	subs	r1, r2, r1
 8003af2:	6139      	str	r1, [r7, #16]
 8003af4:	4629      	mov	r1, r5
 8003af6:	eb63 0301 	sbc.w	r3, r3, r1
 8003afa:	617b      	str	r3, [r7, #20]
 8003afc:	f04f 0200 	mov.w	r2, #0
 8003b00:	f04f 0300 	mov.w	r3, #0
 8003b04:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8003b08:	4659      	mov	r1, fp
 8003b0a:	018b      	lsls	r3, r1, #6
 8003b0c:	4651      	mov	r1, sl
 8003b0e:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8003b12:	4651      	mov	r1, sl
 8003b14:	018a      	lsls	r2, r1, #6
 8003b16:	4651      	mov	r1, sl
 8003b18:	ebb2 0801 	subs.w	r8, r2, r1
 8003b1c:	4659      	mov	r1, fp
 8003b1e:	eb63 0901 	sbc.w	r9, r3, r1
 8003b22:	f04f 0200 	mov.w	r2, #0
 8003b26:	f04f 0300 	mov.w	r3, #0
 8003b2a:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8003b2e:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8003b32:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8003b36:	4690      	mov	r8, r2
 8003b38:	4699      	mov	r9, r3
 8003b3a:	4623      	mov	r3, r4
 8003b3c:	eb18 0303 	adds.w	r3, r8, r3
 8003b40:	60bb      	str	r3, [r7, #8]
 8003b42:	462b      	mov	r3, r5
 8003b44:	eb49 0303 	adc.w	r3, r9, r3
 8003b48:	60fb      	str	r3, [r7, #12]
 8003b4a:	f04f 0200 	mov.w	r2, #0
 8003b4e:	f04f 0300 	mov.w	r3, #0
 8003b52:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 8003b56:	4629      	mov	r1, r5
 8003b58:	024b      	lsls	r3, r1, #9
 8003b5a:	4621      	mov	r1, r4
 8003b5c:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 8003b60:	4621      	mov	r1, r4
 8003b62:	024a      	lsls	r2, r1, #9
 8003b64:	4610      	mov	r0, r2
 8003b66:	4619      	mov	r1, r3
 8003b68:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8003b6a:	2200      	movs	r2, #0
 8003b6c:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003b6e:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8003b70:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 8003b74:	f7fc fb88 	bl	8000288 <__aeabi_uldivmod>
 8003b78:	4602      	mov	r2, r0
 8003b7a:	460b      	mov	r3, r1
 8003b7c:	4613      	mov	r3, r2
 8003b7e:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8003b80:	e058      	b.n	8003c34 <HAL_RCC_GetSysClockFreq+0x1d0>
 8003b82:	4b38      	ldr	r3, [pc, #224]	@ (8003c64 <HAL_RCC_GetSysClockFreq+0x200>)
 8003b84:	685b      	ldr	r3, [r3, #4]
 8003b86:	099b      	lsrs	r3, r3, #6
 8003b88:	2200      	movs	r2, #0
 8003b8a:	4618      	mov	r0, r3
 8003b8c:	4611      	mov	r1, r2
 8003b8e:	f3c0 0308 	ubfx	r3, r0, #0, #9
 8003b92:	623b      	str	r3, [r7, #32]
 8003b94:	2300      	movs	r3, #0
 8003b96:	627b      	str	r3, [r7, #36]	@ 0x24
 8003b98:	e9d7 8908 	ldrd	r8, r9, [r7, #32]
 8003b9c:	4642      	mov	r2, r8
 8003b9e:	464b      	mov	r3, r9
 8003ba0:	f04f 0000 	mov.w	r0, #0
 8003ba4:	f04f 0100 	mov.w	r1, #0
 8003ba8:	0159      	lsls	r1, r3, #5
 8003baa:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8003bae:	0150      	lsls	r0, r2, #5
 8003bb0:	4602      	mov	r2, r0
 8003bb2:	460b      	mov	r3, r1
 8003bb4:	4641      	mov	r1, r8
 8003bb6:	ebb2 0a01 	subs.w	sl, r2, r1
 8003bba:	4649      	mov	r1, r9
 8003bbc:	eb63 0b01 	sbc.w	fp, r3, r1
 8003bc0:	f04f 0200 	mov.w	r2, #0
 8003bc4:	f04f 0300 	mov.w	r3, #0
 8003bc8:	ea4f 138b 	mov.w	r3, fp, lsl #6
 8003bcc:	ea43 639a 	orr.w	r3, r3, sl, lsr #26
 8003bd0:	ea4f 128a 	mov.w	r2, sl, lsl #6
 8003bd4:	ebb2 040a 	subs.w	r4, r2, sl
 8003bd8:	eb63 050b 	sbc.w	r5, r3, fp
 8003bdc:	f04f 0200 	mov.w	r2, #0
 8003be0:	f04f 0300 	mov.w	r3, #0
 8003be4:	00eb      	lsls	r3, r5, #3
 8003be6:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8003bea:	00e2      	lsls	r2, r4, #3
 8003bec:	4614      	mov	r4, r2
 8003bee:	461d      	mov	r5, r3
 8003bf0:	4643      	mov	r3, r8
 8003bf2:	18e3      	adds	r3, r4, r3
 8003bf4:	603b      	str	r3, [r7, #0]
 8003bf6:	464b      	mov	r3, r9
 8003bf8:	eb45 0303 	adc.w	r3, r5, r3
 8003bfc:	607b      	str	r3, [r7, #4]
 8003bfe:	f04f 0200 	mov.w	r2, #0
 8003c02:	f04f 0300 	mov.w	r3, #0
 8003c06:	e9d7 4500 	ldrd	r4, r5, [r7]
 8003c0a:	4629      	mov	r1, r5
 8003c0c:	028b      	lsls	r3, r1, #10
 8003c0e:	4621      	mov	r1, r4
 8003c10:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8003c14:	4621      	mov	r1, r4
 8003c16:	028a      	lsls	r2, r1, #10
 8003c18:	4610      	mov	r0, r2
 8003c1a:	4619      	mov	r1, r3
 8003c1c:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8003c1e:	2200      	movs	r2, #0
 8003c20:	61bb      	str	r3, [r7, #24]
 8003c22:	61fa      	str	r2, [r7, #28]
 8003c24:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8003c28:	f7fc fb2e 	bl	8000288 <__aeabi_uldivmod>
 8003c2c:	4602      	mov	r2, r0
 8003c2e:	460b      	mov	r3, r1
 8003c30:	4613      	mov	r3, r2
 8003c32:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8003c34:	4b0b      	ldr	r3, [pc, #44]	@ (8003c64 <HAL_RCC_GetSysClockFreq+0x200>)
 8003c36:	685b      	ldr	r3, [r3, #4]
 8003c38:	0c1b      	lsrs	r3, r3, #16
 8003c3a:	f003 0303 	and.w	r3, r3, #3
 8003c3e:	3301      	adds	r3, #1
 8003c40:	005b      	lsls	r3, r3, #1
 8003c42:	643b      	str	r3, [r7, #64]	@ 0x40
 8003c44:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 8003c46:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8003c48:	fbb2 f3f3 	udiv	r3, r2, r3
 8003c4c:	64bb      	str	r3, [r7, #72]	@ 0x48
 8003c4e:	e002      	b.n	8003c56 <HAL_RCC_GetSysClockFreq+0x1f2>
 8003c50:	4b05      	ldr	r3, [pc, #20]	@ (8003c68 <HAL_RCC_GetSysClockFreq+0x204>)
 8003c52:	64bb      	str	r3, [r7, #72]	@ 0x48
 8003c54:	bf00      	nop
 8003c56:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8003c58:	4618      	mov	r0, r3
 8003c5a:	3750      	adds	r7, #80	@ 0x50
 8003c5c:	46bd      	mov	sp, r7
 8003c5e:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8003c62:	bf00      	nop
 8003c64:	40023800 	.word	0x40023800
 8003c68:	00f42400 	.word	0x00f42400
 8003c6c:	007a1200 	.word	0x007a1200

08003c70 <HAL_TIM_Base_Init>:
 8003c70:	b580      	push	{r7, lr}
 8003c72:	b082      	sub	sp, #8
 8003c74:	af00      	add	r7, sp, #0
 8003c76:	6078      	str	r0, [r7, #4]
 8003c78:	687b      	ldr	r3, [r7, #4]
 8003c7a:	2b00      	cmp	r3, #0
 8003c7c:	d101      	bne.n	8003c82 <HAL_TIM_Base_Init+0x12>
 8003c7e:	2301      	movs	r3, #1
 8003c80:	e041      	b.n	8003d06 <HAL_TIM_Base_Init+0x96>
 8003c82:	687b      	ldr	r3, [r7, #4]
 8003c84:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8003c88:	b2db      	uxtb	r3, r3
 8003c8a:	2b00      	cmp	r3, #0
 8003c8c:	d106      	bne.n	8003c9c <HAL_TIM_Base_Init+0x2c>
 8003c8e:	687b      	ldr	r3, [r7, #4]
 8003c90:	2200      	movs	r2, #0
 8003c92:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003c96:	6878      	ldr	r0, [r7, #4]
 8003c98:	f7fd fe6a 	bl	8001970 <HAL_TIM_Base_MspInit>
 8003c9c:	687b      	ldr	r3, [r7, #4]
 8003c9e:	2202      	movs	r2, #2
 8003ca0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003ca4:	687b      	ldr	r3, [r7, #4]
 8003ca6:	681a      	ldr	r2, [r3, #0]
 8003ca8:	687b      	ldr	r3, [r7, #4]
 8003caa:	3304      	adds	r3, #4
 8003cac:	4619      	mov	r1, r3
 8003cae:	4610      	mov	r0, r2
 8003cb0:	f000 fd8e 	bl	80047d0 <TIM_Base_SetConfig>
 8003cb4:	687b      	ldr	r3, [r7, #4]
 8003cb6:	2201      	movs	r2, #1
 8003cb8:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8003cbc:	687b      	ldr	r3, [r7, #4]
 8003cbe:	2201      	movs	r2, #1
 8003cc0:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003cc4:	687b      	ldr	r3, [r7, #4]
 8003cc6:	2201      	movs	r2, #1
 8003cc8:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8003ccc:	687b      	ldr	r3, [r7, #4]
 8003cce:	2201      	movs	r2, #1
 8003cd0:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003cd4:	687b      	ldr	r3, [r7, #4]
 8003cd6:	2201      	movs	r2, #1
 8003cd8:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003cdc:	687b      	ldr	r3, [r7, #4]
 8003cde:	2201      	movs	r2, #1
 8003ce0:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003ce4:	687b      	ldr	r3, [r7, #4]
 8003ce6:	2201      	movs	r2, #1
 8003ce8:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8003cec:	687b      	ldr	r3, [r7, #4]
 8003cee:	2201      	movs	r2, #1
 8003cf0:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8003cf4:	687b      	ldr	r3, [r7, #4]
 8003cf6:	2201      	movs	r2, #1
 8003cf8:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8003cfc:	687b      	ldr	r3, [r7, #4]
 8003cfe:	2201      	movs	r2, #1
 8003d00:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003d04:	2300      	movs	r3, #0
 8003d06:	4618      	mov	r0, r3
 8003d08:	3708      	adds	r7, #8
 8003d0a:	46bd      	mov	sp, r7
 8003d0c:	bd80      	pop	{r7, pc}

08003d0e <HAL_TIM_PWM_Init>:
 8003d0e:	b580      	push	{r7, lr}
 8003d10:	b082      	sub	sp, #8
 8003d12:	af00      	add	r7, sp, #0
 8003d14:	6078      	str	r0, [r7, #4]
 8003d16:	687b      	ldr	r3, [r7, #4]
 8003d18:	2b00      	cmp	r3, #0
 8003d1a:	d101      	bne.n	8003d20 <HAL_TIM_PWM_Init+0x12>
 8003d1c:	2301      	movs	r3, #1
 8003d1e:	e041      	b.n	8003da4 <HAL_TIM_PWM_Init+0x96>
 8003d20:	687b      	ldr	r3, [r7, #4]
 8003d22:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8003d26:	b2db      	uxtb	r3, r3
 8003d28:	2b00      	cmp	r3, #0
 8003d2a:	d106      	bne.n	8003d3a <HAL_TIM_PWM_Init+0x2c>
 8003d2c:	687b      	ldr	r3, [r7, #4]
 8003d2e:	2200      	movs	r2, #0
 8003d30:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003d34:	6878      	ldr	r0, [r7, #4]
 8003d36:	f000 f839 	bl	8003dac <HAL_TIM_PWM_MspInit>
 8003d3a:	687b      	ldr	r3, [r7, #4]
 8003d3c:	2202      	movs	r2, #2
 8003d3e:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003d42:	687b      	ldr	r3, [r7, #4]
 8003d44:	681a      	ldr	r2, [r3, #0]
 8003d46:	687b      	ldr	r3, [r7, #4]
 8003d48:	3304      	adds	r3, #4
 8003d4a:	4619      	mov	r1, r3
 8003d4c:	4610      	mov	r0, r2
 8003d4e:	f000 fd3f 	bl	80047d0 <TIM_Base_SetConfig>
 8003d52:	687b      	ldr	r3, [r7, #4]
 8003d54:	2201      	movs	r2, #1
 8003d56:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8003d5a:	687b      	ldr	r3, [r7, #4]
 8003d5c:	2201      	movs	r2, #1
 8003d5e:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003d62:	687b      	ldr	r3, [r7, #4]
 8003d64:	2201      	movs	r2, #1
 8003d66:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8003d6a:	687b      	ldr	r3, [r7, #4]
 8003d6c:	2201      	movs	r2, #1
 8003d6e:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003d72:	687b      	ldr	r3, [r7, #4]
 8003d74:	2201      	movs	r2, #1
 8003d76:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003d7a:	687b      	ldr	r3, [r7, #4]
 8003d7c:	2201      	movs	r2, #1
 8003d7e:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003d82:	687b      	ldr	r3, [r7, #4]
 8003d84:	2201      	movs	r2, #1
 8003d86:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8003d8a:	687b      	ldr	r3, [r7, #4]
 8003d8c:	2201      	movs	r2, #1
 8003d8e:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8003d92:	687b      	ldr	r3, [r7, #4]
 8003d94:	2201      	movs	r2, #1
 8003d96:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8003d9a:	687b      	ldr	r3, [r7, #4]
 8003d9c:	2201      	movs	r2, #1
 8003d9e:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003da2:	2300      	movs	r3, #0
 8003da4:	4618      	mov	r0, r3
 8003da6:	3708      	adds	r7, #8
 8003da8:	46bd      	mov	sp, r7
 8003daa:	bd80      	pop	{r7, pc}

08003dac <HAL_TIM_PWM_MspInit>:
 8003dac:	b480      	push	{r7}
 8003dae:	b083      	sub	sp, #12
 8003db0:	af00      	add	r7, sp, #0
 8003db2:	6078      	str	r0, [r7, #4]
 8003db4:	bf00      	nop
 8003db6:	370c      	adds	r7, #12
 8003db8:	46bd      	mov	sp, r7
 8003dba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003dbe:	4770      	bx	lr

08003dc0 <HAL_TIM_PWM_Start_DMA>:
 8003dc0:	b580      	push	{r7, lr}
 8003dc2:	b086      	sub	sp, #24
 8003dc4:	af00      	add	r7, sp, #0
 8003dc6:	60f8      	str	r0, [r7, #12]
 8003dc8:	60b9      	str	r1, [r7, #8]
 8003dca:	607a      	str	r2, [r7, #4]
 8003dcc:	807b      	strh	r3, [r7, #2]
 8003dce:	2300      	movs	r3, #0
 8003dd0:	75fb      	strb	r3, [r7, #23]
 8003dd2:	68bb      	ldr	r3, [r7, #8]
 8003dd4:	2b00      	cmp	r3, #0
 8003dd6:	d109      	bne.n	8003dec <HAL_TIM_PWM_Start_DMA+0x2c>
 8003dd8:	68fb      	ldr	r3, [r7, #12]
 8003dda:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 8003dde:	b2db      	uxtb	r3, r3
 8003de0:	2b02      	cmp	r3, #2
 8003de2:	bf0c      	ite	eq
 8003de4:	2301      	moveq	r3, #1
 8003de6:	2300      	movne	r3, #0
 8003de8:	b2db      	uxtb	r3, r3
 8003dea:	e022      	b.n	8003e32 <HAL_TIM_PWM_Start_DMA+0x72>
 8003dec:	68bb      	ldr	r3, [r7, #8]
 8003dee:	2b04      	cmp	r3, #4
 8003df0:	d109      	bne.n	8003e06 <HAL_TIM_PWM_Start_DMA+0x46>
 8003df2:	68fb      	ldr	r3, [r7, #12]
 8003df4:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 8003df8:	b2db      	uxtb	r3, r3
 8003dfa:	2b02      	cmp	r3, #2
 8003dfc:	bf0c      	ite	eq
 8003dfe:	2301      	moveq	r3, #1
 8003e00:	2300      	movne	r3, #0
 8003e02:	b2db      	uxtb	r3, r3
 8003e04:	e015      	b.n	8003e32 <HAL_TIM_PWM_Start_DMA+0x72>
 8003e06:	68bb      	ldr	r3, [r7, #8]
 8003e08:	2b08      	cmp	r3, #8
 8003e0a:	d109      	bne.n	8003e20 <HAL_TIM_PWM_Start_DMA+0x60>
 8003e0c:	68fb      	ldr	r3, [r7, #12]
 8003e0e:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 8003e12:	b2db      	uxtb	r3, r3
 8003e14:	2b02      	cmp	r3, #2
 8003e16:	bf0c      	ite	eq
 8003e18:	2301      	moveq	r3, #1
 8003e1a:	2300      	movne	r3, #0
 8003e1c:	b2db      	uxtb	r3, r3
 8003e1e:	e008      	b.n	8003e32 <HAL_TIM_PWM_Start_DMA+0x72>
 8003e20:	68fb      	ldr	r3, [r7, #12]
 8003e22:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8003e26:	b2db      	uxtb	r3, r3
 8003e28:	2b02      	cmp	r3, #2
 8003e2a:	bf0c      	ite	eq
 8003e2c:	2301      	moveq	r3, #1
 8003e2e:	2300      	movne	r3, #0
 8003e30:	b2db      	uxtb	r3, r3
 8003e32:	2b00      	cmp	r3, #0
 8003e34:	d001      	beq.n	8003e3a <HAL_TIM_PWM_Start_DMA+0x7a>
 8003e36:	2302      	movs	r3, #2
 8003e38:	e171      	b.n	800411e <HAL_TIM_PWM_Start_DMA+0x35e>
 8003e3a:	68bb      	ldr	r3, [r7, #8]
 8003e3c:	2b00      	cmp	r3, #0
 8003e3e:	d109      	bne.n	8003e54 <HAL_TIM_PWM_Start_DMA+0x94>
 8003e40:	68fb      	ldr	r3, [r7, #12]
 8003e42:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 8003e46:	b2db      	uxtb	r3, r3
 8003e48:	2b01      	cmp	r3, #1
 8003e4a:	bf0c      	ite	eq
 8003e4c:	2301      	moveq	r3, #1
 8003e4e:	2300      	movne	r3, #0
 8003e50:	b2db      	uxtb	r3, r3
 8003e52:	e022      	b.n	8003e9a <HAL_TIM_PWM_Start_DMA+0xda>
 8003e54:	68bb      	ldr	r3, [r7, #8]
 8003e56:	2b04      	cmp	r3, #4
 8003e58:	d109      	bne.n	8003e6e <HAL_TIM_PWM_Start_DMA+0xae>
 8003e5a:	68fb      	ldr	r3, [r7, #12]
 8003e5c:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 8003e60:	b2db      	uxtb	r3, r3
 8003e62:	2b01      	cmp	r3, #1
 8003e64:	bf0c      	ite	eq
 8003e66:	2301      	moveq	r3, #1
 8003e68:	2300      	movne	r3, #0
 8003e6a:	b2db      	uxtb	r3, r3
 8003e6c:	e015      	b.n	8003e9a <HAL_TIM_PWM_Start_DMA+0xda>
 8003e6e:	68bb      	ldr	r3, [r7, #8]
 8003e70:	2b08      	cmp	r3, #8
 8003e72:	d109      	bne.n	8003e88 <HAL_TIM_PWM_Start_DMA+0xc8>
 8003e74:	68fb      	ldr	r3, [r7, #12]
 8003e76:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 8003e7a:	b2db      	uxtb	r3, r3
 8003e7c:	2b01      	cmp	r3, #1
 8003e7e:	bf0c      	ite	eq
 8003e80:	2301      	moveq	r3, #1
 8003e82:	2300      	movne	r3, #0
 8003e84:	b2db      	uxtb	r3, r3
 8003e86:	e008      	b.n	8003e9a <HAL_TIM_PWM_Start_DMA+0xda>
 8003e88:	68fb      	ldr	r3, [r7, #12]
 8003e8a:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8003e8e:	b2db      	uxtb	r3, r3
 8003e90:	2b01      	cmp	r3, #1
 8003e92:	bf0c      	ite	eq
 8003e94:	2301      	moveq	r3, #1
 8003e96:	2300      	movne	r3, #0
 8003e98:	b2db      	uxtb	r3, r3
 8003e9a:	2b00      	cmp	r3, #0
 8003e9c:	d024      	beq.n	8003ee8 <HAL_TIM_PWM_Start_DMA+0x128>
 8003e9e:	687b      	ldr	r3, [r7, #4]
 8003ea0:	2b00      	cmp	r3, #0
 8003ea2:	d002      	beq.n	8003eaa <HAL_TIM_PWM_Start_DMA+0xea>
 8003ea4:	887b      	ldrh	r3, [r7, #2]
 8003ea6:	2b00      	cmp	r3, #0
 8003ea8:	d101      	bne.n	8003eae <HAL_TIM_PWM_Start_DMA+0xee>
 8003eaa:	2301      	movs	r3, #1
 8003eac:	e137      	b.n	800411e <HAL_TIM_PWM_Start_DMA+0x35e>
 8003eae:	68bb      	ldr	r3, [r7, #8]
 8003eb0:	2b00      	cmp	r3, #0
 8003eb2:	d104      	bne.n	8003ebe <HAL_TIM_PWM_Start_DMA+0xfe>
 8003eb4:	68fb      	ldr	r3, [r7, #12]
 8003eb6:	2202      	movs	r2, #2
 8003eb8:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003ebc:	e016      	b.n	8003eec <HAL_TIM_PWM_Start_DMA+0x12c>
 8003ebe:	68bb      	ldr	r3, [r7, #8]
 8003ec0:	2b04      	cmp	r3, #4
 8003ec2:	d104      	bne.n	8003ece <HAL_TIM_PWM_Start_DMA+0x10e>
 8003ec4:	68fb      	ldr	r3, [r7, #12]
 8003ec6:	2202      	movs	r2, #2
 8003ec8:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8003ecc:	e00e      	b.n	8003eec <HAL_TIM_PWM_Start_DMA+0x12c>
 8003ece:	68bb      	ldr	r3, [r7, #8]
 8003ed0:	2b08      	cmp	r3, #8
 8003ed2:	d104      	bne.n	8003ede <HAL_TIM_PWM_Start_DMA+0x11e>
 8003ed4:	68fb      	ldr	r3, [r7, #12]
 8003ed6:	2202      	movs	r2, #2
 8003ed8:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003edc:	e006      	b.n	8003eec <HAL_TIM_PWM_Start_DMA+0x12c>
 8003ede:	68fb      	ldr	r3, [r7, #12]
 8003ee0:	2202      	movs	r2, #2
 8003ee2:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003ee6:	e001      	b.n	8003eec <HAL_TIM_PWM_Start_DMA+0x12c>
 8003ee8:	2301      	movs	r3, #1
 8003eea:	e118      	b.n	800411e <HAL_TIM_PWM_Start_DMA+0x35e>
 8003eec:	68bb      	ldr	r3, [r7, #8]
 8003eee:	2b0c      	cmp	r3, #12
 8003ef0:	f200 80ae 	bhi.w	8004050 <HAL_TIM_PWM_Start_DMA+0x290>
 8003ef4:	a201      	add	r2, pc, #4	@ (adr r2, 8003efc <HAL_TIM_PWM_Start_DMA+0x13c>)
 8003ef6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003efa:	bf00      	nop
 8003efc:	08003f31 	.word	0x08003f31
 8003f00:	08004051 	.word	0x08004051
 8003f04:	08004051 	.word	0x08004051
 8003f08:	08004051 	.word	0x08004051
 8003f0c:	08003f79 	.word	0x08003f79
 8003f10:	08004051 	.word	0x08004051
 8003f14:	08004051 	.word	0x08004051
 8003f18:	08004051 	.word	0x08004051
 8003f1c:	08003fc1 	.word	0x08003fc1
 8003f20:	08004051 	.word	0x08004051
 8003f24:	08004051 	.word	0x08004051
 8003f28:	08004051 	.word	0x08004051
 8003f2c:	08004009 	.word	0x08004009
 8003f30:	68fb      	ldr	r3, [r7, #12]
 8003f32:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003f34:	4a7c      	ldr	r2, [pc, #496]	@ (8004128 <HAL_TIM_PWM_Start_DMA+0x368>)
 8003f36:	63da      	str	r2, [r3, #60]	@ 0x3c
 8003f38:	68fb      	ldr	r3, [r7, #12]
 8003f3a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003f3c:	4a7b      	ldr	r2, [pc, #492]	@ (800412c <HAL_TIM_PWM_Start_DMA+0x36c>)
 8003f3e:	641a      	str	r2, [r3, #64]	@ 0x40
 8003f40:	68fb      	ldr	r3, [r7, #12]
 8003f42:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003f44:	4a7a      	ldr	r2, [pc, #488]	@ (8004130 <HAL_TIM_PWM_Start_DMA+0x370>)
 8003f46:	64da      	str	r2, [r3, #76]	@ 0x4c
 8003f48:	68fb      	ldr	r3, [r7, #12]
 8003f4a:	6a58      	ldr	r0, [r3, #36]	@ 0x24
 8003f4c:	6879      	ldr	r1, [r7, #4]
 8003f4e:	68fb      	ldr	r3, [r7, #12]
 8003f50:	681b      	ldr	r3, [r3, #0]
 8003f52:	3334      	adds	r3, #52	@ 0x34
 8003f54:	461a      	mov	r2, r3
 8003f56:	887b      	ldrh	r3, [r7, #2]
 8003f58:	f7fe fda6 	bl	8002aa8 <HAL_DMA_Start_IT>
 8003f5c:	4603      	mov	r3, r0
 8003f5e:	2b00      	cmp	r3, #0
 8003f60:	d001      	beq.n	8003f66 <HAL_TIM_PWM_Start_DMA+0x1a6>
 8003f62:	2301      	movs	r3, #1
 8003f64:	e0db      	b.n	800411e <HAL_TIM_PWM_Start_DMA+0x35e>
 8003f66:	68fb      	ldr	r3, [r7, #12]
 8003f68:	681b      	ldr	r3, [r3, #0]
 8003f6a:	68da      	ldr	r2, [r3, #12]
 8003f6c:	68fb      	ldr	r3, [r7, #12]
 8003f6e:	681b      	ldr	r3, [r3, #0]
 8003f70:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003f74:	60da      	str	r2, [r3, #12]
 8003f76:	e06e      	b.n	8004056 <HAL_TIM_PWM_Start_DMA+0x296>
 8003f78:	68fb      	ldr	r3, [r7, #12]
 8003f7a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003f7c:	4a6a      	ldr	r2, [pc, #424]	@ (8004128 <HAL_TIM_PWM_Start_DMA+0x368>)
 8003f7e:	63da      	str	r2, [r3, #60]	@ 0x3c
 8003f80:	68fb      	ldr	r3, [r7, #12]
 8003f82:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003f84:	4a69      	ldr	r2, [pc, #420]	@ (800412c <HAL_TIM_PWM_Start_DMA+0x36c>)
 8003f86:	641a      	str	r2, [r3, #64]	@ 0x40
 8003f88:	68fb      	ldr	r3, [r7, #12]
 8003f8a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003f8c:	4a68      	ldr	r2, [pc, #416]	@ (8004130 <HAL_TIM_PWM_Start_DMA+0x370>)
 8003f8e:	64da      	str	r2, [r3, #76]	@ 0x4c
 8003f90:	68fb      	ldr	r3, [r7, #12]
 8003f92:	6a98      	ldr	r0, [r3, #40]	@ 0x28
 8003f94:	6879      	ldr	r1, [r7, #4]
 8003f96:	68fb      	ldr	r3, [r7, #12]
 8003f98:	681b      	ldr	r3, [r3, #0]
 8003f9a:	3338      	adds	r3, #56	@ 0x38
 8003f9c:	461a      	mov	r2, r3
 8003f9e:	887b      	ldrh	r3, [r7, #2]
 8003fa0:	f7fe fd82 	bl	8002aa8 <HAL_DMA_Start_IT>
 8003fa4:	4603      	mov	r3, r0
 8003fa6:	2b00      	cmp	r3, #0
 8003fa8:	d001      	beq.n	8003fae <HAL_TIM_PWM_Start_DMA+0x1ee>
 8003faa:	2301      	movs	r3, #1
 8003fac:	e0b7      	b.n	800411e <HAL_TIM_PWM_Start_DMA+0x35e>
 8003fae:	68fb      	ldr	r3, [r7, #12]
 8003fb0:	681b      	ldr	r3, [r3, #0]
 8003fb2:	68da      	ldr	r2, [r3, #12]
 8003fb4:	68fb      	ldr	r3, [r7, #12]
 8003fb6:	681b      	ldr	r3, [r3, #0]
 8003fb8:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8003fbc:	60da      	str	r2, [r3, #12]
 8003fbe:	e04a      	b.n	8004056 <HAL_TIM_PWM_Start_DMA+0x296>
 8003fc0:	68fb      	ldr	r3, [r7, #12]
 8003fc2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003fc4:	4a58      	ldr	r2, [pc, #352]	@ (8004128 <HAL_TIM_PWM_Start_DMA+0x368>)
 8003fc6:	63da      	str	r2, [r3, #60]	@ 0x3c
 8003fc8:	68fb      	ldr	r3, [r7, #12]
 8003fca:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003fcc:	4a57      	ldr	r2, [pc, #348]	@ (800412c <HAL_TIM_PWM_Start_DMA+0x36c>)
 8003fce:	641a      	str	r2, [r3, #64]	@ 0x40
 8003fd0:	68fb      	ldr	r3, [r7, #12]
 8003fd2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003fd4:	4a56      	ldr	r2, [pc, #344]	@ (8004130 <HAL_TIM_PWM_Start_DMA+0x370>)
 8003fd6:	64da      	str	r2, [r3, #76]	@ 0x4c
 8003fd8:	68fb      	ldr	r3, [r7, #12]
 8003fda:	6ad8      	ldr	r0, [r3, #44]	@ 0x2c
 8003fdc:	6879      	ldr	r1, [r7, #4]
 8003fde:	68fb      	ldr	r3, [r7, #12]
 8003fe0:	681b      	ldr	r3, [r3, #0]
 8003fe2:	333c      	adds	r3, #60	@ 0x3c
 8003fe4:	461a      	mov	r2, r3
 8003fe6:	887b      	ldrh	r3, [r7, #2]
 8003fe8:	f7fe fd5e 	bl	8002aa8 <HAL_DMA_Start_IT>
 8003fec:	4603      	mov	r3, r0
 8003fee:	2b00      	cmp	r3, #0
 8003ff0:	d001      	beq.n	8003ff6 <HAL_TIM_PWM_Start_DMA+0x236>
 8003ff2:	2301      	movs	r3, #1
 8003ff4:	e093      	b.n	800411e <HAL_TIM_PWM_Start_DMA+0x35e>
 8003ff6:	68fb      	ldr	r3, [r7, #12]
 8003ff8:	681b      	ldr	r3, [r3, #0]
 8003ffa:	68da      	ldr	r2, [r3, #12]
 8003ffc:	68fb      	ldr	r3, [r7, #12]
 8003ffe:	681b      	ldr	r3, [r3, #0]
 8004000:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8004004:	60da      	str	r2, [r3, #12]
 8004006:	e026      	b.n	8004056 <HAL_TIM_PWM_Start_DMA+0x296>
 8004008:	68fb      	ldr	r3, [r7, #12]
 800400a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800400c:	4a46      	ldr	r2, [pc, #280]	@ (8004128 <HAL_TIM_PWM_Start_DMA+0x368>)
 800400e:	63da      	str	r2, [r3, #60]	@ 0x3c
 8004010:	68fb      	ldr	r3, [r7, #12]
 8004012:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004014:	4a45      	ldr	r2, [pc, #276]	@ (800412c <HAL_TIM_PWM_Start_DMA+0x36c>)
 8004016:	641a      	str	r2, [r3, #64]	@ 0x40
 8004018:	68fb      	ldr	r3, [r7, #12]
 800401a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800401c:	4a44      	ldr	r2, [pc, #272]	@ (8004130 <HAL_TIM_PWM_Start_DMA+0x370>)
 800401e:	64da      	str	r2, [r3, #76]	@ 0x4c
 8004020:	68fb      	ldr	r3, [r7, #12]
 8004022:	6b18      	ldr	r0, [r3, #48]	@ 0x30
 8004024:	6879      	ldr	r1, [r7, #4]
 8004026:	68fb      	ldr	r3, [r7, #12]
 8004028:	681b      	ldr	r3, [r3, #0]
 800402a:	3340      	adds	r3, #64	@ 0x40
 800402c:	461a      	mov	r2, r3
 800402e:	887b      	ldrh	r3, [r7, #2]
 8004030:	f7fe fd3a 	bl	8002aa8 <HAL_DMA_Start_IT>
 8004034:	4603      	mov	r3, r0
 8004036:	2b00      	cmp	r3, #0
 8004038:	d001      	beq.n	800403e <HAL_TIM_PWM_Start_DMA+0x27e>
 800403a:	2301      	movs	r3, #1
 800403c:	e06f      	b.n	800411e <HAL_TIM_PWM_Start_DMA+0x35e>
 800403e:	68fb      	ldr	r3, [r7, #12]
 8004040:	681b      	ldr	r3, [r3, #0]
 8004042:	68da      	ldr	r2, [r3, #12]
 8004044:	68fb      	ldr	r3, [r7, #12]
 8004046:	681b      	ldr	r3, [r3, #0]
 8004048:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 800404c:	60da      	str	r2, [r3, #12]
 800404e:	e002      	b.n	8004056 <HAL_TIM_PWM_Start_DMA+0x296>
 8004050:	2301      	movs	r3, #1
 8004052:	75fb      	strb	r3, [r7, #23]
 8004054:	bf00      	nop
 8004056:	7dfb      	ldrb	r3, [r7, #23]
 8004058:	2b00      	cmp	r3, #0
 800405a:	d15f      	bne.n	800411c <HAL_TIM_PWM_Start_DMA+0x35c>
 800405c:	68fb      	ldr	r3, [r7, #12]
 800405e:	681b      	ldr	r3, [r3, #0]
 8004060:	2201      	movs	r2, #1
 8004062:	68b9      	ldr	r1, [r7, #8]
 8004064:	4618      	mov	r0, r3
 8004066:	f000 fea3 	bl	8004db0 <TIM_CCxChannelCmd>
 800406a:	68fb      	ldr	r3, [r7, #12]
 800406c:	681b      	ldr	r3, [r3, #0]
 800406e:	4a31      	ldr	r2, [pc, #196]	@ (8004134 <HAL_TIM_PWM_Start_DMA+0x374>)
 8004070:	4293      	cmp	r3, r2
 8004072:	d004      	beq.n	800407e <HAL_TIM_PWM_Start_DMA+0x2be>
 8004074:	68fb      	ldr	r3, [r7, #12]
 8004076:	681b      	ldr	r3, [r3, #0]
 8004078:	4a2f      	ldr	r2, [pc, #188]	@ (8004138 <HAL_TIM_PWM_Start_DMA+0x378>)
 800407a:	4293      	cmp	r3, r2
 800407c:	d101      	bne.n	8004082 <HAL_TIM_PWM_Start_DMA+0x2c2>
 800407e:	2301      	movs	r3, #1
 8004080:	e000      	b.n	8004084 <HAL_TIM_PWM_Start_DMA+0x2c4>
 8004082:	2300      	movs	r3, #0
 8004084:	2b00      	cmp	r3, #0
 8004086:	d007      	beq.n	8004098 <HAL_TIM_PWM_Start_DMA+0x2d8>
 8004088:	68fb      	ldr	r3, [r7, #12]
 800408a:	681b      	ldr	r3, [r3, #0]
 800408c:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 800408e:	68fb      	ldr	r3, [r7, #12]
 8004090:	681b      	ldr	r3, [r3, #0]
 8004092:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8004096:	645a      	str	r2, [r3, #68]	@ 0x44
 8004098:	68fb      	ldr	r3, [r7, #12]
 800409a:	681b      	ldr	r3, [r3, #0]
 800409c:	4a25      	ldr	r2, [pc, #148]	@ (8004134 <HAL_TIM_PWM_Start_DMA+0x374>)
 800409e:	4293      	cmp	r3, r2
 80040a0:	d022      	beq.n	80040e8 <HAL_TIM_PWM_Start_DMA+0x328>
 80040a2:	68fb      	ldr	r3, [r7, #12]
 80040a4:	681b      	ldr	r3, [r3, #0]
 80040a6:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80040aa:	d01d      	beq.n	80040e8 <HAL_TIM_PWM_Start_DMA+0x328>
 80040ac:	68fb      	ldr	r3, [r7, #12]
 80040ae:	681b      	ldr	r3, [r3, #0]
 80040b0:	4a22      	ldr	r2, [pc, #136]	@ (800413c <HAL_TIM_PWM_Start_DMA+0x37c>)
 80040b2:	4293      	cmp	r3, r2
 80040b4:	d018      	beq.n	80040e8 <HAL_TIM_PWM_Start_DMA+0x328>
 80040b6:	68fb      	ldr	r3, [r7, #12]
 80040b8:	681b      	ldr	r3, [r3, #0]
 80040ba:	4a21      	ldr	r2, [pc, #132]	@ (8004140 <HAL_TIM_PWM_Start_DMA+0x380>)
 80040bc:	4293      	cmp	r3, r2
 80040be:	d013      	beq.n	80040e8 <HAL_TIM_PWM_Start_DMA+0x328>
 80040c0:	68fb      	ldr	r3, [r7, #12]
 80040c2:	681b      	ldr	r3, [r3, #0]
 80040c4:	4a1f      	ldr	r2, [pc, #124]	@ (8004144 <HAL_TIM_PWM_Start_DMA+0x384>)
 80040c6:	4293      	cmp	r3, r2
 80040c8:	d00e      	beq.n	80040e8 <HAL_TIM_PWM_Start_DMA+0x328>
 80040ca:	68fb      	ldr	r3, [r7, #12]
 80040cc:	681b      	ldr	r3, [r3, #0]
 80040ce:	4a1a      	ldr	r2, [pc, #104]	@ (8004138 <HAL_TIM_PWM_Start_DMA+0x378>)
 80040d0:	4293      	cmp	r3, r2
 80040d2:	d009      	beq.n	80040e8 <HAL_TIM_PWM_Start_DMA+0x328>
 80040d4:	68fb      	ldr	r3, [r7, #12]
 80040d6:	681b      	ldr	r3, [r3, #0]
 80040d8:	4a1b      	ldr	r2, [pc, #108]	@ (8004148 <HAL_TIM_PWM_Start_DMA+0x388>)
 80040da:	4293      	cmp	r3, r2
 80040dc:	d004      	beq.n	80040e8 <HAL_TIM_PWM_Start_DMA+0x328>
 80040de:	68fb      	ldr	r3, [r7, #12]
 80040e0:	681b      	ldr	r3, [r3, #0]
 80040e2:	4a1a      	ldr	r2, [pc, #104]	@ (800414c <HAL_TIM_PWM_Start_DMA+0x38c>)
 80040e4:	4293      	cmp	r3, r2
 80040e6:	d111      	bne.n	800410c <HAL_TIM_PWM_Start_DMA+0x34c>
 80040e8:	68fb      	ldr	r3, [r7, #12]
 80040ea:	681b      	ldr	r3, [r3, #0]
 80040ec:	689b      	ldr	r3, [r3, #8]
 80040ee:	f003 0307 	and.w	r3, r3, #7
 80040f2:	613b      	str	r3, [r7, #16]
 80040f4:	693b      	ldr	r3, [r7, #16]
 80040f6:	2b06      	cmp	r3, #6
 80040f8:	d010      	beq.n	800411c <HAL_TIM_PWM_Start_DMA+0x35c>
 80040fa:	68fb      	ldr	r3, [r7, #12]
 80040fc:	681b      	ldr	r3, [r3, #0]
 80040fe:	681a      	ldr	r2, [r3, #0]
 8004100:	68fb      	ldr	r3, [r7, #12]
 8004102:	681b      	ldr	r3, [r3, #0]
 8004104:	f042 0201 	orr.w	r2, r2, #1
 8004108:	601a      	str	r2, [r3, #0]
 800410a:	e007      	b.n	800411c <HAL_TIM_PWM_Start_DMA+0x35c>
 800410c:	68fb      	ldr	r3, [r7, #12]
 800410e:	681b      	ldr	r3, [r3, #0]
 8004110:	681a      	ldr	r2, [r3, #0]
 8004112:	68fb      	ldr	r3, [r7, #12]
 8004114:	681b      	ldr	r3, [r3, #0]
 8004116:	f042 0201 	orr.w	r2, r2, #1
 800411a:	601a      	str	r2, [r3, #0]
 800411c:	7dfb      	ldrb	r3, [r7, #23]
 800411e:	4618      	mov	r0, r3
 8004120:	3718      	adds	r7, #24
 8004122:	46bd      	mov	sp, r7
 8004124:	bd80      	pop	{r7, pc}
 8004126:	bf00      	nop
 8004128:	080046c1 	.word	0x080046c1
 800412c:	08004769 	.word	0x08004769
 8004130:	0800462f 	.word	0x0800462f
 8004134:	40010000 	.word	0x40010000
 8004138:	40010400 	.word	0x40010400
 800413c:	40000400 	.word	0x40000400
 8004140:	40000800 	.word	0x40000800
 8004144:	40000c00 	.word	0x40000c00
 8004148:	40014000 	.word	0x40014000
 800414c:	40001800 	.word	0x40001800

08004150 <HAL_TIM_PWM_Stop_DMA>:
 8004150:	b580      	push	{r7, lr}
 8004152:	b084      	sub	sp, #16
 8004154:	af00      	add	r7, sp, #0
 8004156:	6078      	str	r0, [r7, #4]
 8004158:	6039      	str	r1, [r7, #0]
 800415a:	2300      	movs	r3, #0
 800415c:	73fb      	strb	r3, [r7, #15]
 800415e:	683b      	ldr	r3, [r7, #0]
 8004160:	2b0c      	cmp	r3, #12
 8004162:	d855      	bhi.n	8004210 <HAL_TIM_PWM_Stop_DMA+0xc0>
 8004164:	a201      	add	r2, pc, #4	@ (adr r2, 800416c <HAL_TIM_PWM_Stop_DMA+0x1c>)
 8004166:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800416a:	bf00      	nop
 800416c:	080041a1 	.word	0x080041a1
 8004170:	08004211 	.word	0x08004211
 8004174:	08004211 	.word	0x08004211
 8004178:	08004211 	.word	0x08004211
 800417c:	080041bd 	.word	0x080041bd
 8004180:	08004211 	.word	0x08004211
 8004184:	08004211 	.word	0x08004211
 8004188:	08004211 	.word	0x08004211
 800418c:	080041d9 	.word	0x080041d9
 8004190:	08004211 	.word	0x08004211
 8004194:	08004211 	.word	0x08004211
 8004198:	08004211 	.word	0x08004211
 800419c:	080041f5 	.word	0x080041f5
 80041a0:	687b      	ldr	r3, [r7, #4]
 80041a2:	681b      	ldr	r3, [r3, #0]
 80041a4:	68da      	ldr	r2, [r3, #12]
 80041a6:	687b      	ldr	r3, [r7, #4]
 80041a8:	681b      	ldr	r3, [r3, #0]
 80041aa:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 80041ae:	60da      	str	r2, [r3, #12]
 80041b0:	687b      	ldr	r3, [r7, #4]
 80041b2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80041b4:	4618      	mov	r0, r3
 80041b6:	f7fe fccf 	bl	8002b58 <HAL_DMA_Abort_IT>
 80041ba:	e02c      	b.n	8004216 <HAL_TIM_PWM_Stop_DMA+0xc6>
 80041bc:	687b      	ldr	r3, [r7, #4]
 80041be:	681b      	ldr	r3, [r3, #0]
 80041c0:	68da      	ldr	r2, [r3, #12]
 80041c2:	687b      	ldr	r3, [r7, #4]
 80041c4:	681b      	ldr	r3, [r3, #0]
 80041c6:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80041ca:	60da      	str	r2, [r3, #12]
 80041cc:	687b      	ldr	r3, [r7, #4]
 80041ce:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80041d0:	4618      	mov	r0, r3
 80041d2:	f7fe fcc1 	bl	8002b58 <HAL_DMA_Abort_IT>
 80041d6:	e01e      	b.n	8004216 <HAL_TIM_PWM_Stop_DMA+0xc6>
 80041d8:	687b      	ldr	r3, [r7, #4]
 80041da:	681b      	ldr	r3, [r3, #0]
 80041dc:	68da      	ldr	r2, [r3, #12]
 80041de:	687b      	ldr	r3, [r7, #4]
 80041e0:	681b      	ldr	r3, [r3, #0]
 80041e2:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 80041e6:	60da      	str	r2, [r3, #12]
 80041e8:	687b      	ldr	r3, [r7, #4]
 80041ea:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80041ec:	4618      	mov	r0, r3
 80041ee:	f7fe fcb3 	bl	8002b58 <HAL_DMA_Abort_IT>
 80041f2:	e010      	b.n	8004216 <HAL_TIM_PWM_Stop_DMA+0xc6>
 80041f4:	687b      	ldr	r3, [r7, #4]
 80041f6:	681b      	ldr	r3, [r3, #0]
 80041f8:	68da      	ldr	r2, [r3, #12]
 80041fa:	687b      	ldr	r3, [r7, #4]
 80041fc:	681b      	ldr	r3, [r3, #0]
 80041fe:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 8004202:	60da      	str	r2, [r3, #12]
 8004204:	687b      	ldr	r3, [r7, #4]
 8004206:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004208:	4618      	mov	r0, r3
 800420a:	f7fe fca5 	bl	8002b58 <HAL_DMA_Abort_IT>
 800420e:	e002      	b.n	8004216 <HAL_TIM_PWM_Stop_DMA+0xc6>
 8004210:	2301      	movs	r3, #1
 8004212:	73fb      	strb	r3, [r7, #15]
 8004214:	bf00      	nop
 8004216:	7bfb      	ldrb	r3, [r7, #15]
 8004218:	2b00      	cmp	r3, #0
 800421a:	d161      	bne.n	80042e0 <HAL_TIM_PWM_Stop_DMA+0x190>
 800421c:	687b      	ldr	r3, [r7, #4]
 800421e:	681b      	ldr	r3, [r3, #0]
 8004220:	2200      	movs	r2, #0
 8004222:	6839      	ldr	r1, [r7, #0]
 8004224:	4618      	mov	r0, r3
 8004226:	f000 fdc3 	bl	8004db0 <TIM_CCxChannelCmd>
 800422a:	687b      	ldr	r3, [r7, #4]
 800422c:	681b      	ldr	r3, [r3, #0]
 800422e:	4a2f      	ldr	r2, [pc, #188]	@ (80042ec <HAL_TIM_PWM_Stop_DMA+0x19c>)
 8004230:	4293      	cmp	r3, r2
 8004232:	d004      	beq.n	800423e <HAL_TIM_PWM_Stop_DMA+0xee>
 8004234:	687b      	ldr	r3, [r7, #4]
 8004236:	681b      	ldr	r3, [r3, #0]
 8004238:	4a2d      	ldr	r2, [pc, #180]	@ (80042f0 <HAL_TIM_PWM_Stop_DMA+0x1a0>)
 800423a:	4293      	cmp	r3, r2
 800423c:	d101      	bne.n	8004242 <HAL_TIM_PWM_Stop_DMA+0xf2>
 800423e:	2301      	movs	r3, #1
 8004240:	e000      	b.n	8004244 <HAL_TIM_PWM_Stop_DMA+0xf4>
 8004242:	2300      	movs	r3, #0
 8004244:	2b00      	cmp	r3, #0
 8004246:	d017      	beq.n	8004278 <HAL_TIM_PWM_Stop_DMA+0x128>
 8004248:	687b      	ldr	r3, [r7, #4]
 800424a:	681b      	ldr	r3, [r3, #0]
 800424c:	6a1a      	ldr	r2, [r3, #32]
 800424e:	f241 1311 	movw	r3, #4369	@ 0x1111
 8004252:	4013      	ands	r3, r2
 8004254:	2b00      	cmp	r3, #0
 8004256:	d10f      	bne.n	8004278 <HAL_TIM_PWM_Stop_DMA+0x128>
 8004258:	687b      	ldr	r3, [r7, #4]
 800425a:	681b      	ldr	r3, [r3, #0]
 800425c:	6a1a      	ldr	r2, [r3, #32]
 800425e:	f240 4344 	movw	r3, #1092	@ 0x444
 8004262:	4013      	ands	r3, r2
 8004264:	2b00      	cmp	r3, #0
 8004266:	d107      	bne.n	8004278 <HAL_TIM_PWM_Stop_DMA+0x128>
 8004268:	687b      	ldr	r3, [r7, #4]
 800426a:	681b      	ldr	r3, [r3, #0]
 800426c:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 800426e:	687b      	ldr	r3, [r7, #4]
 8004270:	681b      	ldr	r3, [r3, #0]
 8004272:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8004276:	645a      	str	r2, [r3, #68]	@ 0x44
 8004278:	687b      	ldr	r3, [r7, #4]
 800427a:	681b      	ldr	r3, [r3, #0]
 800427c:	6a1a      	ldr	r2, [r3, #32]
 800427e:	f241 1311 	movw	r3, #4369	@ 0x1111
 8004282:	4013      	ands	r3, r2
 8004284:	2b00      	cmp	r3, #0
 8004286:	d10f      	bne.n	80042a8 <HAL_TIM_PWM_Stop_DMA+0x158>
 8004288:	687b      	ldr	r3, [r7, #4]
 800428a:	681b      	ldr	r3, [r3, #0]
 800428c:	6a1a      	ldr	r2, [r3, #32]
 800428e:	f240 4344 	movw	r3, #1092	@ 0x444
 8004292:	4013      	ands	r3, r2
 8004294:	2b00      	cmp	r3, #0
 8004296:	d107      	bne.n	80042a8 <HAL_TIM_PWM_Stop_DMA+0x158>
 8004298:	687b      	ldr	r3, [r7, #4]
 800429a:	681b      	ldr	r3, [r3, #0]
 800429c:	681a      	ldr	r2, [r3, #0]
 800429e:	687b      	ldr	r3, [r7, #4]
 80042a0:	681b      	ldr	r3, [r3, #0]
 80042a2:	f022 0201 	bic.w	r2, r2, #1
 80042a6:	601a      	str	r2, [r3, #0]
 80042a8:	683b      	ldr	r3, [r7, #0]
 80042aa:	2b00      	cmp	r3, #0
 80042ac:	d104      	bne.n	80042b8 <HAL_TIM_PWM_Stop_DMA+0x168>
 80042ae:	687b      	ldr	r3, [r7, #4]
 80042b0:	2201      	movs	r2, #1
 80042b2:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80042b6:	e013      	b.n	80042e0 <HAL_TIM_PWM_Stop_DMA+0x190>
 80042b8:	683b      	ldr	r3, [r7, #0]
 80042ba:	2b04      	cmp	r3, #4
 80042bc:	d104      	bne.n	80042c8 <HAL_TIM_PWM_Stop_DMA+0x178>
 80042be:	687b      	ldr	r3, [r7, #4]
 80042c0:	2201      	movs	r2, #1
 80042c2:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 80042c6:	e00b      	b.n	80042e0 <HAL_TIM_PWM_Stop_DMA+0x190>
 80042c8:	683b      	ldr	r3, [r7, #0]
 80042ca:	2b08      	cmp	r3, #8
 80042cc:	d104      	bne.n	80042d8 <HAL_TIM_PWM_Stop_DMA+0x188>
 80042ce:	687b      	ldr	r3, [r7, #4]
 80042d0:	2201      	movs	r2, #1
 80042d2:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80042d6:	e003      	b.n	80042e0 <HAL_TIM_PWM_Stop_DMA+0x190>
 80042d8:	687b      	ldr	r3, [r7, #4]
 80042da:	2201      	movs	r2, #1
 80042dc:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80042e0:	7bfb      	ldrb	r3, [r7, #15]
 80042e2:	4618      	mov	r0, r3
 80042e4:	3710      	adds	r7, #16
 80042e6:	46bd      	mov	sp, r7
 80042e8:	bd80      	pop	{r7, pc}
 80042ea:	bf00      	nop
 80042ec:	40010000 	.word	0x40010000
 80042f0:	40010400 	.word	0x40010400

080042f4 <HAL_TIM_PWM_ConfigChannel>:
 80042f4:	b580      	push	{r7, lr}
 80042f6:	b086      	sub	sp, #24
 80042f8:	af00      	add	r7, sp, #0
 80042fa:	60f8      	str	r0, [r7, #12]
 80042fc:	60b9      	str	r1, [r7, #8]
 80042fe:	607a      	str	r2, [r7, #4]
 8004300:	2300      	movs	r3, #0
 8004302:	75fb      	strb	r3, [r7, #23]
 8004304:	68fb      	ldr	r3, [r7, #12]
 8004306:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800430a:	2b01      	cmp	r3, #1
 800430c:	d101      	bne.n	8004312 <HAL_TIM_PWM_ConfigChannel+0x1e>
 800430e:	2302      	movs	r3, #2
 8004310:	e0ae      	b.n	8004470 <HAL_TIM_PWM_ConfigChannel+0x17c>
 8004312:	68fb      	ldr	r3, [r7, #12]
 8004314:	2201      	movs	r2, #1
 8004316:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800431a:	687b      	ldr	r3, [r7, #4]
 800431c:	2b0c      	cmp	r3, #12
 800431e:	f200 809f 	bhi.w	8004460 <HAL_TIM_PWM_ConfigChannel+0x16c>
 8004322:	a201      	add	r2, pc, #4	@ (adr r2, 8004328 <HAL_TIM_PWM_ConfigChannel+0x34>)
 8004324:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004328:	0800435d 	.word	0x0800435d
 800432c:	08004461 	.word	0x08004461
 8004330:	08004461 	.word	0x08004461
 8004334:	08004461 	.word	0x08004461
 8004338:	0800439d 	.word	0x0800439d
 800433c:	08004461 	.word	0x08004461
 8004340:	08004461 	.word	0x08004461
 8004344:	08004461 	.word	0x08004461
 8004348:	080043df 	.word	0x080043df
 800434c:	08004461 	.word	0x08004461
 8004350:	08004461 	.word	0x08004461
 8004354:	08004461 	.word	0x08004461
 8004358:	0800441f 	.word	0x0800441f
 800435c:	68fb      	ldr	r3, [r7, #12]
 800435e:	681b      	ldr	r3, [r3, #0]
 8004360:	68b9      	ldr	r1, [r7, #8]
 8004362:	4618      	mov	r0, r3
 8004364:	f000 fada 	bl	800491c <TIM_OC1_SetConfig>
 8004368:	68fb      	ldr	r3, [r7, #12]
 800436a:	681b      	ldr	r3, [r3, #0]
 800436c:	699a      	ldr	r2, [r3, #24]
 800436e:	68fb      	ldr	r3, [r7, #12]
 8004370:	681b      	ldr	r3, [r3, #0]
 8004372:	f042 0208 	orr.w	r2, r2, #8
 8004376:	619a      	str	r2, [r3, #24]
 8004378:	68fb      	ldr	r3, [r7, #12]
 800437a:	681b      	ldr	r3, [r3, #0]
 800437c:	699a      	ldr	r2, [r3, #24]
 800437e:	68fb      	ldr	r3, [r7, #12]
 8004380:	681b      	ldr	r3, [r3, #0]
 8004382:	f022 0204 	bic.w	r2, r2, #4
 8004386:	619a      	str	r2, [r3, #24]
 8004388:	68fb      	ldr	r3, [r7, #12]
 800438a:	681b      	ldr	r3, [r3, #0]
 800438c:	6999      	ldr	r1, [r3, #24]
 800438e:	68bb      	ldr	r3, [r7, #8]
 8004390:	691a      	ldr	r2, [r3, #16]
 8004392:	68fb      	ldr	r3, [r7, #12]
 8004394:	681b      	ldr	r3, [r3, #0]
 8004396:	430a      	orrs	r2, r1
 8004398:	619a      	str	r2, [r3, #24]
 800439a:	e064      	b.n	8004466 <HAL_TIM_PWM_ConfigChannel+0x172>
 800439c:	68fb      	ldr	r3, [r7, #12]
 800439e:	681b      	ldr	r3, [r3, #0]
 80043a0:	68b9      	ldr	r1, [r7, #8]
 80043a2:	4618      	mov	r0, r3
 80043a4:	f000 fb2a 	bl	80049fc <TIM_OC2_SetConfig>
 80043a8:	68fb      	ldr	r3, [r7, #12]
 80043aa:	681b      	ldr	r3, [r3, #0]
 80043ac:	699a      	ldr	r2, [r3, #24]
 80043ae:	68fb      	ldr	r3, [r7, #12]
 80043b0:	681b      	ldr	r3, [r3, #0]
 80043b2:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 80043b6:	619a      	str	r2, [r3, #24]
 80043b8:	68fb      	ldr	r3, [r7, #12]
 80043ba:	681b      	ldr	r3, [r3, #0]
 80043bc:	699a      	ldr	r2, [r3, #24]
 80043be:	68fb      	ldr	r3, [r7, #12]
 80043c0:	681b      	ldr	r3, [r3, #0]
 80043c2:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80043c6:	619a      	str	r2, [r3, #24]
 80043c8:	68fb      	ldr	r3, [r7, #12]
 80043ca:	681b      	ldr	r3, [r3, #0]
 80043cc:	6999      	ldr	r1, [r3, #24]
 80043ce:	68bb      	ldr	r3, [r7, #8]
 80043d0:	691b      	ldr	r3, [r3, #16]
 80043d2:	021a      	lsls	r2, r3, #8
 80043d4:	68fb      	ldr	r3, [r7, #12]
 80043d6:	681b      	ldr	r3, [r3, #0]
 80043d8:	430a      	orrs	r2, r1
 80043da:	619a      	str	r2, [r3, #24]
 80043dc:	e043      	b.n	8004466 <HAL_TIM_PWM_ConfigChannel+0x172>
 80043de:	68fb      	ldr	r3, [r7, #12]
 80043e0:	681b      	ldr	r3, [r3, #0]
 80043e2:	68b9      	ldr	r1, [r7, #8]
 80043e4:	4618      	mov	r0, r3
 80043e6:	f000 fb7f 	bl	8004ae8 <TIM_OC3_SetConfig>
 80043ea:	68fb      	ldr	r3, [r7, #12]
 80043ec:	681b      	ldr	r3, [r3, #0]
 80043ee:	69da      	ldr	r2, [r3, #28]
 80043f0:	68fb      	ldr	r3, [r7, #12]
 80043f2:	681b      	ldr	r3, [r3, #0]
 80043f4:	f042 0208 	orr.w	r2, r2, #8
 80043f8:	61da      	str	r2, [r3, #28]
 80043fa:	68fb      	ldr	r3, [r7, #12]
 80043fc:	681b      	ldr	r3, [r3, #0]
 80043fe:	69da      	ldr	r2, [r3, #28]
 8004400:	68fb      	ldr	r3, [r7, #12]
 8004402:	681b      	ldr	r3, [r3, #0]
 8004404:	f022 0204 	bic.w	r2, r2, #4
 8004408:	61da      	str	r2, [r3, #28]
 800440a:	68fb      	ldr	r3, [r7, #12]
 800440c:	681b      	ldr	r3, [r3, #0]
 800440e:	69d9      	ldr	r1, [r3, #28]
 8004410:	68bb      	ldr	r3, [r7, #8]
 8004412:	691a      	ldr	r2, [r3, #16]
 8004414:	68fb      	ldr	r3, [r7, #12]
 8004416:	681b      	ldr	r3, [r3, #0]
 8004418:	430a      	orrs	r2, r1
 800441a:	61da      	str	r2, [r3, #28]
 800441c:	e023      	b.n	8004466 <HAL_TIM_PWM_ConfigChannel+0x172>
 800441e:	68fb      	ldr	r3, [r7, #12]
 8004420:	681b      	ldr	r3, [r3, #0]
 8004422:	68b9      	ldr	r1, [r7, #8]
 8004424:	4618      	mov	r0, r3
 8004426:	f000 fbd3 	bl	8004bd0 <TIM_OC4_SetConfig>
 800442a:	68fb      	ldr	r3, [r7, #12]
 800442c:	681b      	ldr	r3, [r3, #0]
 800442e:	69da      	ldr	r2, [r3, #28]
 8004430:	68fb      	ldr	r3, [r7, #12]
 8004432:	681b      	ldr	r3, [r3, #0]
 8004434:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8004438:	61da      	str	r2, [r3, #28]
 800443a:	68fb      	ldr	r3, [r7, #12]
 800443c:	681b      	ldr	r3, [r3, #0]
 800443e:	69da      	ldr	r2, [r3, #28]
 8004440:	68fb      	ldr	r3, [r7, #12]
 8004442:	681b      	ldr	r3, [r3, #0]
 8004444:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004448:	61da      	str	r2, [r3, #28]
 800444a:	68fb      	ldr	r3, [r7, #12]
 800444c:	681b      	ldr	r3, [r3, #0]
 800444e:	69d9      	ldr	r1, [r3, #28]
 8004450:	68bb      	ldr	r3, [r7, #8]
 8004452:	691b      	ldr	r3, [r3, #16]
 8004454:	021a      	lsls	r2, r3, #8
 8004456:	68fb      	ldr	r3, [r7, #12]
 8004458:	681b      	ldr	r3, [r3, #0]
 800445a:	430a      	orrs	r2, r1
 800445c:	61da      	str	r2, [r3, #28]
 800445e:	e002      	b.n	8004466 <HAL_TIM_PWM_ConfigChannel+0x172>
 8004460:	2301      	movs	r3, #1
 8004462:	75fb      	strb	r3, [r7, #23]
 8004464:	bf00      	nop
 8004466:	68fb      	ldr	r3, [r7, #12]
 8004468:	2200      	movs	r2, #0
 800446a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800446e:	7dfb      	ldrb	r3, [r7, #23]
 8004470:	4618      	mov	r0, r3
 8004472:	3718      	adds	r7, #24
 8004474:	46bd      	mov	sp, r7
 8004476:	bd80      	pop	{r7, pc}

08004478 <HAL_TIM_ConfigClockSource>:
 8004478:	b580      	push	{r7, lr}
 800447a:	b084      	sub	sp, #16
 800447c:	af00      	add	r7, sp, #0
 800447e:	6078      	str	r0, [r7, #4]
 8004480:	6039      	str	r1, [r7, #0]
 8004482:	2300      	movs	r3, #0
 8004484:	73fb      	strb	r3, [r7, #15]
 8004486:	687b      	ldr	r3, [r7, #4]
 8004488:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800448c:	2b01      	cmp	r3, #1
 800448e:	d101      	bne.n	8004494 <HAL_TIM_ConfigClockSource+0x1c>
 8004490:	2302      	movs	r3, #2
 8004492:	e0b4      	b.n	80045fe <HAL_TIM_ConfigClockSource+0x186>
 8004494:	687b      	ldr	r3, [r7, #4]
 8004496:	2201      	movs	r2, #1
 8004498:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800449c:	687b      	ldr	r3, [r7, #4]
 800449e:	2202      	movs	r2, #2
 80044a0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80044a4:	687b      	ldr	r3, [r7, #4]
 80044a6:	681b      	ldr	r3, [r3, #0]
 80044a8:	689b      	ldr	r3, [r3, #8]
 80044aa:	60bb      	str	r3, [r7, #8]
 80044ac:	68bb      	ldr	r3, [r7, #8]
 80044ae:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 80044b2:	60bb      	str	r3, [r7, #8]
 80044b4:	68bb      	ldr	r3, [r7, #8]
 80044b6:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 80044ba:	60bb      	str	r3, [r7, #8]
 80044bc:	687b      	ldr	r3, [r7, #4]
 80044be:	681b      	ldr	r3, [r3, #0]
 80044c0:	68ba      	ldr	r2, [r7, #8]
 80044c2:	609a      	str	r2, [r3, #8]
 80044c4:	683b      	ldr	r3, [r7, #0]
 80044c6:	681b      	ldr	r3, [r3, #0]
 80044c8:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80044cc:	d03e      	beq.n	800454c <HAL_TIM_ConfigClockSource+0xd4>
 80044ce:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80044d2:	f200 8087 	bhi.w	80045e4 <HAL_TIM_ConfigClockSource+0x16c>
 80044d6:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80044da:	f000 8086 	beq.w	80045ea <HAL_TIM_ConfigClockSource+0x172>
 80044de:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80044e2:	d87f      	bhi.n	80045e4 <HAL_TIM_ConfigClockSource+0x16c>
 80044e4:	2b70      	cmp	r3, #112	@ 0x70
 80044e6:	d01a      	beq.n	800451e <HAL_TIM_ConfigClockSource+0xa6>
 80044e8:	2b70      	cmp	r3, #112	@ 0x70
 80044ea:	d87b      	bhi.n	80045e4 <HAL_TIM_ConfigClockSource+0x16c>
 80044ec:	2b60      	cmp	r3, #96	@ 0x60
 80044ee:	d050      	beq.n	8004592 <HAL_TIM_ConfigClockSource+0x11a>
 80044f0:	2b60      	cmp	r3, #96	@ 0x60
 80044f2:	d877      	bhi.n	80045e4 <HAL_TIM_ConfigClockSource+0x16c>
 80044f4:	2b50      	cmp	r3, #80	@ 0x50
 80044f6:	d03c      	beq.n	8004572 <HAL_TIM_ConfigClockSource+0xfa>
 80044f8:	2b50      	cmp	r3, #80	@ 0x50
 80044fa:	d873      	bhi.n	80045e4 <HAL_TIM_ConfigClockSource+0x16c>
 80044fc:	2b40      	cmp	r3, #64	@ 0x40
 80044fe:	d058      	beq.n	80045b2 <HAL_TIM_ConfigClockSource+0x13a>
 8004500:	2b40      	cmp	r3, #64	@ 0x40
 8004502:	d86f      	bhi.n	80045e4 <HAL_TIM_ConfigClockSource+0x16c>
 8004504:	2b30      	cmp	r3, #48	@ 0x30
 8004506:	d064      	beq.n	80045d2 <HAL_TIM_ConfigClockSource+0x15a>
 8004508:	2b30      	cmp	r3, #48	@ 0x30
 800450a:	d86b      	bhi.n	80045e4 <HAL_TIM_ConfigClockSource+0x16c>
 800450c:	2b20      	cmp	r3, #32
 800450e:	d060      	beq.n	80045d2 <HAL_TIM_ConfigClockSource+0x15a>
 8004510:	2b20      	cmp	r3, #32
 8004512:	d867      	bhi.n	80045e4 <HAL_TIM_ConfigClockSource+0x16c>
 8004514:	2b00      	cmp	r3, #0
 8004516:	d05c      	beq.n	80045d2 <HAL_TIM_ConfigClockSource+0x15a>
 8004518:	2b10      	cmp	r3, #16
 800451a:	d05a      	beq.n	80045d2 <HAL_TIM_ConfigClockSource+0x15a>
 800451c:	e062      	b.n	80045e4 <HAL_TIM_ConfigClockSource+0x16c>
 800451e:	687b      	ldr	r3, [r7, #4]
 8004520:	6818      	ldr	r0, [r3, #0]
 8004522:	683b      	ldr	r3, [r7, #0]
 8004524:	6899      	ldr	r1, [r3, #8]
 8004526:	683b      	ldr	r3, [r7, #0]
 8004528:	685a      	ldr	r2, [r3, #4]
 800452a:	683b      	ldr	r3, [r7, #0]
 800452c:	68db      	ldr	r3, [r3, #12]
 800452e:	f000 fc1f 	bl	8004d70 <TIM_ETR_SetConfig>
 8004532:	687b      	ldr	r3, [r7, #4]
 8004534:	681b      	ldr	r3, [r3, #0]
 8004536:	689b      	ldr	r3, [r3, #8]
 8004538:	60bb      	str	r3, [r7, #8]
 800453a:	68bb      	ldr	r3, [r7, #8]
 800453c:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 8004540:	60bb      	str	r3, [r7, #8]
 8004542:	687b      	ldr	r3, [r7, #4]
 8004544:	681b      	ldr	r3, [r3, #0]
 8004546:	68ba      	ldr	r2, [r7, #8]
 8004548:	609a      	str	r2, [r3, #8]
 800454a:	e04f      	b.n	80045ec <HAL_TIM_ConfigClockSource+0x174>
 800454c:	687b      	ldr	r3, [r7, #4]
 800454e:	6818      	ldr	r0, [r3, #0]
 8004550:	683b      	ldr	r3, [r7, #0]
 8004552:	6899      	ldr	r1, [r3, #8]
 8004554:	683b      	ldr	r3, [r7, #0]
 8004556:	685a      	ldr	r2, [r3, #4]
 8004558:	683b      	ldr	r3, [r7, #0]
 800455a:	68db      	ldr	r3, [r3, #12]
 800455c:	f000 fc08 	bl	8004d70 <TIM_ETR_SetConfig>
 8004560:	687b      	ldr	r3, [r7, #4]
 8004562:	681b      	ldr	r3, [r3, #0]
 8004564:	689a      	ldr	r2, [r3, #8]
 8004566:	687b      	ldr	r3, [r7, #4]
 8004568:	681b      	ldr	r3, [r3, #0]
 800456a:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 800456e:	609a      	str	r2, [r3, #8]
 8004570:	e03c      	b.n	80045ec <HAL_TIM_ConfigClockSource+0x174>
 8004572:	687b      	ldr	r3, [r7, #4]
 8004574:	6818      	ldr	r0, [r3, #0]
 8004576:	683b      	ldr	r3, [r7, #0]
 8004578:	6859      	ldr	r1, [r3, #4]
 800457a:	683b      	ldr	r3, [r7, #0]
 800457c:	68db      	ldr	r3, [r3, #12]
 800457e:	461a      	mov	r2, r3
 8004580:	f000 fb7c 	bl	8004c7c <TIM_TI1_ConfigInputStage>
 8004584:	687b      	ldr	r3, [r7, #4]
 8004586:	681b      	ldr	r3, [r3, #0]
 8004588:	2150      	movs	r1, #80	@ 0x50
 800458a:	4618      	mov	r0, r3
 800458c:	f000 fbd5 	bl	8004d3a <TIM_ITRx_SetConfig>
 8004590:	e02c      	b.n	80045ec <HAL_TIM_ConfigClockSource+0x174>
 8004592:	687b      	ldr	r3, [r7, #4]
 8004594:	6818      	ldr	r0, [r3, #0]
 8004596:	683b      	ldr	r3, [r7, #0]
 8004598:	6859      	ldr	r1, [r3, #4]
 800459a:	683b      	ldr	r3, [r7, #0]
 800459c:	68db      	ldr	r3, [r3, #12]
 800459e:	461a      	mov	r2, r3
 80045a0:	f000 fb9b 	bl	8004cda <TIM_TI2_ConfigInputStage>
 80045a4:	687b      	ldr	r3, [r7, #4]
 80045a6:	681b      	ldr	r3, [r3, #0]
 80045a8:	2160      	movs	r1, #96	@ 0x60
 80045aa:	4618      	mov	r0, r3
 80045ac:	f000 fbc5 	bl	8004d3a <TIM_ITRx_SetConfig>
 80045b0:	e01c      	b.n	80045ec <HAL_TIM_ConfigClockSource+0x174>
 80045b2:	687b      	ldr	r3, [r7, #4]
 80045b4:	6818      	ldr	r0, [r3, #0]
 80045b6:	683b      	ldr	r3, [r7, #0]
 80045b8:	6859      	ldr	r1, [r3, #4]
 80045ba:	683b      	ldr	r3, [r7, #0]
 80045bc:	68db      	ldr	r3, [r3, #12]
 80045be:	461a      	mov	r2, r3
 80045c0:	f000 fb5c 	bl	8004c7c <TIM_TI1_ConfigInputStage>
 80045c4:	687b      	ldr	r3, [r7, #4]
 80045c6:	681b      	ldr	r3, [r3, #0]
 80045c8:	2140      	movs	r1, #64	@ 0x40
 80045ca:	4618      	mov	r0, r3
 80045cc:	f000 fbb5 	bl	8004d3a <TIM_ITRx_SetConfig>
 80045d0:	e00c      	b.n	80045ec <HAL_TIM_ConfigClockSource+0x174>
 80045d2:	687b      	ldr	r3, [r7, #4]
 80045d4:	681a      	ldr	r2, [r3, #0]
 80045d6:	683b      	ldr	r3, [r7, #0]
 80045d8:	681b      	ldr	r3, [r3, #0]
 80045da:	4619      	mov	r1, r3
 80045dc:	4610      	mov	r0, r2
 80045de:	f000 fbac 	bl	8004d3a <TIM_ITRx_SetConfig>
 80045e2:	e003      	b.n	80045ec <HAL_TIM_ConfigClockSource+0x174>
 80045e4:	2301      	movs	r3, #1
 80045e6:	73fb      	strb	r3, [r7, #15]
 80045e8:	e000      	b.n	80045ec <HAL_TIM_ConfigClockSource+0x174>
 80045ea:	bf00      	nop
 80045ec:	687b      	ldr	r3, [r7, #4]
 80045ee:	2201      	movs	r2, #1
 80045f0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80045f4:	687b      	ldr	r3, [r7, #4]
 80045f6:	2200      	movs	r2, #0
 80045f8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80045fc:	7bfb      	ldrb	r3, [r7, #15]
 80045fe:	4618      	mov	r0, r3
 8004600:	3710      	adds	r7, #16
 8004602:	46bd      	mov	sp, r7
 8004604:	bd80      	pop	{r7, pc}

08004606 <HAL_TIM_PWM_PulseFinishedHalfCpltCallback>:
 8004606:	b480      	push	{r7}
 8004608:	b083      	sub	sp, #12
 800460a:	af00      	add	r7, sp, #0
 800460c:	6078      	str	r0, [r7, #4]
 800460e:	bf00      	nop
 8004610:	370c      	adds	r7, #12
 8004612:	46bd      	mov	sp, r7
 8004614:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004618:	4770      	bx	lr

0800461a <HAL_TIM_ErrorCallback>:
 800461a:	b480      	push	{r7}
 800461c:	b083      	sub	sp, #12
 800461e:	af00      	add	r7, sp, #0
 8004620:	6078      	str	r0, [r7, #4]
 8004622:	bf00      	nop
 8004624:	370c      	adds	r7, #12
 8004626:	46bd      	mov	sp, r7
 8004628:	f85d 7b04 	ldr.w	r7, [sp], #4
 800462c:	4770      	bx	lr

0800462e <TIM_DMAError>:
 800462e:	b580      	push	{r7, lr}
 8004630:	b084      	sub	sp, #16
 8004632:	af00      	add	r7, sp, #0
 8004634:	6078      	str	r0, [r7, #4]
 8004636:	687b      	ldr	r3, [r7, #4]
 8004638:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800463a:	60fb      	str	r3, [r7, #12]
 800463c:	68fb      	ldr	r3, [r7, #12]
 800463e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004640:	687a      	ldr	r2, [r7, #4]
 8004642:	429a      	cmp	r2, r3
 8004644:	d107      	bne.n	8004656 <TIM_DMAError+0x28>
 8004646:	68fb      	ldr	r3, [r7, #12]
 8004648:	2201      	movs	r2, #1
 800464a:	771a      	strb	r2, [r3, #28]
 800464c:	68fb      	ldr	r3, [r7, #12]
 800464e:	2201      	movs	r2, #1
 8004650:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8004654:	e02a      	b.n	80046ac <TIM_DMAError+0x7e>
 8004656:	68fb      	ldr	r3, [r7, #12]
 8004658:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800465a:	687a      	ldr	r2, [r7, #4]
 800465c:	429a      	cmp	r2, r3
 800465e:	d107      	bne.n	8004670 <TIM_DMAError+0x42>
 8004660:	68fb      	ldr	r3, [r7, #12]
 8004662:	2202      	movs	r2, #2
 8004664:	771a      	strb	r2, [r3, #28]
 8004666:	68fb      	ldr	r3, [r7, #12]
 8004668:	2201      	movs	r2, #1
 800466a:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 800466e:	e01d      	b.n	80046ac <TIM_DMAError+0x7e>
 8004670:	68fb      	ldr	r3, [r7, #12]
 8004672:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004674:	687a      	ldr	r2, [r7, #4]
 8004676:	429a      	cmp	r2, r3
 8004678:	d107      	bne.n	800468a <TIM_DMAError+0x5c>
 800467a:	68fb      	ldr	r3, [r7, #12]
 800467c:	2204      	movs	r2, #4
 800467e:	771a      	strb	r2, [r3, #28]
 8004680:	68fb      	ldr	r3, [r7, #12]
 8004682:	2201      	movs	r2, #1
 8004684:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8004688:	e010      	b.n	80046ac <TIM_DMAError+0x7e>
 800468a:	68fb      	ldr	r3, [r7, #12]
 800468c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800468e:	687a      	ldr	r2, [r7, #4]
 8004690:	429a      	cmp	r2, r3
 8004692:	d107      	bne.n	80046a4 <TIM_DMAError+0x76>
 8004694:	68fb      	ldr	r3, [r7, #12]
 8004696:	2208      	movs	r2, #8
 8004698:	771a      	strb	r2, [r3, #28]
 800469a:	68fb      	ldr	r3, [r7, #12]
 800469c:	2201      	movs	r2, #1
 800469e:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80046a2:	e003      	b.n	80046ac <TIM_DMAError+0x7e>
 80046a4:	68fb      	ldr	r3, [r7, #12]
 80046a6:	2201      	movs	r2, #1
 80046a8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80046ac:	68f8      	ldr	r0, [r7, #12]
 80046ae:	f7ff ffb4 	bl	800461a <HAL_TIM_ErrorCallback>
 80046b2:	68fb      	ldr	r3, [r7, #12]
 80046b4:	2200      	movs	r2, #0
 80046b6:	771a      	strb	r2, [r3, #28]
 80046b8:	bf00      	nop
 80046ba:	3710      	adds	r7, #16
 80046bc:	46bd      	mov	sp, r7
 80046be:	bd80      	pop	{r7, pc}

080046c0 <TIM_DMADelayPulseCplt>:
 80046c0:	b580      	push	{r7, lr}
 80046c2:	b084      	sub	sp, #16
 80046c4:	af00      	add	r7, sp, #0
 80046c6:	6078      	str	r0, [r7, #4]
 80046c8:	687b      	ldr	r3, [r7, #4]
 80046ca:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80046cc:	60fb      	str	r3, [r7, #12]
 80046ce:	68fb      	ldr	r3, [r7, #12]
 80046d0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80046d2:	687a      	ldr	r2, [r7, #4]
 80046d4:	429a      	cmp	r2, r3
 80046d6:	d10b      	bne.n	80046f0 <TIM_DMADelayPulseCplt+0x30>
 80046d8:	68fb      	ldr	r3, [r7, #12]
 80046da:	2201      	movs	r2, #1
 80046dc:	771a      	strb	r2, [r3, #28]
 80046de:	687b      	ldr	r3, [r7, #4]
 80046e0:	69db      	ldr	r3, [r3, #28]
 80046e2:	2b00      	cmp	r3, #0
 80046e4:	d136      	bne.n	8004754 <TIM_DMADelayPulseCplt+0x94>
 80046e6:	68fb      	ldr	r3, [r7, #12]
 80046e8:	2201      	movs	r2, #1
 80046ea:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80046ee:	e031      	b.n	8004754 <TIM_DMADelayPulseCplt+0x94>
 80046f0:	68fb      	ldr	r3, [r7, #12]
 80046f2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80046f4:	687a      	ldr	r2, [r7, #4]
 80046f6:	429a      	cmp	r2, r3
 80046f8:	d10b      	bne.n	8004712 <TIM_DMADelayPulseCplt+0x52>
 80046fa:	68fb      	ldr	r3, [r7, #12]
 80046fc:	2202      	movs	r2, #2
 80046fe:	771a      	strb	r2, [r3, #28]
 8004700:	687b      	ldr	r3, [r7, #4]
 8004702:	69db      	ldr	r3, [r3, #28]
 8004704:	2b00      	cmp	r3, #0
 8004706:	d125      	bne.n	8004754 <TIM_DMADelayPulseCplt+0x94>
 8004708:	68fb      	ldr	r3, [r7, #12]
 800470a:	2201      	movs	r2, #1
 800470c:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8004710:	e020      	b.n	8004754 <TIM_DMADelayPulseCplt+0x94>
 8004712:	68fb      	ldr	r3, [r7, #12]
 8004714:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004716:	687a      	ldr	r2, [r7, #4]
 8004718:	429a      	cmp	r2, r3
 800471a:	d10b      	bne.n	8004734 <TIM_DMADelayPulseCplt+0x74>
 800471c:	68fb      	ldr	r3, [r7, #12]
 800471e:	2204      	movs	r2, #4
 8004720:	771a      	strb	r2, [r3, #28]
 8004722:	687b      	ldr	r3, [r7, #4]
 8004724:	69db      	ldr	r3, [r3, #28]
 8004726:	2b00      	cmp	r3, #0
 8004728:	d114      	bne.n	8004754 <TIM_DMADelayPulseCplt+0x94>
 800472a:	68fb      	ldr	r3, [r7, #12]
 800472c:	2201      	movs	r2, #1
 800472e:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8004732:	e00f      	b.n	8004754 <TIM_DMADelayPulseCplt+0x94>
 8004734:	68fb      	ldr	r3, [r7, #12]
 8004736:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004738:	687a      	ldr	r2, [r7, #4]
 800473a:	429a      	cmp	r2, r3
 800473c:	d10a      	bne.n	8004754 <TIM_DMADelayPulseCplt+0x94>
 800473e:	68fb      	ldr	r3, [r7, #12]
 8004740:	2208      	movs	r2, #8
 8004742:	771a      	strb	r2, [r3, #28]
 8004744:	687b      	ldr	r3, [r7, #4]
 8004746:	69db      	ldr	r3, [r3, #28]
 8004748:	2b00      	cmp	r3, #0
 800474a:	d103      	bne.n	8004754 <TIM_DMADelayPulseCplt+0x94>
 800474c:	68fb      	ldr	r3, [r7, #12]
 800474e:	2201      	movs	r2, #1
 8004750:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8004754:	68f8      	ldr	r0, [r7, #12]
 8004756:	f7fb ff77 	bl	8000648 <HAL_TIM_PWM_PulseFinishedCallback>
 800475a:	68fb      	ldr	r3, [r7, #12]
 800475c:	2200      	movs	r2, #0
 800475e:	771a      	strb	r2, [r3, #28]
 8004760:	bf00      	nop
 8004762:	3710      	adds	r7, #16
 8004764:	46bd      	mov	sp, r7
 8004766:	bd80      	pop	{r7, pc}

08004768 <TIM_DMADelayPulseHalfCplt>:
 8004768:	b580      	push	{r7, lr}
 800476a:	b084      	sub	sp, #16
 800476c:	af00      	add	r7, sp, #0
 800476e:	6078      	str	r0, [r7, #4]
 8004770:	687b      	ldr	r3, [r7, #4]
 8004772:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8004774:	60fb      	str	r3, [r7, #12]
 8004776:	68fb      	ldr	r3, [r7, #12]
 8004778:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800477a:	687a      	ldr	r2, [r7, #4]
 800477c:	429a      	cmp	r2, r3
 800477e:	d103      	bne.n	8004788 <TIM_DMADelayPulseHalfCplt+0x20>
 8004780:	68fb      	ldr	r3, [r7, #12]
 8004782:	2201      	movs	r2, #1
 8004784:	771a      	strb	r2, [r3, #28]
 8004786:	e019      	b.n	80047bc <TIM_DMADelayPulseHalfCplt+0x54>
 8004788:	68fb      	ldr	r3, [r7, #12]
 800478a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800478c:	687a      	ldr	r2, [r7, #4]
 800478e:	429a      	cmp	r2, r3
 8004790:	d103      	bne.n	800479a <TIM_DMADelayPulseHalfCplt+0x32>
 8004792:	68fb      	ldr	r3, [r7, #12]
 8004794:	2202      	movs	r2, #2
 8004796:	771a      	strb	r2, [r3, #28]
 8004798:	e010      	b.n	80047bc <TIM_DMADelayPulseHalfCplt+0x54>
 800479a:	68fb      	ldr	r3, [r7, #12]
 800479c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800479e:	687a      	ldr	r2, [r7, #4]
 80047a0:	429a      	cmp	r2, r3
 80047a2:	d103      	bne.n	80047ac <TIM_DMADelayPulseHalfCplt+0x44>
 80047a4:	68fb      	ldr	r3, [r7, #12]
 80047a6:	2204      	movs	r2, #4
 80047a8:	771a      	strb	r2, [r3, #28]
 80047aa:	e007      	b.n	80047bc <TIM_DMADelayPulseHalfCplt+0x54>
 80047ac:	68fb      	ldr	r3, [r7, #12]
 80047ae:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80047b0:	687a      	ldr	r2, [r7, #4]
 80047b2:	429a      	cmp	r2, r3
 80047b4:	d102      	bne.n	80047bc <TIM_DMADelayPulseHalfCplt+0x54>
 80047b6:	68fb      	ldr	r3, [r7, #12]
 80047b8:	2208      	movs	r2, #8
 80047ba:	771a      	strb	r2, [r3, #28]
 80047bc:	68f8      	ldr	r0, [r7, #12]
 80047be:	f7ff ff22 	bl	8004606 <HAL_TIM_PWM_PulseFinishedHalfCpltCallback>
 80047c2:	68fb      	ldr	r3, [r7, #12]
 80047c4:	2200      	movs	r2, #0
 80047c6:	771a      	strb	r2, [r3, #28]
 80047c8:	bf00      	nop
 80047ca:	3710      	adds	r7, #16
 80047cc:	46bd      	mov	sp, r7
 80047ce:	bd80      	pop	{r7, pc}

080047d0 <TIM_Base_SetConfig>:
 80047d0:	b480      	push	{r7}
 80047d2:	b085      	sub	sp, #20
 80047d4:	af00      	add	r7, sp, #0
 80047d6:	6078      	str	r0, [r7, #4]
 80047d8:	6039      	str	r1, [r7, #0]
 80047da:	687b      	ldr	r3, [r7, #4]
 80047dc:	681b      	ldr	r3, [r3, #0]
 80047de:	60fb      	str	r3, [r7, #12]
 80047e0:	687b      	ldr	r3, [r7, #4]
 80047e2:	4a43      	ldr	r2, [pc, #268]	@ (80048f0 <TIM_Base_SetConfig+0x120>)
 80047e4:	4293      	cmp	r3, r2
 80047e6:	d013      	beq.n	8004810 <TIM_Base_SetConfig+0x40>
 80047e8:	687b      	ldr	r3, [r7, #4]
 80047ea:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80047ee:	d00f      	beq.n	8004810 <TIM_Base_SetConfig+0x40>
 80047f0:	687b      	ldr	r3, [r7, #4]
 80047f2:	4a40      	ldr	r2, [pc, #256]	@ (80048f4 <TIM_Base_SetConfig+0x124>)
 80047f4:	4293      	cmp	r3, r2
 80047f6:	d00b      	beq.n	8004810 <TIM_Base_SetConfig+0x40>
 80047f8:	687b      	ldr	r3, [r7, #4]
 80047fa:	4a3f      	ldr	r2, [pc, #252]	@ (80048f8 <TIM_Base_SetConfig+0x128>)
 80047fc:	4293      	cmp	r3, r2
 80047fe:	d007      	beq.n	8004810 <TIM_Base_SetConfig+0x40>
 8004800:	687b      	ldr	r3, [r7, #4]
 8004802:	4a3e      	ldr	r2, [pc, #248]	@ (80048fc <TIM_Base_SetConfig+0x12c>)
 8004804:	4293      	cmp	r3, r2
 8004806:	d003      	beq.n	8004810 <TIM_Base_SetConfig+0x40>
 8004808:	687b      	ldr	r3, [r7, #4]
 800480a:	4a3d      	ldr	r2, [pc, #244]	@ (8004900 <TIM_Base_SetConfig+0x130>)
 800480c:	4293      	cmp	r3, r2
 800480e:	d108      	bne.n	8004822 <TIM_Base_SetConfig+0x52>
 8004810:	68fb      	ldr	r3, [r7, #12]
 8004812:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004816:	60fb      	str	r3, [r7, #12]
 8004818:	683b      	ldr	r3, [r7, #0]
 800481a:	685b      	ldr	r3, [r3, #4]
 800481c:	68fa      	ldr	r2, [r7, #12]
 800481e:	4313      	orrs	r3, r2
 8004820:	60fb      	str	r3, [r7, #12]
 8004822:	687b      	ldr	r3, [r7, #4]
 8004824:	4a32      	ldr	r2, [pc, #200]	@ (80048f0 <TIM_Base_SetConfig+0x120>)
 8004826:	4293      	cmp	r3, r2
 8004828:	d02b      	beq.n	8004882 <TIM_Base_SetConfig+0xb2>
 800482a:	687b      	ldr	r3, [r7, #4]
 800482c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8004830:	d027      	beq.n	8004882 <TIM_Base_SetConfig+0xb2>
 8004832:	687b      	ldr	r3, [r7, #4]
 8004834:	4a2f      	ldr	r2, [pc, #188]	@ (80048f4 <TIM_Base_SetConfig+0x124>)
 8004836:	4293      	cmp	r3, r2
 8004838:	d023      	beq.n	8004882 <TIM_Base_SetConfig+0xb2>
 800483a:	687b      	ldr	r3, [r7, #4]
 800483c:	4a2e      	ldr	r2, [pc, #184]	@ (80048f8 <TIM_Base_SetConfig+0x128>)
 800483e:	4293      	cmp	r3, r2
 8004840:	d01f      	beq.n	8004882 <TIM_Base_SetConfig+0xb2>
 8004842:	687b      	ldr	r3, [r7, #4]
 8004844:	4a2d      	ldr	r2, [pc, #180]	@ (80048fc <TIM_Base_SetConfig+0x12c>)
 8004846:	4293      	cmp	r3, r2
 8004848:	d01b      	beq.n	8004882 <TIM_Base_SetConfig+0xb2>
 800484a:	687b      	ldr	r3, [r7, #4]
 800484c:	4a2c      	ldr	r2, [pc, #176]	@ (8004900 <TIM_Base_SetConfig+0x130>)
 800484e:	4293      	cmp	r3, r2
 8004850:	d017      	beq.n	8004882 <TIM_Base_SetConfig+0xb2>
 8004852:	687b      	ldr	r3, [r7, #4]
 8004854:	4a2b      	ldr	r2, [pc, #172]	@ (8004904 <TIM_Base_SetConfig+0x134>)
 8004856:	4293      	cmp	r3, r2
 8004858:	d013      	beq.n	8004882 <TIM_Base_SetConfig+0xb2>
 800485a:	687b      	ldr	r3, [r7, #4]
 800485c:	4a2a      	ldr	r2, [pc, #168]	@ (8004908 <TIM_Base_SetConfig+0x138>)
 800485e:	4293      	cmp	r3, r2
 8004860:	d00f      	beq.n	8004882 <TIM_Base_SetConfig+0xb2>
 8004862:	687b      	ldr	r3, [r7, #4]
 8004864:	4a29      	ldr	r2, [pc, #164]	@ (800490c <TIM_Base_SetConfig+0x13c>)
 8004866:	4293      	cmp	r3, r2
 8004868:	d00b      	beq.n	8004882 <TIM_Base_SetConfig+0xb2>
 800486a:	687b      	ldr	r3, [r7, #4]
 800486c:	4a28      	ldr	r2, [pc, #160]	@ (8004910 <TIM_Base_SetConfig+0x140>)
 800486e:	4293      	cmp	r3, r2
 8004870:	d007      	beq.n	8004882 <TIM_Base_SetConfig+0xb2>
 8004872:	687b      	ldr	r3, [r7, #4]
 8004874:	4a27      	ldr	r2, [pc, #156]	@ (8004914 <TIM_Base_SetConfig+0x144>)
 8004876:	4293      	cmp	r3, r2
 8004878:	d003      	beq.n	8004882 <TIM_Base_SetConfig+0xb2>
 800487a:	687b      	ldr	r3, [r7, #4]
 800487c:	4a26      	ldr	r2, [pc, #152]	@ (8004918 <TIM_Base_SetConfig+0x148>)
 800487e:	4293      	cmp	r3, r2
 8004880:	d108      	bne.n	8004894 <TIM_Base_SetConfig+0xc4>
 8004882:	68fb      	ldr	r3, [r7, #12]
 8004884:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8004888:	60fb      	str	r3, [r7, #12]
 800488a:	683b      	ldr	r3, [r7, #0]
 800488c:	68db      	ldr	r3, [r3, #12]
 800488e:	68fa      	ldr	r2, [r7, #12]
 8004890:	4313      	orrs	r3, r2
 8004892:	60fb      	str	r3, [r7, #12]
 8004894:	68fb      	ldr	r3, [r7, #12]
 8004896:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 800489a:	683b      	ldr	r3, [r7, #0]
 800489c:	695b      	ldr	r3, [r3, #20]
 800489e:	4313      	orrs	r3, r2
 80048a0:	60fb      	str	r3, [r7, #12]
 80048a2:	683b      	ldr	r3, [r7, #0]
 80048a4:	689a      	ldr	r2, [r3, #8]
 80048a6:	687b      	ldr	r3, [r7, #4]
 80048a8:	62da      	str	r2, [r3, #44]	@ 0x2c
 80048aa:	683b      	ldr	r3, [r7, #0]
 80048ac:	681a      	ldr	r2, [r3, #0]
 80048ae:	687b      	ldr	r3, [r7, #4]
 80048b0:	629a      	str	r2, [r3, #40]	@ 0x28
 80048b2:	687b      	ldr	r3, [r7, #4]
 80048b4:	4a0e      	ldr	r2, [pc, #56]	@ (80048f0 <TIM_Base_SetConfig+0x120>)
 80048b6:	4293      	cmp	r3, r2
 80048b8:	d003      	beq.n	80048c2 <TIM_Base_SetConfig+0xf2>
 80048ba:	687b      	ldr	r3, [r7, #4]
 80048bc:	4a10      	ldr	r2, [pc, #64]	@ (8004900 <TIM_Base_SetConfig+0x130>)
 80048be:	4293      	cmp	r3, r2
 80048c0:	d103      	bne.n	80048ca <TIM_Base_SetConfig+0xfa>
 80048c2:	683b      	ldr	r3, [r7, #0]
 80048c4:	691a      	ldr	r2, [r3, #16]
 80048c6:	687b      	ldr	r3, [r7, #4]
 80048c8:	631a      	str	r2, [r3, #48]	@ 0x30
 80048ca:	687b      	ldr	r3, [r7, #4]
 80048cc:	681b      	ldr	r3, [r3, #0]
 80048ce:	f043 0204 	orr.w	r2, r3, #4
 80048d2:	687b      	ldr	r3, [r7, #4]
 80048d4:	601a      	str	r2, [r3, #0]
 80048d6:	687b      	ldr	r3, [r7, #4]
 80048d8:	2201      	movs	r2, #1
 80048da:	615a      	str	r2, [r3, #20]
 80048dc:	687b      	ldr	r3, [r7, #4]
 80048de:	68fa      	ldr	r2, [r7, #12]
 80048e0:	601a      	str	r2, [r3, #0]
 80048e2:	bf00      	nop
 80048e4:	3714      	adds	r7, #20
 80048e6:	46bd      	mov	sp, r7
 80048e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80048ec:	4770      	bx	lr
 80048ee:	bf00      	nop
 80048f0:	40010000 	.word	0x40010000
 80048f4:	40000400 	.word	0x40000400
 80048f8:	40000800 	.word	0x40000800
 80048fc:	40000c00 	.word	0x40000c00
 8004900:	40010400 	.word	0x40010400
 8004904:	40014000 	.word	0x40014000
 8004908:	40014400 	.word	0x40014400
 800490c:	40014800 	.word	0x40014800
 8004910:	40001800 	.word	0x40001800
 8004914:	40001c00 	.word	0x40001c00
 8004918:	40002000 	.word	0x40002000

0800491c <TIM_OC1_SetConfig>:
 800491c:	b480      	push	{r7}
 800491e:	b087      	sub	sp, #28
 8004920:	af00      	add	r7, sp, #0
 8004922:	6078      	str	r0, [r7, #4]
 8004924:	6039      	str	r1, [r7, #0]
 8004926:	687b      	ldr	r3, [r7, #4]
 8004928:	6a1b      	ldr	r3, [r3, #32]
 800492a:	617b      	str	r3, [r7, #20]
 800492c:	687b      	ldr	r3, [r7, #4]
 800492e:	6a1b      	ldr	r3, [r3, #32]
 8004930:	f023 0201 	bic.w	r2, r3, #1
 8004934:	687b      	ldr	r3, [r7, #4]
 8004936:	621a      	str	r2, [r3, #32]
 8004938:	687b      	ldr	r3, [r7, #4]
 800493a:	685b      	ldr	r3, [r3, #4]
 800493c:	613b      	str	r3, [r7, #16]
 800493e:	687b      	ldr	r3, [r7, #4]
 8004940:	699b      	ldr	r3, [r3, #24]
 8004942:	60fb      	str	r3, [r7, #12]
 8004944:	68fb      	ldr	r3, [r7, #12]
 8004946:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800494a:	60fb      	str	r3, [r7, #12]
 800494c:	68fb      	ldr	r3, [r7, #12]
 800494e:	f023 0303 	bic.w	r3, r3, #3
 8004952:	60fb      	str	r3, [r7, #12]
 8004954:	683b      	ldr	r3, [r7, #0]
 8004956:	681b      	ldr	r3, [r3, #0]
 8004958:	68fa      	ldr	r2, [r7, #12]
 800495a:	4313      	orrs	r3, r2
 800495c:	60fb      	str	r3, [r7, #12]
 800495e:	697b      	ldr	r3, [r7, #20]
 8004960:	f023 0302 	bic.w	r3, r3, #2
 8004964:	617b      	str	r3, [r7, #20]
 8004966:	683b      	ldr	r3, [r7, #0]
 8004968:	689b      	ldr	r3, [r3, #8]
 800496a:	697a      	ldr	r2, [r7, #20]
 800496c:	4313      	orrs	r3, r2
 800496e:	617b      	str	r3, [r7, #20]
 8004970:	687b      	ldr	r3, [r7, #4]
 8004972:	4a20      	ldr	r2, [pc, #128]	@ (80049f4 <TIM_OC1_SetConfig+0xd8>)
 8004974:	4293      	cmp	r3, r2
 8004976:	d003      	beq.n	8004980 <TIM_OC1_SetConfig+0x64>
 8004978:	687b      	ldr	r3, [r7, #4]
 800497a:	4a1f      	ldr	r2, [pc, #124]	@ (80049f8 <TIM_OC1_SetConfig+0xdc>)
 800497c:	4293      	cmp	r3, r2
 800497e:	d10c      	bne.n	800499a <TIM_OC1_SetConfig+0x7e>
 8004980:	697b      	ldr	r3, [r7, #20]
 8004982:	f023 0308 	bic.w	r3, r3, #8
 8004986:	617b      	str	r3, [r7, #20]
 8004988:	683b      	ldr	r3, [r7, #0]
 800498a:	68db      	ldr	r3, [r3, #12]
 800498c:	697a      	ldr	r2, [r7, #20]
 800498e:	4313      	orrs	r3, r2
 8004990:	617b      	str	r3, [r7, #20]
 8004992:	697b      	ldr	r3, [r7, #20]
 8004994:	f023 0304 	bic.w	r3, r3, #4
 8004998:	617b      	str	r3, [r7, #20]
 800499a:	687b      	ldr	r3, [r7, #4]
 800499c:	4a15      	ldr	r2, [pc, #84]	@ (80049f4 <TIM_OC1_SetConfig+0xd8>)
 800499e:	4293      	cmp	r3, r2
 80049a0:	d003      	beq.n	80049aa <TIM_OC1_SetConfig+0x8e>
 80049a2:	687b      	ldr	r3, [r7, #4]
 80049a4:	4a14      	ldr	r2, [pc, #80]	@ (80049f8 <TIM_OC1_SetConfig+0xdc>)
 80049a6:	4293      	cmp	r3, r2
 80049a8:	d111      	bne.n	80049ce <TIM_OC1_SetConfig+0xb2>
 80049aa:	693b      	ldr	r3, [r7, #16]
 80049ac:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80049b0:	613b      	str	r3, [r7, #16]
 80049b2:	693b      	ldr	r3, [r7, #16]
 80049b4:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 80049b8:	613b      	str	r3, [r7, #16]
 80049ba:	683b      	ldr	r3, [r7, #0]
 80049bc:	695b      	ldr	r3, [r3, #20]
 80049be:	693a      	ldr	r2, [r7, #16]
 80049c0:	4313      	orrs	r3, r2
 80049c2:	613b      	str	r3, [r7, #16]
 80049c4:	683b      	ldr	r3, [r7, #0]
 80049c6:	699b      	ldr	r3, [r3, #24]
 80049c8:	693a      	ldr	r2, [r7, #16]
 80049ca:	4313      	orrs	r3, r2
 80049cc:	613b      	str	r3, [r7, #16]
 80049ce:	687b      	ldr	r3, [r7, #4]
 80049d0:	693a      	ldr	r2, [r7, #16]
 80049d2:	605a      	str	r2, [r3, #4]
 80049d4:	687b      	ldr	r3, [r7, #4]
 80049d6:	68fa      	ldr	r2, [r7, #12]
 80049d8:	619a      	str	r2, [r3, #24]
 80049da:	683b      	ldr	r3, [r7, #0]
 80049dc:	685a      	ldr	r2, [r3, #4]
 80049de:	687b      	ldr	r3, [r7, #4]
 80049e0:	635a      	str	r2, [r3, #52]	@ 0x34
 80049e2:	687b      	ldr	r3, [r7, #4]
 80049e4:	697a      	ldr	r2, [r7, #20]
 80049e6:	621a      	str	r2, [r3, #32]
 80049e8:	bf00      	nop
 80049ea:	371c      	adds	r7, #28
 80049ec:	46bd      	mov	sp, r7
 80049ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80049f2:	4770      	bx	lr
 80049f4:	40010000 	.word	0x40010000
 80049f8:	40010400 	.word	0x40010400

080049fc <TIM_OC2_SetConfig>:
 80049fc:	b480      	push	{r7}
 80049fe:	b087      	sub	sp, #28
 8004a00:	af00      	add	r7, sp, #0
 8004a02:	6078      	str	r0, [r7, #4]
 8004a04:	6039      	str	r1, [r7, #0]
 8004a06:	687b      	ldr	r3, [r7, #4]
 8004a08:	6a1b      	ldr	r3, [r3, #32]
 8004a0a:	617b      	str	r3, [r7, #20]
 8004a0c:	687b      	ldr	r3, [r7, #4]
 8004a0e:	6a1b      	ldr	r3, [r3, #32]
 8004a10:	f023 0210 	bic.w	r2, r3, #16
 8004a14:	687b      	ldr	r3, [r7, #4]
 8004a16:	621a      	str	r2, [r3, #32]
 8004a18:	687b      	ldr	r3, [r7, #4]
 8004a1a:	685b      	ldr	r3, [r3, #4]
 8004a1c:	613b      	str	r3, [r7, #16]
 8004a1e:	687b      	ldr	r3, [r7, #4]
 8004a20:	699b      	ldr	r3, [r3, #24]
 8004a22:	60fb      	str	r3, [r7, #12]
 8004a24:	68fb      	ldr	r3, [r7, #12]
 8004a26:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8004a2a:	60fb      	str	r3, [r7, #12]
 8004a2c:	68fb      	ldr	r3, [r7, #12]
 8004a2e:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8004a32:	60fb      	str	r3, [r7, #12]
 8004a34:	683b      	ldr	r3, [r7, #0]
 8004a36:	681b      	ldr	r3, [r3, #0]
 8004a38:	021b      	lsls	r3, r3, #8
 8004a3a:	68fa      	ldr	r2, [r7, #12]
 8004a3c:	4313      	orrs	r3, r2
 8004a3e:	60fb      	str	r3, [r7, #12]
 8004a40:	697b      	ldr	r3, [r7, #20]
 8004a42:	f023 0320 	bic.w	r3, r3, #32
 8004a46:	617b      	str	r3, [r7, #20]
 8004a48:	683b      	ldr	r3, [r7, #0]
 8004a4a:	689b      	ldr	r3, [r3, #8]
 8004a4c:	011b      	lsls	r3, r3, #4
 8004a4e:	697a      	ldr	r2, [r7, #20]
 8004a50:	4313      	orrs	r3, r2
 8004a52:	617b      	str	r3, [r7, #20]
 8004a54:	687b      	ldr	r3, [r7, #4]
 8004a56:	4a22      	ldr	r2, [pc, #136]	@ (8004ae0 <TIM_OC2_SetConfig+0xe4>)
 8004a58:	4293      	cmp	r3, r2
 8004a5a:	d003      	beq.n	8004a64 <TIM_OC2_SetConfig+0x68>
 8004a5c:	687b      	ldr	r3, [r7, #4]
 8004a5e:	4a21      	ldr	r2, [pc, #132]	@ (8004ae4 <TIM_OC2_SetConfig+0xe8>)
 8004a60:	4293      	cmp	r3, r2
 8004a62:	d10d      	bne.n	8004a80 <TIM_OC2_SetConfig+0x84>
 8004a64:	697b      	ldr	r3, [r7, #20]
 8004a66:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8004a6a:	617b      	str	r3, [r7, #20]
 8004a6c:	683b      	ldr	r3, [r7, #0]
 8004a6e:	68db      	ldr	r3, [r3, #12]
 8004a70:	011b      	lsls	r3, r3, #4
 8004a72:	697a      	ldr	r2, [r7, #20]
 8004a74:	4313      	orrs	r3, r2
 8004a76:	617b      	str	r3, [r7, #20]
 8004a78:	697b      	ldr	r3, [r7, #20]
 8004a7a:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8004a7e:	617b      	str	r3, [r7, #20]
 8004a80:	687b      	ldr	r3, [r7, #4]
 8004a82:	4a17      	ldr	r2, [pc, #92]	@ (8004ae0 <TIM_OC2_SetConfig+0xe4>)
 8004a84:	4293      	cmp	r3, r2
 8004a86:	d003      	beq.n	8004a90 <TIM_OC2_SetConfig+0x94>
 8004a88:	687b      	ldr	r3, [r7, #4]
 8004a8a:	4a16      	ldr	r2, [pc, #88]	@ (8004ae4 <TIM_OC2_SetConfig+0xe8>)
 8004a8c:	4293      	cmp	r3, r2
 8004a8e:	d113      	bne.n	8004ab8 <TIM_OC2_SetConfig+0xbc>
 8004a90:	693b      	ldr	r3, [r7, #16]
 8004a92:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8004a96:	613b      	str	r3, [r7, #16]
 8004a98:	693b      	ldr	r3, [r7, #16]
 8004a9a:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8004a9e:	613b      	str	r3, [r7, #16]
 8004aa0:	683b      	ldr	r3, [r7, #0]
 8004aa2:	695b      	ldr	r3, [r3, #20]
 8004aa4:	009b      	lsls	r3, r3, #2
 8004aa6:	693a      	ldr	r2, [r7, #16]
 8004aa8:	4313      	orrs	r3, r2
 8004aaa:	613b      	str	r3, [r7, #16]
 8004aac:	683b      	ldr	r3, [r7, #0]
 8004aae:	699b      	ldr	r3, [r3, #24]
 8004ab0:	009b      	lsls	r3, r3, #2
 8004ab2:	693a      	ldr	r2, [r7, #16]
 8004ab4:	4313      	orrs	r3, r2
 8004ab6:	613b      	str	r3, [r7, #16]
 8004ab8:	687b      	ldr	r3, [r7, #4]
 8004aba:	693a      	ldr	r2, [r7, #16]
 8004abc:	605a      	str	r2, [r3, #4]
 8004abe:	687b      	ldr	r3, [r7, #4]
 8004ac0:	68fa      	ldr	r2, [r7, #12]
 8004ac2:	619a      	str	r2, [r3, #24]
 8004ac4:	683b      	ldr	r3, [r7, #0]
 8004ac6:	685a      	ldr	r2, [r3, #4]
 8004ac8:	687b      	ldr	r3, [r7, #4]
 8004aca:	639a      	str	r2, [r3, #56]	@ 0x38
 8004acc:	687b      	ldr	r3, [r7, #4]
 8004ace:	697a      	ldr	r2, [r7, #20]
 8004ad0:	621a      	str	r2, [r3, #32]
 8004ad2:	bf00      	nop
 8004ad4:	371c      	adds	r7, #28
 8004ad6:	46bd      	mov	sp, r7
 8004ad8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004adc:	4770      	bx	lr
 8004ade:	bf00      	nop
 8004ae0:	40010000 	.word	0x40010000
 8004ae4:	40010400 	.word	0x40010400

08004ae8 <TIM_OC3_SetConfig>:
 8004ae8:	b480      	push	{r7}
 8004aea:	b087      	sub	sp, #28
 8004aec:	af00      	add	r7, sp, #0
 8004aee:	6078      	str	r0, [r7, #4]
 8004af0:	6039      	str	r1, [r7, #0]
 8004af2:	687b      	ldr	r3, [r7, #4]
 8004af4:	6a1b      	ldr	r3, [r3, #32]
 8004af6:	617b      	str	r3, [r7, #20]
 8004af8:	687b      	ldr	r3, [r7, #4]
 8004afa:	6a1b      	ldr	r3, [r3, #32]
 8004afc:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8004b00:	687b      	ldr	r3, [r7, #4]
 8004b02:	621a      	str	r2, [r3, #32]
 8004b04:	687b      	ldr	r3, [r7, #4]
 8004b06:	685b      	ldr	r3, [r3, #4]
 8004b08:	613b      	str	r3, [r7, #16]
 8004b0a:	687b      	ldr	r3, [r7, #4]
 8004b0c:	69db      	ldr	r3, [r3, #28]
 8004b0e:	60fb      	str	r3, [r7, #12]
 8004b10:	68fb      	ldr	r3, [r7, #12]
 8004b12:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004b16:	60fb      	str	r3, [r7, #12]
 8004b18:	68fb      	ldr	r3, [r7, #12]
 8004b1a:	f023 0303 	bic.w	r3, r3, #3
 8004b1e:	60fb      	str	r3, [r7, #12]
 8004b20:	683b      	ldr	r3, [r7, #0]
 8004b22:	681b      	ldr	r3, [r3, #0]
 8004b24:	68fa      	ldr	r2, [r7, #12]
 8004b26:	4313      	orrs	r3, r2
 8004b28:	60fb      	str	r3, [r7, #12]
 8004b2a:	697b      	ldr	r3, [r7, #20]
 8004b2c:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8004b30:	617b      	str	r3, [r7, #20]
 8004b32:	683b      	ldr	r3, [r7, #0]
 8004b34:	689b      	ldr	r3, [r3, #8]
 8004b36:	021b      	lsls	r3, r3, #8
 8004b38:	697a      	ldr	r2, [r7, #20]
 8004b3a:	4313      	orrs	r3, r2
 8004b3c:	617b      	str	r3, [r7, #20]
 8004b3e:	687b      	ldr	r3, [r7, #4]
 8004b40:	4a21      	ldr	r2, [pc, #132]	@ (8004bc8 <TIM_OC3_SetConfig+0xe0>)
 8004b42:	4293      	cmp	r3, r2
 8004b44:	d003      	beq.n	8004b4e <TIM_OC3_SetConfig+0x66>
 8004b46:	687b      	ldr	r3, [r7, #4]
 8004b48:	4a20      	ldr	r2, [pc, #128]	@ (8004bcc <TIM_OC3_SetConfig+0xe4>)
 8004b4a:	4293      	cmp	r3, r2
 8004b4c:	d10d      	bne.n	8004b6a <TIM_OC3_SetConfig+0x82>
 8004b4e:	697b      	ldr	r3, [r7, #20]
 8004b50:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8004b54:	617b      	str	r3, [r7, #20]
 8004b56:	683b      	ldr	r3, [r7, #0]
 8004b58:	68db      	ldr	r3, [r3, #12]
 8004b5a:	021b      	lsls	r3, r3, #8
 8004b5c:	697a      	ldr	r2, [r7, #20]
 8004b5e:	4313      	orrs	r3, r2
 8004b60:	617b      	str	r3, [r7, #20]
 8004b62:	697b      	ldr	r3, [r7, #20]
 8004b64:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8004b68:	617b      	str	r3, [r7, #20]
 8004b6a:	687b      	ldr	r3, [r7, #4]
 8004b6c:	4a16      	ldr	r2, [pc, #88]	@ (8004bc8 <TIM_OC3_SetConfig+0xe0>)
 8004b6e:	4293      	cmp	r3, r2
 8004b70:	d003      	beq.n	8004b7a <TIM_OC3_SetConfig+0x92>
 8004b72:	687b      	ldr	r3, [r7, #4]
 8004b74:	4a15      	ldr	r2, [pc, #84]	@ (8004bcc <TIM_OC3_SetConfig+0xe4>)
 8004b76:	4293      	cmp	r3, r2
 8004b78:	d113      	bne.n	8004ba2 <TIM_OC3_SetConfig+0xba>
 8004b7a:	693b      	ldr	r3, [r7, #16]
 8004b7c:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8004b80:	613b      	str	r3, [r7, #16]
 8004b82:	693b      	ldr	r3, [r7, #16]
 8004b84:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8004b88:	613b      	str	r3, [r7, #16]
 8004b8a:	683b      	ldr	r3, [r7, #0]
 8004b8c:	695b      	ldr	r3, [r3, #20]
 8004b8e:	011b      	lsls	r3, r3, #4
 8004b90:	693a      	ldr	r2, [r7, #16]
 8004b92:	4313      	orrs	r3, r2
 8004b94:	613b      	str	r3, [r7, #16]
 8004b96:	683b      	ldr	r3, [r7, #0]
 8004b98:	699b      	ldr	r3, [r3, #24]
 8004b9a:	011b      	lsls	r3, r3, #4
 8004b9c:	693a      	ldr	r2, [r7, #16]
 8004b9e:	4313      	orrs	r3, r2
 8004ba0:	613b      	str	r3, [r7, #16]
 8004ba2:	687b      	ldr	r3, [r7, #4]
 8004ba4:	693a      	ldr	r2, [r7, #16]
 8004ba6:	605a      	str	r2, [r3, #4]
 8004ba8:	687b      	ldr	r3, [r7, #4]
 8004baa:	68fa      	ldr	r2, [r7, #12]
 8004bac:	61da      	str	r2, [r3, #28]
 8004bae:	683b      	ldr	r3, [r7, #0]
 8004bb0:	685a      	ldr	r2, [r3, #4]
 8004bb2:	687b      	ldr	r3, [r7, #4]
 8004bb4:	63da      	str	r2, [r3, #60]	@ 0x3c
 8004bb6:	687b      	ldr	r3, [r7, #4]
 8004bb8:	697a      	ldr	r2, [r7, #20]
 8004bba:	621a      	str	r2, [r3, #32]
 8004bbc:	bf00      	nop
 8004bbe:	371c      	adds	r7, #28
 8004bc0:	46bd      	mov	sp, r7
 8004bc2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004bc6:	4770      	bx	lr
 8004bc8:	40010000 	.word	0x40010000
 8004bcc:	40010400 	.word	0x40010400

08004bd0 <TIM_OC4_SetConfig>:
 8004bd0:	b480      	push	{r7}
 8004bd2:	b087      	sub	sp, #28
 8004bd4:	af00      	add	r7, sp, #0
 8004bd6:	6078      	str	r0, [r7, #4]
 8004bd8:	6039      	str	r1, [r7, #0]
 8004bda:	687b      	ldr	r3, [r7, #4]
 8004bdc:	6a1b      	ldr	r3, [r3, #32]
 8004bde:	613b      	str	r3, [r7, #16]
 8004be0:	687b      	ldr	r3, [r7, #4]
 8004be2:	6a1b      	ldr	r3, [r3, #32]
 8004be4:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8004be8:	687b      	ldr	r3, [r7, #4]
 8004bea:	621a      	str	r2, [r3, #32]
 8004bec:	687b      	ldr	r3, [r7, #4]
 8004bee:	685b      	ldr	r3, [r3, #4]
 8004bf0:	617b      	str	r3, [r7, #20]
 8004bf2:	687b      	ldr	r3, [r7, #4]
 8004bf4:	69db      	ldr	r3, [r3, #28]
 8004bf6:	60fb      	str	r3, [r7, #12]
 8004bf8:	68fb      	ldr	r3, [r7, #12]
 8004bfa:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8004bfe:	60fb      	str	r3, [r7, #12]
 8004c00:	68fb      	ldr	r3, [r7, #12]
 8004c02:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8004c06:	60fb      	str	r3, [r7, #12]
 8004c08:	683b      	ldr	r3, [r7, #0]
 8004c0a:	681b      	ldr	r3, [r3, #0]
 8004c0c:	021b      	lsls	r3, r3, #8
 8004c0e:	68fa      	ldr	r2, [r7, #12]
 8004c10:	4313      	orrs	r3, r2
 8004c12:	60fb      	str	r3, [r7, #12]
 8004c14:	693b      	ldr	r3, [r7, #16]
 8004c16:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8004c1a:	613b      	str	r3, [r7, #16]
 8004c1c:	683b      	ldr	r3, [r7, #0]
 8004c1e:	689b      	ldr	r3, [r3, #8]
 8004c20:	031b      	lsls	r3, r3, #12
 8004c22:	693a      	ldr	r2, [r7, #16]
 8004c24:	4313      	orrs	r3, r2
 8004c26:	613b      	str	r3, [r7, #16]
 8004c28:	687b      	ldr	r3, [r7, #4]
 8004c2a:	4a12      	ldr	r2, [pc, #72]	@ (8004c74 <TIM_OC4_SetConfig+0xa4>)
 8004c2c:	4293      	cmp	r3, r2
 8004c2e:	d003      	beq.n	8004c38 <TIM_OC4_SetConfig+0x68>
 8004c30:	687b      	ldr	r3, [r7, #4]
 8004c32:	4a11      	ldr	r2, [pc, #68]	@ (8004c78 <TIM_OC4_SetConfig+0xa8>)
 8004c34:	4293      	cmp	r3, r2
 8004c36:	d109      	bne.n	8004c4c <TIM_OC4_SetConfig+0x7c>
 8004c38:	697b      	ldr	r3, [r7, #20]
 8004c3a:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8004c3e:	617b      	str	r3, [r7, #20]
 8004c40:	683b      	ldr	r3, [r7, #0]
 8004c42:	695b      	ldr	r3, [r3, #20]
 8004c44:	019b      	lsls	r3, r3, #6
 8004c46:	697a      	ldr	r2, [r7, #20]
 8004c48:	4313      	orrs	r3, r2
 8004c4a:	617b      	str	r3, [r7, #20]
 8004c4c:	687b      	ldr	r3, [r7, #4]
 8004c4e:	697a      	ldr	r2, [r7, #20]
 8004c50:	605a      	str	r2, [r3, #4]
 8004c52:	687b      	ldr	r3, [r7, #4]
 8004c54:	68fa      	ldr	r2, [r7, #12]
 8004c56:	61da      	str	r2, [r3, #28]
 8004c58:	683b      	ldr	r3, [r7, #0]
 8004c5a:	685a      	ldr	r2, [r3, #4]
 8004c5c:	687b      	ldr	r3, [r7, #4]
 8004c5e:	641a      	str	r2, [r3, #64]	@ 0x40
 8004c60:	687b      	ldr	r3, [r7, #4]
 8004c62:	693a      	ldr	r2, [r7, #16]
 8004c64:	621a      	str	r2, [r3, #32]
 8004c66:	bf00      	nop
 8004c68:	371c      	adds	r7, #28
 8004c6a:	46bd      	mov	sp, r7
 8004c6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004c70:	4770      	bx	lr
 8004c72:	bf00      	nop
 8004c74:	40010000 	.word	0x40010000
 8004c78:	40010400 	.word	0x40010400

08004c7c <TIM_TI1_ConfigInputStage>:
 8004c7c:	b480      	push	{r7}
 8004c7e:	b087      	sub	sp, #28
 8004c80:	af00      	add	r7, sp, #0
 8004c82:	60f8      	str	r0, [r7, #12]
 8004c84:	60b9      	str	r1, [r7, #8]
 8004c86:	607a      	str	r2, [r7, #4]
 8004c88:	68fb      	ldr	r3, [r7, #12]
 8004c8a:	6a1b      	ldr	r3, [r3, #32]
 8004c8c:	617b      	str	r3, [r7, #20]
 8004c8e:	68fb      	ldr	r3, [r7, #12]
 8004c90:	6a1b      	ldr	r3, [r3, #32]
 8004c92:	f023 0201 	bic.w	r2, r3, #1
 8004c96:	68fb      	ldr	r3, [r7, #12]
 8004c98:	621a      	str	r2, [r3, #32]
 8004c9a:	68fb      	ldr	r3, [r7, #12]
 8004c9c:	699b      	ldr	r3, [r3, #24]
 8004c9e:	613b      	str	r3, [r7, #16]
 8004ca0:	693b      	ldr	r3, [r7, #16]
 8004ca2:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8004ca6:	613b      	str	r3, [r7, #16]
 8004ca8:	687b      	ldr	r3, [r7, #4]
 8004caa:	011b      	lsls	r3, r3, #4
 8004cac:	693a      	ldr	r2, [r7, #16]
 8004cae:	4313      	orrs	r3, r2
 8004cb0:	613b      	str	r3, [r7, #16]
 8004cb2:	697b      	ldr	r3, [r7, #20]
 8004cb4:	f023 030a 	bic.w	r3, r3, #10
 8004cb8:	617b      	str	r3, [r7, #20]
 8004cba:	697a      	ldr	r2, [r7, #20]
 8004cbc:	68bb      	ldr	r3, [r7, #8]
 8004cbe:	4313      	orrs	r3, r2
 8004cc0:	617b      	str	r3, [r7, #20]
 8004cc2:	68fb      	ldr	r3, [r7, #12]
 8004cc4:	693a      	ldr	r2, [r7, #16]
 8004cc6:	619a      	str	r2, [r3, #24]
 8004cc8:	68fb      	ldr	r3, [r7, #12]
 8004cca:	697a      	ldr	r2, [r7, #20]
 8004ccc:	621a      	str	r2, [r3, #32]
 8004cce:	bf00      	nop
 8004cd0:	371c      	adds	r7, #28
 8004cd2:	46bd      	mov	sp, r7
 8004cd4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004cd8:	4770      	bx	lr

08004cda <TIM_TI2_ConfigInputStage>:
 8004cda:	b480      	push	{r7}
 8004cdc:	b087      	sub	sp, #28
 8004cde:	af00      	add	r7, sp, #0
 8004ce0:	60f8      	str	r0, [r7, #12]
 8004ce2:	60b9      	str	r1, [r7, #8]
 8004ce4:	607a      	str	r2, [r7, #4]
 8004ce6:	68fb      	ldr	r3, [r7, #12]
 8004ce8:	6a1b      	ldr	r3, [r3, #32]
 8004cea:	617b      	str	r3, [r7, #20]
 8004cec:	68fb      	ldr	r3, [r7, #12]
 8004cee:	6a1b      	ldr	r3, [r3, #32]
 8004cf0:	f023 0210 	bic.w	r2, r3, #16
 8004cf4:	68fb      	ldr	r3, [r7, #12]
 8004cf6:	621a      	str	r2, [r3, #32]
 8004cf8:	68fb      	ldr	r3, [r7, #12]
 8004cfa:	699b      	ldr	r3, [r3, #24]
 8004cfc:	613b      	str	r3, [r7, #16]
 8004cfe:	693b      	ldr	r3, [r7, #16]
 8004d00:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8004d04:	613b      	str	r3, [r7, #16]
 8004d06:	687b      	ldr	r3, [r7, #4]
 8004d08:	031b      	lsls	r3, r3, #12
 8004d0a:	693a      	ldr	r2, [r7, #16]
 8004d0c:	4313      	orrs	r3, r2
 8004d0e:	613b      	str	r3, [r7, #16]
 8004d10:	697b      	ldr	r3, [r7, #20]
 8004d12:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 8004d16:	617b      	str	r3, [r7, #20]
 8004d18:	68bb      	ldr	r3, [r7, #8]
 8004d1a:	011b      	lsls	r3, r3, #4
 8004d1c:	697a      	ldr	r2, [r7, #20]
 8004d1e:	4313      	orrs	r3, r2
 8004d20:	617b      	str	r3, [r7, #20]
 8004d22:	68fb      	ldr	r3, [r7, #12]
 8004d24:	693a      	ldr	r2, [r7, #16]
 8004d26:	619a      	str	r2, [r3, #24]
 8004d28:	68fb      	ldr	r3, [r7, #12]
 8004d2a:	697a      	ldr	r2, [r7, #20]
 8004d2c:	621a      	str	r2, [r3, #32]
 8004d2e:	bf00      	nop
 8004d30:	371c      	adds	r7, #28
 8004d32:	46bd      	mov	sp, r7
 8004d34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d38:	4770      	bx	lr

08004d3a <TIM_ITRx_SetConfig>:
 8004d3a:	b480      	push	{r7}
 8004d3c:	b085      	sub	sp, #20
 8004d3e:	af00      	add	r7, sp, #0
 8004d40:	6078      	str	r0, [r7, #4]
 8004d42:	6039      	str	r1, [r7, #0]
 8004d44:	687b      	ldr	r3, [r7, #4]
 8004d46:	689b      	ldr	r3, [r3, #8]
 8004d48:	60fb      	str	r3, [r7, #12]
 8004d4a:	68fb      	ldr	r3, [r7, #12]
 8004d4c:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004d50:	60fb      	str	r3, [r7, #12]
 8004d52:	683a      	ldr	r2, [r7, #0]
 8004d54:	68fb      	ldr	r3, [r7, #12]
 8004d56:	4313      	orrs	r3, r2
 8004d58:	f043 0307 	orr.w	r3, r3, #7
 8004d5c:	60fb      	str	r3, [r7, #12]
 8004d5e:	687b      	ldr	r3, [r7, #4]
 8004d60:	68fa      	ldr	r2, [r7, #12]
 8004d62:	609a      	str	r2, [r3, #8]
 8004d64:	bf00      	nop
 8004d66:	3714      	adds	r7, #20
 8004d68:	46bd      	mov	sp, r7
 8004d6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d6e:	4770      	bx	lr

08004d70 <TIM_ETR_SetConfig>:
 8004d70:	b480      	push	{r7}
 8004d72:	b087      	sub	sp, #28
 8004d74:	af00      	add	r7, sp, #0
 8004d76:	60f8      	str	r0, [r7, #12]
 8004d78:	60b9      	str	r1, [r7, #8]
 8004d7a:	607a      	str	r2, [r7, #4]
 8004d7c:	603b      	str	r3, [r7, #0]
 8004d7e:	68fb      	ldr	r3, [r7, #12]
 8004d80:	689b      	ldr	r3, [r3, #8]
 8004d82:	617b      	str	r3, [r7, #20]
 8004d84:	697b      	ldr	r3, [r7, #20]
 8004d86:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8004d8a:	617b      	str	r3, [r7, #20]
 8004d8c:	683b      	ldr	r3, [r7, #0]
 8004d8e:	021a      	lsls	r2, r3, #8
 8004d90:	687b      	ldr	r3, [r7, #4]
 8004d92:	431a      	orrs	r2, r3
 8004d94:	68bb      	ldr	r3, [r7, #8]
 8004d96:	4313      	orrs	r3, r2
 8004d98:	697a      	ldr	r2, [r7, #20]
 8004d9a:	4313      	orrs	r3, r2
 8004d9c:	617b      	str	r3, [r7, #20]
 8004d9e:	68fb      	ldr	r3, [r7, #12]
 8004da0:	697a      	ldr	r2, [r7, #20]
 8004da2:	609a      	str	r2, [r3, #8]
 8004da4:	bf00      	nop
 8004da6:	371c      	adds	r7, #28
 8004da8:	46bd      	mov	sp, r7
 8004daa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004dae:	4770      	bx	lr

08004db0 <TIM_CCxChannelCmd>:
 8004db0:	b480      	push	{r7}
 8004db2:	b087      	sub	sp, #28
 8004db4:	af00      	add	r7, sp, #0
 8004db6:	60f8      	str	r0, [r7, #12]
 8004db8:	60b9      	str	r1, [r7, #8]
 8004dba:	607a      	str	r2, [r7, #4]
 8004dbc:	68bb      	ldr	r3, [r7, #8]
 8004dbe:	f003 031f 	and.w	r3, r3, #31
 8004dc2:	2201      	movs	r2, #1
 8004dc4:	fa02 f303 	lsl.w	r3, r2, r3
 8004dc8:	617b      	str	r3, [r7, #20]
 8004dca:	68fb      	ldr	r3, [r7, #12]
 8004dcc:	6a1a      	ldr	r2, [r3, #32]
 8004dce:	697b      	ldr	r3, [r7, #20]
 8004dd0:	43db      	mvns	r3, r3
 8004dd2:	401a      	ands	r2, r3
 8004dd4:	68fb      	ldr	r3, [r7, #12]
 8004dd6:	621a      	str	r2, [r3, #32]
 8004dd8:	68fb      	ldr	r3, [r7, #12]
 8004dda:	6a1a      	ldr	r2, [r3, #32]
 8004ddc:	68bb      	ldr	r3, [r7, #8]
 8004dde:	f003 031f 	and.w	r3, r3, #31
 8004de2:	6879      	ldr	r1, [r7, #4]
 8004de4:	fa01 f303 	lsl.w	r3, r1, r3
 8004de8:	431a      	orrs	r2, r3
 8004dea:	68fb      	ldr	r3, [r7, #12]
 8004dec:	621a      	str	r2, [r3, #32]
 8004dee:	bf00      	nop
 8004df0:	371c      	adds	r7, #28
 8004df2:	46bd      	mov	sp, r7
 8004df4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004df8:	4770      	bx	lr
	...

08004dfc <HAL_TIMEx_MasterConfigSynchronization>:
 8004dfc:	b480      	push	{r7}
 8004dfe:	b085      	sub	sp, #20
 8004e00:	af00      	add	r7, sp, #0
 8004e02:	6078      	str	r0, [r7, #4]
 8004e04:	6039      	str	r1, [r7, #0]
 8004e06:	687b      	ldr	r3, [r7, #4]
 8004e08:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8004e0c:	2b01      	cmp	r3, #1
 8004e0e:	d101      	bne.n	8004e14 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8004e10:	2302      	movs	r3, #2
 8004e12:	e05a      	b.n	8004eca <HAL_TIMEx_MasterConfigSynchronization+0xce>
 8004e14:	687b      	ldr	r3, [r7, #4]
 8004e16:	2201      	movs	r2, #1
 8004e18:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004e1c:	687b      	ldr	r3, [r7, #4]
 8004e1e:	2202      	movs	r2, #2
 8004e20:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004e24:	687b      	ldr	r3, [r7, #4]
 8004e26:	681b      	ldr	r3, [r3, #0]
 8004e28:	685b      	ldr	r3, [r3, #4]
 8004e2a:	60fb      	str	r3, [r7, #12]
 8004e2c:	687b      	ldr	r3, [r7, #4]
 8004e2e:	681b      	ldr	r3, [r3, #0]
 8004e30:	689b      	ldr	r3, [r3, #8]
 8004e32:	60bb      	str	r3, [r7, #8]
 8004e34:	68fb      	ldr	r3, [r7, #12]
 8004e36:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004e3a:	60fb      	str	r3, [r7, #12]
 8004e3c:	683b      	ldr	r3, [r7, #0]
 8004e3e:	681b      	ldr	r3, [r3, #0]
 8004e40:	68fa      	ldr	r2, [r7, #12]
 8004e42:	4313      	orrs	r3, r2
 8004e44:	60fb      	str	r3, [r7, #12]
 8004e46:	687b      	ldr	r3, [r7, #4]
 8004e48:	681b      	ldr	r3, [r3, #0]
 8004e4a:	68fa      	ldr	r2, [r7, #12]
 8004e4c:	605a      	str	r2, [r3, #4]
 8004e4e:	687b      	ldr	r3, [r7, #4]
 8004e50:	681b      	ldr	r3, [r3, #0]
 8004e52:	4a21      	ldr	r2, [pc, #132]	@ (8004ed8 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 8004e54:	4293      	cmp	r3, r2
 8004e56:	d022      	beq.n	8004e9e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8004e58:	687b      	ldr	r3, [r7, #4]
 8004e5a:	681b      	ldr	r3, [r3, #0]
 8004e5c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8004e60:	d01d      	beq.n	8004e9e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8004e62:	687b      	ldr	r3, [r7, #4]
 8004e64:	681b      	ldr	r3, [r3, #0]
 8004e66:	4a1d      	ldr	r2, [pc, #116]	@ (8004edc <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 8004e68:	4293      	cmp	r3, r2
 8004e6a:	d018      	beq.n	8004e9e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8004e6c:	687b      	ldr	r3, [r7, #4]
 8004e6e:	681b      	ldr	r3, [r3, #0]
 8004e70:	4a1b      	ldr	r2, [pc, #108]	@ (8004ee0 <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 8004e72:	4293      	cmp	r3, r2
 8004e74:	d013      	beq.n	8004e9e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8004e76:	687b      	ldr	r3, [r7, #4]
 8004e78:	681b      	ldr	r3, [r3, #0]
 8004e7a:	4a1a      	ldr	r2, [pc, #104]	@ (8004ee4 <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 8004e7c:	4293      	cmp	r3, r2
 8004e7e:	d00e      	beq.n	8004e9e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8004e80:	687b      	ldr	r3, [r7, #4]
 8004e82:	681b      	ldr	r3, [r3, #0]
 8004e84:	4a18      	ldr	r2, [pc, #96]	@ (8004ee8 <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 8004e86:	4293      	cmp	r3, r2
 8004e88:	d009      	beq.n	8004e9e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8004e8a:	687b      	ldr	r3, [r7, #4]
 8004e8c:	681b      	ldr	r3, [r3, #0]
 8004e8e:	4a17      	ldr	r2, [pc, #92]	@ (8004eec <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 8004e90:	4293      	cmp	r3, r2
 8004e92:	d004      	beq.n	8004e9e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8004e94:	687b      	ldr	r3, [r7, #4]
 8004e96:	681b      	ldr	r3, [r3, #0]
 8004e98:	4a15      	ldr	r2, [pc, #84]	@ (8004ef0 <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 8004e9a:	4293      	cmp	r3, r2
 8004e9c:	d10c      	bne.n	8004eb8 <HAL_TIMEx_MasterConfigSynchronization+0xbc>
 8004e9e:	68bb      	ldr	r3, [r7, #8]
 8004ea0:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8004ea4:	60bb      	str	r3, [r7, #8]
 8004ea6:	683b      	ldr	r3, [r7, #0]
 8004ea8:	685b      	ldr	r3, [r3, #4]
 8004eaa:	68ba      	ldr	r2, [r7, #8]
 8004eac:	4313      	orrs	r3, r2
 8004eae:	60bb      	str	r3, [r7, #8]
 8004eb0:	687b      	ldr	r3, [r7, #4]
 8004eb2:	681b      	ldr	r3, [r3, #0]
 8004eb4:	68ba      	ldr	r2, [r7, #8]
 8004eb6:	609a      	str	r2, [r3, #8]
 8004eb8:	687b      	ldr	r3, [r7, #4]
 8004eba:	2201      	movs	r2, #1
 8004ebc:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004ec0:	687b      	ldr	r3, [r7, #4]
 8004ec2:	2200      	movs	r2, #0
 8004ec4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004ec8:	2300      	movs	r3, #0
 8004eca:	4618      	mov	r0, r3
 8004ecc:	3714      	adds	r7, #20
 8004ece:	46bd      	mov	sp, r7
 8004ed0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004ed4:	4770      	bx	lr
 8004ed6:	bf00      	nop
 8004ed8:	40010000 	.word	0x40010000
 8004edc:	40000400 	.word	0x40000400
 8004ee0:	40000800 	.word	0x40000800
 8004ee4:	40000c00 	.word	0x40000c00
 8004ee8:	40010400 	.word	0x40010400
 8004eec:	40014000 	.word	0x40014000
 8004ef0:	40001800 	.word	0x40001800

08004ef4 <HAL_TIMEx_ConfigBreakDeadTime>:
 8004ef4:	b480      	push	{r7}
 8004ef6:	b085      	sub	sp, #20
 8004ef8:	af00      	add	r7, sp, #0
 8004efa:	6078      	str	r0, [r7, #4]
 8004efc:	6039      	str	r1, [r7, #0]
 8004efe:	2300      	movs	r3, #0
 8004f00:	60fb      	str	r3, [r7, #12]
 8004f02:	687b      	ldr	r3, [r7, #4]
 8004f04:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8004f08:	2b01      	cmp	r3, #1
 8004f0a:	d101      	bne.n	8004f10 <HAL_TIMEx_ConfigBreakDeadTime+0x1c>
 8004f0c:	2302      	movs	r3, #2
 8004f0e:	e03d      	b.n	8004f8c <HAL_TIMEx_ConfigBreakDeadTime+0x98>
 8004f10:	687b      	ldr	r3, [r7, #4]
 8004f12:	2201      	movs	r2, #1
 8004f14:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004f18:	68fb      	ldr	r3, [r7, #12]
 8004f1a:	f023 02ff 	bic.w	r2, r3, #255	@ 0xff
 8004f1e:	683b      	ldr	r3, [r7, #0]
 8004f20:	68db      	ldr	r3, [r3, #12]
 8004f22:	4313      	orrs	r3, r2
 8004f24:	60fb      	str	r3, [r7, #12]
 8004f26:	68fb      	ldr	r3, [r7, #12]
 8004f28:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 8004f2c:	683b      	ldr	r3, [r7, #0]
 8004f2e:	689b      	ldr	r3, [r3, #8]
 8004f30:	4313      	orrs	r3, r2
 8004f32:	60fb      	str	r3, [r7, #12]
 8004f34:	68fb      	ldr	r3, [r7, #12]
 8004f36:	f423 6280 	bic.w	r2, r3, #1024	@ 0x400
 8004f3a:	683b      	ldr	r3, [r7, #0]
 8004f3c:	685b      	ldr	r3, [r3, #4]
 8004f3e:	4313      	orrs	r3, r2
 8004f40:	60fb      	str	r3, [r7, #12]
 8004f42:	68fb      	ldr	r3, [r7, #12]
 8004f44:	f423 6200 	bic.w	r2, r3, #2048	@ 0x800
 8004f48:	683b      	ldr	r3, [r7, #0]
 8004f4a:	681b      	ldr	r3, [r3, #0]
 8004f4c:	4313      	orrs	r3, r2
 8004f4e:	60fb      	str	r3, [r7, #12]
 8004f50:	68fb      	ldr	r3, [r7, #12]
 8004f52:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8004f56:	683b      	ldr	r3, [r7, #0]
 8004f58:	691b      	ldr	r3, [r3, #16]
 8004f5a:	4313      	orrs	r3, r2
 8004f5c:	60fb      	str	r3, [r7, #12]
 8004f5e:	68fb      	ldr	r3, [r7, #12]
 8004f60:	f423 5200 	bic.w	r2, r3, #8192	@ 0x2000
 8004f64:	683b      	ldr	r3, [r7, #0]
 8004f66:	695b      	ldr	r3, [r3, #20]
 8004f68:	4313      	orrs	r3, r2
 8004f6a:	60fb      	str	r3, [r7, #12]
 8004f6c:	68fb      	ldr	r3, [r7, #12]
 8004f6e:	f423 4280 	bic.w	r2, r3, #16384	@ 0x4000
 8004f72:	683b      	ldr	r3, [r7, #0]
 8004f74:	69db      	ldr	r3, [r3, #28]
 8004f76:	4313      	orrs	r3, r2
 8004f78:	60fb      	str	r3, [r7, #12]
 8004f7a:	687b      	ldr	r3, [r7, #4]
 8004f7c:	681b      	ldr	r3, [r3, #0]
 8004f7e:	68fa      	ldr	r2, [r7, #12]
 8004f80:	645a      	str	r2, [r3, #68]	@ 0x44
 8004f82:	687b      	ldr	r3, [r7, #4]
 8004f84:	2200      	movs	r2, #0
 8004f86:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004f8a:	2300      	movs	r3, #0
 8004f8c:	4618      	mov	r0, r3
 8004f8e:	3714      	adds	r7, #20
 8004f90:	46bd      	mov	sp, r7
 8004f92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004f96:	4770      	bx	lr

08004f98 <arm_rfft_fast_init_f32>:
 8004f98:	084b      	lsrs	r3, r1, #1
 8004f9a:	2b80      	cmp	r3, #128	@ 0x80
 8004f9c:	b410      	push	{r4}
 8004f9e:	8201      	strh	r1, [r0, #16]
 8004fa0:	8003      	strh	r3, [r0, #0]
 8004fa2:	d047      	beq.n	8005034 <arm_rfft_fast_init_f32+0x9c>
 8004fa4:	d917      	bls.n	8004fd6 <arm_rfft_fast_init_f32+0x3e>
 8004fa6:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8004faa:	d03d      	beq.n	8005028 <arm_rfft_fast_init_f32+0x90>
 8004fac:	d929      	bls.n	8005002 <arm_rfft_fast_init_f32+0x6a>
 8004fae:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8004fb2:	d020      	beq.n	8004ff6 <arm_rfft_fast_init_f32+0x5e>
 8004fb4:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8004fb8:	d113      	bne.n	8004fe2 <arm_rfft_fast_init_f32+0x4a>
 8004fba:	4921      	ldr	r1, [pc, #132]	@ (8005040 <arm_rfft_fast_init_f32+0xa8>)
 8004fbc:	4a21      	ldr	r2, [pc, #132]	@ (8005044 <arm_rfft_fast_init_f32+0xac>)
 8004fbe:	4b22      	ldr	r3, [pc, #136]	@ (8005048 <arm_rfft_fast_init_f32+0xb0>)
 8004fc0:	f44f 646e 	mov.w	r4, #3808	@ 0xee0
 8004fc4:	8184      	strh	r4, [r0, #12]
 8004fc6:	6081      	str	r1, [r0, #8]
 8004fc8:	6042      	str	r2, [r0, #4]
 8004fca:	6143      	str	r3, [r0, #20]
 8004fcc:	2000      	movs	r0, #0
 8004fce:	b240      	sxtb	r0, r0
 8004fd0:	f85d 4b04 	ldr.w	r4, [sp], #4
 8004fd4:	4770      	bx	lr
 8004fd6:	2b20      	cmp	r3, #32
 8004fd8:	d01c      	beq.n	8005014 <arm_rfft_fast_init_f32+0x7c>
 8004fda:	2b40      	cmp	r3, #64	@ 0x40
 8004fdc:	d006      	beq.n	8004fec <arm_rfft_fast_init_f32+0x54>
 8004fde:	2b10      	cmp	r3, #16
 8004fe0:	d01d      	beq.n	800501e <arm_rfft_fast_init_f32+0x86>
 8004fe2:	20ff      	movs	r0, #255	@ 0xff
 8004fe4:	b240      	sxtb	r0, r0
 8004fe6:	f85d 4b04 	ldr.w	r4, [sp], #4
 8004fea:	4770      	bx	lr
 8004fec:	2438      	movs	r4, #56	@ 0x38
 8004fee:	4917      	ldr	r1, [pc, #92]	@ (800504c <arm_rfft_fast_init_f32+0xb4>)
 8004ff0:	4a17      	ldr	r2, [pc, #92]	@ (8005050 <arm_rfft_fast_init_f32+0xb8>)
 8004ff2:	4b18      	ldr	r3, [pc, #96]	@ (8005054 <arm_rfft_fast_init_f32+0xbc>)
 8004ff4:	e7e6      	b.n	8004fc4 <arm_rfft_fast_init_f32+0x2c>
 8004ff6:	f44f 64e1 	mov.w	r4, #1800	@ 0x708
 8004ffa:	4917      	ldr	r1, [pc, #92]	@ (8005058 <arm_rfft_fast_init_f32+0xc0>)
 8004ffc:	4a17      	ldr	r2, [pc, #92]	@ (800505c <arm_rfft_fast_init_f32+0xc4>)
 8004ffe:	4b18      	ldr	r3, [pc, #96]	@ (8005060 <arm_rfft_fast_init_f32+0xc8>)
 8005000:	e7e0      	b.n	8004fc4 <arm_rfft_fast_init_f32+0x2c>
 8005002:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8005006:	d1ec      	bne.n	8004fe2 <arm_rfft_fast_init_f32+0x4a>
 8005008:	f44f 74dc 	mov.w	r4, #440	@ 0x1b8
 800500c:	4915      	ldr	r1, [pc, #84]	@ (8005064 <arm_rfft_fast_init_f32+0xcc>)
 800500e:	4a16      	ldr	r2, [pc, #88]	@ (8005068 <arm_rfft_fast_init_f32+0xd0>)
 8005010:	4b16      	ldr	r3, [pc, #88]	@ (800506c <arm_rfft_fast_init_f32+0xd4>)
 8005012:	e7d7      	b.n	8004fc4 <arm_rfft_fast_init_f32+0x2c>
 8005014:	2430      	movs	r4, #48	@ 0x30
 8005016:	4916      	ldr	r1, [pc, #88]	@ (8005070 <arm_rfft_fast_init_f32+0xd8>)
 8005018:	4a16      	ldr	r2, [pc, #88]	@ (8005074 <arm_rfft_fast_init_f32+0xdc>)
 800501a:	4b17      	ldr	r3, [pc, #92]	@ (8005078 <arm_rfft_fast_init_f32+0xe0>)
 800501c:	e7d2      	b.n	8004fc4 <arm_rfft_fast_init_f32+0x2c>
 800501e:	2414      	movs	r4, #20
 8005020:	4916      	ldr	r1, [pc, #88]	@ (800507c <arm_rfft_fast_init_f32+0xe4>)
 8005022:	4a17      	ldr	r2, [pc, #92]	@ (8005080 <arm_rfft_fast_init_f32+0xe8>)
 8005024:	4b17      	ldr	r3, [pc, #92]	@ (8005084 <arm_rfft_fast_init_f32+0xec>)
 8005026:	e7cd      	b.n	8004fc4 <arm_rfft_fast_init_f32+0x2c>
 8005028:	f44f 74e0 	mov.w	r4, #448	@ 0x1c0
 800502c:	4916      	ldr	r1, [pc, #88]	@ (8005088 <arm_rfft_fast_init_f32+0xf0>)
 800502e:	4a17      	ldr	r2, [pc, #92]	@ (800508c <arm_rfft_fast_init_f32+0xf4>)
 8005030:	4b17      	ldr	r3, [pc, #92]	@ (8005090 <arm_rfft_fast_init_f32+0xf8>)
 8005032:	e7c7      	b.n	8004fc4 <arm_rfft_fast_init_f32+0x2c>
 8005034:	24d0      	movs	r4, #208	@ 0xd0
 8005036:	4917      	ldr	r1, [pc, #92]	@ (8005094 <arm_rfft_fast_init_f32+0xfc>)
 8005038:	4a17      	ldr	r2, [pc, #92]	@ (8005098 <arm_rfft_fast_init_f32+0x100>)
 800503a:	4b18      	ldr	r3, [pc, #96]	@ (800509c <arm_rfft_fast_init_f32+0x104>)
 800503c:	e7c2      	b.n	8004fc4 <arm_rfft_fast_init_f32+0x2c>
 800503e:	bf00      	nop
 8005040:	08015880 	.word	0x08015880
 8005044:	08006a78 	.word	0x08006a78
 8005048:	0800cbe8 	.word	0x0800cbe8
 800504c:	0800ab78 	.word	0x0800ab78
 8005050:	08017640 	.word	0x08017640
 8005054:	08019b30 	.word	0x08019b30
 8005058:	08013568 	.word	0x08013568
 800505c:	08011468 	.word	0x08011468
 8005060:	0800abe8 	.word	0x0800abe8
 8005064:	080197c0 	.word	0x080197c0
 8005068:	08010be8 	.word	0x08010be8
 800506c:	08017840 	.word	0x08017840
 8005070:	08014420 	.word	0x08014420
 8005074:	08013468 	.word	0x08013468
 8005078:	0800aa78 	.word	0x0800aa78
 800507c:	08014378 	.word	0x08014378
 8005080:	080113e8 	.word	0x080113e8
 8005084:	080143a0 	.word	0x080143a0
 8005088:	08018040 	.word	0x08018040
 800508c:	08014880 	.word	0x08014880
 8005090:	080183c0 	.word	0x080183c0
 8005094:	08019d30 	.word	0x08019d30
 8005098:	08014480 	.word	0x08014480
 800509c:	080193c0 	.word	0x080193c0

080050a0 <arm_rfft_fast_f32>:
 80050a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80050a4:	8a06      	ldrh	r6, [r0, #16]
 80050a6:	0876      	lsrs	r6, r6, #1
 80050a8:	4607      	mov	r7, r0
 80050aa:	4615      	mov	r5, r2
 80050ac:	8006      	strh	r6, [r0, #0]
 80050ae:	460c      	mov	r4, r1
 80050b0:	2b00      	cmp	r3, #0
 80050b2:	d15c      	bne.n	800516e <arm_rfft_fast_f32+0xce>
 80050b4:	461a      	mov	r2, r3
 80050b6:	2301      	movs	r3, #1
 80050b8:	f000 fbe6 	bl	8005888 <arm_cfft_f32>
 80050bc:	edd4 7a00 	vldr	s15, [r4]
 80050c0:	ed94 7a01 	vldr	s14, [r4, #4]
 80050c4:	883e      	ldrh	r6, [r7, #0]
 80050c6:	6978      	ldr	r0, [r7, #20]
 80050c8:	ee37 7a07 	vadd.f32	s14, s14, s14
 80050cc:	ee77 7aa7 	vadd.f32	s15, s15, s15
 80050d0:	eef6 3a00 	vmov.f32	s7, #96	@ 0x3f000000  0.5
 80050d4:	ee77 6a87 	vadd.f32	s13, s15, s14
 80050d8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80050dc:	3e01      	subs	r6, #1
 80050de:	ee26 7aa3 	vmul.f32	s14, s13, s7
 80050e2:	ee67 7aa3 	vmul.f32	s15, s15, s7
 80050e6:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 80050ea:	ed85 7a00 	vstr	s14, [r5]
 80050ee:	edc5 7a01 	vstr	s15, [r5, #4]
 80050f2:	3010      	adds	r0, #16
 80050f4:	f105 0210 	add.w	r2, r5, #16
 80050f8:	3b08      	subs	r3, #8
 80050fa:	f104 0110 	add.w	r1, r4, #16
 80050fe:	ed51 4a02 	vldr	s9, [r1, #-8]
 8005102:	ed93 5a02 	vldr	s10, [r3, #8]
 8005106:	ed11 7a01 	vldr	s14, [r1, #-4]
 800510a:	ed10 6a02 	vldr	s12, [r0, #-8]
 800510e:	edd3 5a03 	vldr	s11, [r3, #12]
 8005112:	ed50 6a01 	vldr	s13, [r0, #-4]
 8005116:	ee75 7a64 	vsub.f32	s15, s10, s9
 800511a:	ee35 4a87 	vadd.f32	s8, s11, s14
 800511e:	ee35 5a24 	vadd.f32	s10, s10, s9
 8005122:	ee77 5a65 	vsub.f32	s11, s14, s11
 8005126:	ee66 4a27 	vmul.f32	s9, s12, s15
 800512a:	ee26 7aa7 	vmul.f32	s14, s13, s15
 800512e:	ee34 5a85 	vadd.f32	s10, s9, s10
 8005132:	ee26 6a04 	vmul.f32	s12, s12, s8
 8005136:	ee66 6a84 	vmul.f32	s13, s13, s8
 800513a:	ee77 7a25 	vadd.f32	s15, s14, s11
 800513e:	ee76 6a85 	vadd.f32	s13, s13, s10
 8005142:	ee77 7ac6 	vsub.f32	s15, s15, s12
 8005146:	ee66 6aa3 	vmul.f32	s13, s13, s7
 800514a:	ee67 7aa3 	vmul.f32	s15, s15, s7
 800514e:	3e01      	subs	r6, #1
 8005150:	ed42 6a02 	vstr	s13, [r2, #-8]
 8005154:	ed42 7a01 	vstr	s15, [r2, #-4]
 8005158:	f1a3 0308 	sub.w	r3, r3, #8
 800515c:	f101 0108 	add.w	r1, r1, #8
 8005160:	f100 0008 	add.w	r0, r0, #8
 8005164:	f102 0208 	add.w	r2, r2, #8
 8005168:	d1c9      	bne.n	80050fe <arm_rfft_fast_f32+0x5e>
 800516a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800516e:	edd1 7a00 	vldr	s15, [r1]
 8005172:	edd1 6a01 	vldr	s13, [r1, #4]
 8005176:	6941      	ldr	r1, [r0, #20]
 8005178:	ee37 7aa6 	vadd.f32	s14, s15, s13
 800517c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005180:	eef6 3a00 	vmov.f32	s7, #96	@ 0x3f000000  0.5
 8005184:	ee27 7a23 	vmul.f32	s14, s14, s7
 8005188:	ee67 7aa3 	vmul.f32	s15, s15, s7
 800518c:	3e01      	subs	r6, #1
 800518e:	ed82 7a00 	vstr	s14, [r2]
 8005192:	edc2 7a01 	vstr	s15, [r2, #4]
 8005196:	00f0      	lsls	r0, r6, #3
 8005198:	b3ee      	cbz	r6, 8005216 <arm_rfft_fast_f32+0x176>
 800519a:	3808      	subs	r0, #8
 800519c:	f101 0e10 	add.w	lr, r1, #16
 80051a0:	4420      	add	r0, r4
 80051a2:	f104 0110 	add.w	r1, r4, #16
 80051a6:	f102 0c10 	add.w	ip, r2, #16
 80051aa:	ed90 7a02 	vldr	s14, [r0, #8]
 80051ae:	ed51 6a02 	vldr	s13, [r1, #-8]
 80051b2:	ed1e 6a02 	vldr	s12, [lr, #-8]
 80051b6:	ed90 4a03 	vldr	s8, [r0, #12]
 80051ba:	ed11 5a01 	vldr	s10, [r1, #-4]
 80051be:	ed5e 5a01 	vldr	s11, [lr, #-4]
 80051c2:	ee76 7ac7 	vsub.f32	s15, s13, s14
 80051c6:	ee74 4a05 	vadd.f32	s9, s8, s10
 80051ca:	ee26 3a27 	vmul.f32	s6, s12, s15
 80051ce:	ee77 6a26 	vadd.f32	s13, s14, s13
 80051d2:	ee35 5a44 	vsub.f32	s10, s10, s8
 80051d6:	ee25 7aa7 	vmul.f32	s14, s11, s15
 80051da:	ee76 6ac3 	vsub.f32	s13, s13, s6
 80051de:	ee77 7a05 	vadd.f32	s15, s14, s10
 80051e2:	ee26 6a24 	vmul.f32	s12, s12, s9
 80051e6:	ee65 5aa4 	vmul.f32	s11, s11, s9
 80051ea:	ee77 7ac6 	vsub.f32	s15, s15, s12
 80051ee:	ee36 7ae5 	vsub.f32	s14, s13, s11
 80051f2:	ee67 7aa3 	vmul.f32	s15, s15, s7
 80051f6:	ee27 7a23 	vmul.f32	s14, s14, s7
 80051fa:	3e01      	subs	r6, #1
 80051fc:	ed0c 7a02 	vstr	s14, [ip, #-8]
 8005200:	ed4c 7a01 	vstr	s15, [ip, #-4]
 8005204:	f1a0 0008 	sub.w	r0, r0, #8
 8005208:	f101 0108 	add.w	r1, r1, #8
 800520c:	f10e 0e08 	add.w	lr, lr, #8
 8005210:	f10c 0c08 	add.w	ip, ip, #8
 8005214:	d1c9      	bne.n	80051aa <arm_rfft_fast_f32+0x10a>
 8005216:	4638      	mov	r0, r7
 8005218:	4629      	mov	r1, r5
 800521a:	461a      	mov	r2, r3
 800521c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8005220:	2301      	movs	r3, #1
 8005222:	f000 bb31 	b.w	8005888 <arm_cfft_f32>
 8005226:	bf00      	nop

08005228 <arm_cfft_radix8by2_f32>:
 8005228:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800522c:	ed2d 8b08 	vpush	{d8-d11}
 8005230:	f8b0 e000 	ldrh.w	lr, [r0]
 8005234:	6842      	ldr	r2, [r0, #4]
 8005236:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 800523a:	eb01 088e 	add.w	r8, r1, lr, lsl #2
 800523e:	ea5f 0ede 	movs.w	lr, lr, lsr #3
 8005242:	4607      	mov	r7, r0
 8005244:	ea4f 038c 	mov.w	r3, ip, lsl #2
 8005248:	f000 80af 	beq.w	80053aa <arm_cfft_radix8by2_f32+0x182>
 800524c:	3310      	adds	r3, #16
 800524e:	18ce      	adds	r6, r1, r3
 8005250:	3210      	adds	r2, #16
 8005252:	4443      	add	r3, r8
 8005254:	f101 0510 	add.w	r5, r1, #16
 8005258:	f108 0410 	add.w	r4, r8, #16
 800525c:	ed54 1a04 	vldr	s3, [r4, #-16]
 8005260:	ed13 4a04 	vldr	s8, [r3, #-16]
 8005264:	ed53 3a03 	vldr	s7, [r3, #-12]
 8005268:	ed53 5a02 	vldr	s11, [r3, #-8]
 800526c:	ed13 5a01 	vldr	s10, [r3, #-4]
 8005270:	ed54 6a03 	vldr	s13, [r4, #-12]
 8005274:	ed14 0a02 	vldr	s0, [r4, #-8]
 8005278:	ed16 2a04 	vldr	s4, [r6, #-16]
 800527c:	ed56 2a03 	vldr	s5, [r6, #-12]
 8005280:	ed15 6a03 	vldr	s12, [r5, #-12]
 8005284:	ed15 7a01 	vldr	s14, [r5, #-4]
 8005288:	ed15 3a04 	vldr	s6, [r5, #-16]
 800528c:	ed54 7a01 	vldr	s15, [r4, #-4]
 8005290:	ed56 0a02 	vldr	s1, [r6, #-8]
 8005294:	ed16 1a01 	vldr	s2, [r6, #-4]
 8005298:	ed55 4a02 	vldr	s9, [r5, #-8]
 800529c:	ee73 ba21 	vadd.f32	s23, s6, s3
 80052a0:	ee36 ba26 	vadd.f32	s22, s12, s13
 80052a4:	ee37 aa27 	vadd.f32	s20, s14, s15
 80052a8:	ee72 9a04 	vadd.f32	s19, s4, s8
 80052ac:	ee32 9aa3 	vadd.f32	s18, s5, s7
 80052b0:	ee31 8a05 	vadd.f32	s16, s2, s10
 80052b4:	ee74 aa80 	vadd.f32	s21, s9, s0
 80052b8:	ee70 8aa5 	vadd.f32	s17, s1, s11
 80052bc:	ed45 ba04 	vstr	s23, [r5, #-16]
 80052c0:	ed05 ba03 	vstr	s22, [r5, #-12]
 80052c4:	ed45 aa02 	vstr	s21, [r5, #-8]
 80052c8:	ed05 aa01 	vstr	s20, [r5, #-4]
 80052cc:	ed06 8a01 	vstr	s16, [r6, #-4]
 80052d0:	ed46 9a04 	vstr	s19, [r6, #-16]
 80052d4:	ed06 9a03 	vstr	s18, [r6, #-12]
 80052d8:	ed46 8a02 	vstr	s17, [r6, #-8]
 80052dc:	ee76 6a66 	vsub.f32	s13, s12, s13
 80052e0:	ee73 3ae2 	vsub.f32	s7, s7, s5
 80052e4:	ed12 6a03 	vldr	s12, [r2, #-12]
 80052e8:	ed52 2a04 	vldr	s5, [r2, #-16]
 80052ec:	ee33 3a61 	vsub.f32	s6, s6, s3
 80052f0:	ee34 4a42 	vsub.f32	s8, s8, s4
 80052f4:	ee26 8a86 	vmul.f32	s16, s13, s12
 80052f8:	ee24 2a06 	vmul.f32	s4, s8, s12
 80052fc:	ee63 1a22 	vmul.f32	s3, s6, s5
 8005300:	ee24 4a22 	vmul.f32	s8, s8, s5
 8005304:	ee23 3a06 	vmul.f32	s6, s6, s12
 8005308:	ee66 6aa2 	vmul.f32	s13, s13, s5
 800530c:	ee23 6a86 	vmul.f32	s12, s7, s12
 8005310:	ee63 3aa2 	vmul.f32	s7, s7, s5
 8005314:	ee36 6a04 	vadd.f32	s12, s12, s8
 8005318:	ee76 6ac3 	vsub.f32	s13, s13, s6
 800531c:	ee72 3a63 	vsub.f32	s7, s4, s7
 8005320:	ee71 2a88 	vadd.f32	s5, s3, s16
 8005324:	ed44 6a03 	vstr	s13, [r4, #-12]
 8005328:	ed44 2a04 	vstr	s5, [r4, #-16]
 800532c:	ed43 3a04 	vstr	s7, [r3, #-16]
 8005330:	ed03 6a03 	vstr	s12, [r3, #-12]
 8005334:	ee77 7a67 	vsub.f32	s15, s14, s15
 8005338:	ee75 6ae0 	vsub.f32	s13, s11, s1
 800533c:	ed12 7a01 	vldr	s14, [r2, #-4]
 8005340:	ed52 5a02 	vldr	s11, [r2, #-8]
 8005344:	ee35 6a41 	vsub.f32	s12, s10, s2
 8005348:	ee74 4ac0 	vsub.f32	s9, s9, s0
 800534c:	ee67 3a87 	vmul.f32	s7, s15, s14
 8005350:	ee26 5a87 	vmul.f32	s10, s13, s14
 8005354:	ee24 4aa5 	vmul.f32	s8, s9, s11
 8005358:	ee67 7aa5 	vmul.f32	s15, s15, s11
 800535c:	ee64 4a87 	vmul.f32	s9, s9, s14
 8005360:	ee66 6aa5 	vmul.f32	s13, s13, s11
 8005364:	ee26 7a07 	vmul.f32	s14, s12, s14
 8005368:	ee26 6a25 	vmul.f32	s12, s12, s11
 800536c:	ee77 7ae4 	vsub.f32	s15, s15, s9
 8005370:	ee74 5a23 	vadd.f32	s11, s8, s7
 8005374:	ee35 6a46 	vsub.f32	s12, s10, s12
 8005378:	ee37 7a26 	vadd.f32	s14, s14, s13
 800537c:	f1be 0e01 	subs.w	lr, lr, #1
 8005380:	ed44 5a02 	vstr	s11, [r4, #-8]
 8005384:	f105 0510 	add.w	r5, r5, #16
 8005388:	ed44 7a01 	vstr	s15, [r4, #-4]
 800538c:	f106 0610 	add.w	r6, r6, #16
 8005390:	ed03 6a02 	vstr	s12, [r3, #-8]
 8005394:	ed03 7a01 	vstr	s14, [r3, #-4]
 8005398:	f102 0210 	add.w	r2, r2, #16
 800539c:	f104 0410 	add.w	r4, r4, #16
 80053a0:	f103 0310 	add.w	r3, r3, #16
 80053a4:	f47f af5a 	bne.w	800525c <arm_cfft_radix8by2_f32+0x34>
 80053a8:	687a      	ldr	r2, [r7, #4]
 80053aa:	fa1f f48c 	uxth.w	r4, ip
 80053ae:	4608      	mov	r0, r1
 80053b0:	2302      	movs	r3, #2
 80053b2:	4621      	mov	r1, r4
 80053b4:	f000 fae2 	bl	800597c <arm_radix8_butterfly_f32>
 80053b8:	ecbd 8b08 	vpop	{d8-d11}
 80053bc:	4640      	mov	r0, r8
 80053be:	4621      	mov	r1, r4
 80053c0:	687a      	ldr	r2, [r7, #4]
 80053c2:	2302      	movs	r3, #2
 80053c4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80053c8:	f000 bad8 	b.w	800597c <arm_radix8_butterfly_f32>

080053cc <arm_cfft_radix8by4_f32>:
 80053cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80053d0:	ed2d 8b0a 	vpush	{d8-d12}
 80053d4:	8802      	ldrh	r2, [r0, #0]
 80053d6:	ed91 6a00 	vldr	s12, [r1]
 80053da:	b08f      	sub	sp, #60	@ 0x3c
 80053dc:	460f      	mov	r7, r1
 80053de:	0852      	lsrs	r2, r2, #1
 80053e0:	0093      	lsls	r3, r2, #2
 80053e2:	900c      	str	r0, [sp, #48]	@ 0x30
 80053e4:	9103      	str	r1, [sp, #12]
 80053e6:	6841      	ldr	r1, [r0, #4]
 80053e8:	ed97 7a01 	vldr	s14, [r7, #4]
 80053ec:	4638      	mov	r0, r7
 80053ee:	4418      	add	r0, r3
 80053f0:	4606      	mov	r6, r0
 80053f2:	9009      	str	r0, [sp, #36]	@ 0x24
 80053f4:	4418      	add	r0, r3
 80053f6:	edd0 6a00 	vldr	s13, [r0]
 80053fa:	edd6 3a00 	vldr	s7, [r6]
 80053fe:	edd6 2a01 	vldr	s5, [r6, #4]
 8005402:	edd0 7a01 	vldr	s15, [r0, #4]
 8005406:	900a      	str	r0, [sp, #40]	@ 0x28
 8005408:	ee76 5a26 	vadd.f32	s11, s12, s13
 800540c:	4604      	mov	r4, r0
 800540e:	4625      	mov	r5, r4
 8005410:	441c      	add	r4, r3
 8005412:	ed94 4a00 	vldr	s8, [r4]
 8005416:	ed94 5a01 	vldr	s10, [r4, #4]
 800541a:	9401      	str	r4, [sp, #4]
 800541c:	ee75 4aa3 	vadd.f32	s9, s11, s7
 8005420:	4630      	mov	r0, r6
 8005422:	ee74 4a24 	vadd.f32	s9, s8, s9
 8005426:	463e      	mov	r6, r7
 8005428:	ee14 ea90 	vmov	lr, s9
 800542c:	ee76 6a66 	vsub.f32	s13, s12, s13
 8005430:	f846 eb08 	str.w	lr, [r6], #8
 8005434:	ee37 6a27 	vadd.f32	s12, s14, s15
 8005438:	edd0 4a01 	vldr	s9, [r0, #4]
 800543c:	9604      	str	r6, [sp, #16]
 800543e:	ee77 7a67 	vsub.f32	s15, s14, s15
 8005442:	9e01      	ldr	r6, [sp, #4]
 8005444:	ee32 3aa6 	vadd.f32	s6, s5, s13
 8005448:	ed96 2a01 	vldr	s4, [r6, #4]
 800544c:	ee36 7a24 	vadd.f32	s14, s12, s9
 8005450:	ee75 5ae3 	vsub.f32	s11, s11, s7
 8005454:	ee77 4ae3 	vsub.f32	s9, s15, s7
 8005458:	ee36 6a62 	vsub.f32	s12, s12, s5
 800545c:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8005460:	ee76 6ae2 	vsub.f32	s13, s13, s5
 8005464:	ee73 3a45 	vsub.f32	s7, s6, s10
 8005468:	4604      	mov	r4, r0
 800546a:	ee36 6a45 	vsub.f32	s12, s12, s10
 800546e:	ee75 6a26 	vadd.f32	s13, s10, s13
 8005472:	46a3      	mov	fp, r4
 8005474:	ee37 7a02 	vadd.f32	s14, s14, s4
 8005478:	ee34 5a84 	vadd.f32	s10, s9, s8
 800547c:	ee13 8a90 	vmov	r8, s7
 8005480:	46a4      	mov	ip, r4
 8005482:	ee75 5ac4 	vsub.f32	s11, s11, s8
 8005486:	ed87 7a01 	vstr	s14, [r7, #4]
 800548a:	f84b 8b08 	str.w	r8, [fp], #8
 800548e:	f1ac 0704 	sub.w	r7, ip, #4
 8005492:	ed8c 5a01 	vstr	s10, [ip, #4]
 8005496:	f101 0c08 	add.w	ip, r1, #8
 800549a:	462c      	mov	r4, r5
 800549c:	f8cd c014 	str.w	ip, [sp, #20]
 80054a0:	ee15 ca90 	vmov	ip, s11
 80054a4:	f844 cb08 	str.w	ip, [r4], #8
 80054a8:	9407      	str	r4, [sp, #28]
 80054aa:	f101 0410 	add.w	r4, r1, #16
 80054ae:	ed85 6a01 	vstr	s12, [r5, #4]
 80054b2:	0852      	lsrs	r2, r2, #1
 80054b4:	9402      	str	r4, [sp, #8]
 80054b6:	462c      	mov	r4, r5
 80054b8:	f101 0518 	add.w	r5, r1, #24
 80054bc:	920b      	str	r2, [sp, #44]	@ 0x2c
 80054be:	46b2      	mov	sl, r6
 80054c0:	9506      	str	r5, [sp, #24]
 80054c2:	ee77 7ac4 	vsub.f32	s15, s15, s8
 80054c6:	3a02      	subs	r2, #2
 80054c8:	ee16 5a90 	vmov	r5, s13
 80054cc:	46b6      	mov	lr, r6
 80054ce:	4630      	mov	r0, r6
 80054d0:	0852      	lsrs	r2, r2, #1
 80054d2:	f84a 5b08 	str.w	r5, [sl], #8
 80054d6:	f1a0 0604 	sub.w	r6, r0, #4
 80054da:	edce 7a01 	vstr	s15, [lr, #4]
 80054de:	9208      	str	r2, [sp, #32]
 80054e0:	f000 8130 	beq.w	8005744 <arm_cfft_radix8by4_f32+0x378>
 80054e4:	4691      	mov	r9, r2
 80054e6:	9a03      	ldr	r2, [sp, #12]
 80054e8:	f8dd 8008 	ldr.w	r8, [sp, #8]
 80054ec:	f8cd a034 	str.w	sl, [sp, #52]	@ 0x34
 80054f0:	3b08      	subs	r3, #8
 80054f2:	f102 0510 	add.w	r5, r2, #16
 80054f6:	f101 0c20 	add.w	ip, r1, #32
 80054fa:	f1a4 020c 	sub.w	r2, r4, #12
 80054fe:	f101 0e30 	add.w	lr, r1, #48	@ 0x30
 8005502:	4433      	add	r3, r6
 8005504:	3410      	adds	r4, #16
 8005506:	4650      	mov	r0, sl
 8005508:	4659      	mov	r1, fp
 800550a:	ed55 3a02 	vldr	s7, [r5, #-8]
 800550e:	ed14 5a02 	vldr	s10, [r4, #-8]
 8005512:	ed91 7a00 	vldr	s14, [r1]
 8005516:	edd0 7a00 	vldr	s15, [r0]
 800551a:	ed15 4a01 	vldr	s8, [r5, #-4]
 800551e:	ed54 5a01 	vldr	s11, [r4, #-4]
 8005522:	edd0 6a01 	vldr	s13, [r0, #4]
 8005526:	ed91 6a01 	vldr	s12, [r1, #4]
 800552a:	ee33 8a85 	vadd.f32	s16, s7, s10
 800552e:	ee34 0a25 	vadd.f32	s0, s8, s11
 8005532:	ee78 4a07 	vadd.f32	s9, s16, s14
 8005536:	ee74 5a65 	vsub.f32	s11, s8, s11
 800553a:	ee77 4aa4 	vadd.f32	s9, s15, s9
 800553e:	ee33 5ac5 	vsub.f32	s10, s7, s10
 8005542:	ed45 4a02 	vstr	s9, [r5, #-8]
 8005546:	edd1 4a01 	vldr	s9, [r1, #4]
 800554a:	ed90 4a01 	vldr	s8, [r0, #4]
 800554e:	ee70 4a24 	vadd.f32	s9, s0, s9
 8005552:	ee76 aa05 	vadd.f32	s21, s12, s10
 8005556:	ee74 4a84 	vadd.f32	s9, s9, s8
 800555a:	ee35 aac7 	vsub.f32	s20, s11, s14
 800555e:	ed45 4a01 	vstr	s9, [r5, #-4]
 8005562:	edd6 1a00 	vldr	s3, [r6]
 8005566:	edd7 0a00 	vldr	s1, [r7]
 800556a:	ed92 4a02 	vldr	s8, [r2, #8]
 800556e:	edd3 3a02 	vldr	s7, [r3, #8]
 8005572:	ed93 2a01 	vldr	s4, [r3, #4]
 8005576:	ed16 1a01 	vldr	s2, [r6, #-4]
 800557a:	edd2 2a01 	vldr	s5, [r2, #4]
 800557e:	ed57 9a01 	vldr	s19, [r7, #-4]
 8005582:	ee70 4aa1 	vadd.f32	s9, s1, s3
 8005586:	ee39 3a81 	vadd.f32	s6, s19, s2
 800558a:	ee74 8a84 	vadd.f32	s17, s9, s8
 800558e:	ee70 1ae1 	vsub.f32	s3, s1, s3
 8005592:	ee73 8aa8 	vadd.f32	s17, s7, s17
 8005596:	ee7a aae6 	vsub.f32	s21, s21, s13
 800559a:	ee18 aa90 	vmov	sl, s17
 800559e:	f847 a908 	str.w	sl, [r7], #-8
 80055a2:	edd2 8a01 	vldr	s17, [r2, #4]
 80055a6:	ed93 9a01 	vldr	s18, [r3, #4]
 80055aa:	ee73 8a28 	vadd.f32	s17, s6, s17
 80055ae:	ee3a aa27 	vadd.f32	s20, s20, s15
 80055b2:	ee78 8a89 	vadd.f32	s17, s17, s18
 80055b6:	ee74 0a63 	vsub.f32	s1, s8, s7
 80055ba:	edc7 8a01 	vstr	s17, [r7, #4]
 80055be:	ed18 ba02 	vldr	s22, [r8, #-8]
 80055c2:	ed58 8a01 	vldr	s17, [r8, #-4]
 80055c6:	ee39 1ac1 	vsub.f32	s2, s19, s2
 80055ca:	ee6a ba28 	vmul.f32	s23, s20, s17
 80055ce:	ee2a ca8b 	vmul.f32	s24, s21, s22
 80055d2:	ee71 9ae2 	vsub.f32	s19, s3, s5
 80055d6:	ee30 9a81 	vadd.f32	s18, s1, s2
 80055da:	ee79 9a82 	vadd.f32	s19, s19, s4
 80055de:	ee3c ca2b 	vadd.f32	s24, s24, s23
 80055e2:	ee6a aaa8 	vmul.f32	s21, s21, s17
 80055e6:	ee69 baa8 	vmul.f32	s23, s19, s17
 80055ea:	ee2a aa0b 	vmul.f32	s20, s20, s22
 80055ee:	ee69 9a8b 	vmul.f32	s19, s19, s22
 80055f2:	ee69 8a28 	vmul.f32	s17, s18, s17
 80055f6:	ee29 ba0b 	vmul.f32	s22, s18, s22
 80055fa:	ee1c aa10 	vmov	sl, s24
 80055fe:	ee78 8aa9 	vadd.f32	s17, s17, s19
 8005602:	f841 ab08 	str.w	sl, [r1], #8
 8005606:	ee3a aa6a 	vsub.f32	s20, s20, s21
 800560a:	ee3b bacb 	vsub.f32	s22, s23, s22
 800560e:	ee34 4ac4 	vsub.f32	s8, s9, s8
 8005612:	ee33 3a62 	vsub.f32	s6, s6, s5
 8005616:	ed01 aa01 	vstr	s20, [r1, #-4]
 800561a:	edc2 8a01 	vstr	s17, [r2, #4]
 800561e:	ed82 ba02 	vstr	s22, [r2, #8]
 8005622:	ed5c 4a04 	vldr	s9, [ip, #-16]
 8005626:	ee74 3a63 	vsub.f32	s7, s8, s7
 800562a:	ee38 8a47 	vsub.f32	s16, s16, s14
 800562e:	ed1c 4a03 	vldr	s8, [ip, #-12]
 8005632:	ee30 0a46 	vsub.f32	s0, s0, s12
 8005636:	ee33 3a42 	vsub.f32	s6, s6, s4
 800563a:	ee38 8a67 	vsub.f32	s16, s16, s15
 800563e:	ee30 0a66 	vsub.f32	s0, s0, s13
 8005642:	ee23 9ae4 	vnmul.f32	s18, s7, s9
 8005646:	ee63 8a04 	vmul.f32	s17, s6, s8
 800564a:	ee28 aa24 	vmul.f32	s20, s16, s9
 800564e:	ee60 9a04 	vmul.f32	s19, s0, s8
 8005652:	ee28 8a04 	vmul.f32	s16, s16, s8
 8005656:	ee20 0a24 	vmul.f32	s0, s0, s9
 800565a:	ee63 3a84 	vmul.f32	s7, s7, s8
 800565e:	ee39 4a68 	vsub.f32	s8, s18, s17
 8005662:	ee7a 9a29 	vadd.f32	s19, s20, s19
 8005666:	ee14 aa10 	vmov	sl, s8
 800566a:	ee30 0a48 	vsub.f32	s0, s0, s16
 800566e:	ee63 4a24 	vmul.f32	s9, s6, s9
 8005672:	ed44 9a02 	vstr	s19, [r4, #-8]
 8005676:	ee73 3ae4 	vsub.f32	s7, s7, s9
 800567a:	ed04 0a01 	vstr	s0, [r4, #-4]
 800567e:	f846 a908 	str.w	sl, [r6], #-8
 8005682:	ee35 6a46 	vsub.f32	s12, s10, s12
 8005686:	ee35 7a87 	vadd.f32	s14, s11, s14
 800568a:	edc6 3a01 	vstr	s7, [r6, #4]
 800568e:	ee76 6a86 	vadd.f32	s13, s13, s12
 8005692:	ee77 7a67 	vsub.f32	s15, s14, s15
 8005696:	ed1e 6a05 	vldr	s12, [lr, #-20]	@ 0xffffffec
 800569a:	ed1e 7a06 	vldr	s14, [lr, #-24]	@ 0xffffffe8
 800569e:	ee67 5a86 	vmul.f32	s11, s15, s12
 80056a2:	ee26 5a87 	vmul.f32	s10, s13, s14
 80056a6:	ee72 2a62 	vsub.f32	s5, s4, s5
 80056aa:	ee30 1ac1 	vsub.f32	s2, s1, s2
 80056ae:	ee72 2ae1 	vsub.f32	s5, s5, s3
 80056b2:	ee75 5a25 	vadd.f32	s11, s10, s11
 80056b6:	ee62 0a86 	vmul.f32	s1, s5, s12
 80056ba:	ee66 6a86 	vmul.f32	s13, s13, s12
 80056be:	ee67 7a87 	vmul.f32	s15, s15, s14
 80056c2:	ee21 6a06 	vmul.f32	s12, s2, s12
 80056c6:	ee62 2a87 	vmul.f32	s5, s5, s14
 80056ca:	ee21 1a07 	vmul.f32	s2, s2, s14
 80056ce:	ee15 aa90 	vmov	sl, s11
 80056d2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80056d6:	f840 ab08 	str.w	sl, [r0], #8
 80056da:	ee30 1ac1 	vsub.f32	s2, s1, s2
 80056de:	ee76 2a22 	vadd.f32	s5, s12, s5
 80056e2:	f1b9 0901 	subs.w	r9, r9, #1
 80056e6:	ed40 7a01 	vstr	s15, [r0, #-4]
 80056ea:	f105 0508 	add.w	r5, r5, #8
 80056ee:	ed83 1a02 	vstr	s2, [r3, #8]
 80056f2:	edc3 2a01 	vstr	s5, [r3, #4]
 80056f6:	f108 0808 	add.w	r8, r8, #8
 80056fa:	f1a2 0208 	sub.w	r2, r2, #8
 80056fe:	f10c 0c10 	add.w	ip, ip, #16
 8005702:	f104 0408 	add.w	r4, r4, #8
 8005706:	f10e 0e18 	add.w	lr, lr, #24
 800570a:	f1a3 0308 	sub.w	r3, r3, #8
 800570e:	f47f aefc 	bne.w	800550a <arm_cfft_radix8by4_f32+0x13e>
 8005712:	9908      	ldr	r1, [sp, #32]
 8005714:	9802      	ldr	r0, [sp, #8]
 8005716:	f8dd a034 	ldr.w	sl, [sp, #52]	@ 0x34
 800571a:	00cb      	lsls	r3, r1, #3
 800571c:	eb01 0241 	add.w	r2, r1, r1, lsl #1
 8005720:	eb00 1101 	add.w	r1, r0, r1, lsl #4
 8005724:	9102      	str	r1, [sp, #8]
 8005726:	9904      	ldr	r1, [sp, #16]
 8005728:	4419      	add	r1, r3
 800572a:	9104      	str	r1, [sp, #16]
 800572c:	9905      	ldr	r1, [sp, #20]
 800572e:	4419      	add	r1, r3
 8005730:	9105      	str	r1, [sp, #20]
 8005732:	9907      	ldr	r1, [sp, #28]
 8005734:	449b      	add	fp, r3
 8005736:	4419      	add	r1, r3
 8005738:	449a      	add	sl, r3
 800573a:	9b06      	ldr	r3, [sp, #24]
 800573c:	9107      	str	r1, [sp, #28]
 800573e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8005742:	9306      	str	r3, [sp, #24]
 8005744:	9a04      	ldr	r2, [sp, #16]
 8005746:	9807      	ldr	r0, [sp, #28]
 8005748:	edd2 3a00 	vldr	s7, [r2]
 800574c:	ed90 4a00 	vldr	s8, [r0]
 8005750:	eddb 7a00 	vldr	s15, [fp]
 8005754:	ed9a 3a00 	vldr	s6, [sl]
 8005758:	edd2 4a01 	vldr	s9, [r2, #4]
 800575c:	ed90 7a01 	vldr	s14, [r0, #4]
 8005760:	ed9b 2a01 	vldr	s4, [fp, #4]
 8005764:	edda 5a01 	vldr	s11, [sl, #4]
 8005768:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 800576c:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 800576e:	ee73 6a84 	vadd.f32	s13, s7, s8
 8005772:	ee34 6a87 	vadd.f32	s12, s9, s14
 8005776:	ee36 5aa7 	vadd.f32	s10, s13, s15
 800577a:	ee34 7ac7 	vsub.f32	s14, s9, s14
 800577e:	ee33 5a05 	vadd.f32	s10, s6, s10
 8005782:	ee33 4ac4 	vsub.f32	s8, s7, s8
 8005786:	ed82 5a00 	vstr	s10, [r2]
 800578a:	ed9b 5a01 	vldr	s10, [fp, #4]
 800578e:	edda 4a01 	vldr	s9, [sl, #4]
 8005792:	ee36 5a05 	vadd.f32	s10, s12, s10
 8005796:	ee72 3a04 	vadd.f32	s7, s4, s8
 800579a:	ee35 5a24 	vadd.f32	s10, s10, s9
 800579e:	ee77 4a67 	vsub.f32	s9, s14, s15
 80057a2:	ed82 5a01 	vstr	s10, [r2, #4]
 80057a6:	9a05      	ldr	r2, [sp, #20]
 80057a8:	ee34 5a83 	vadd.f32	s10, s9, s6
 80057ac:	edd2 1a00 	vldr	s3, [r2]
 80057b0:	edd2 2a01 	vldr	s5, [r2, #4]
 80057b4:	9a02      	ldr	r2, [sp, #8]
 80057b6:	ee73 3ae5 	vsub.f32	s7, s7, s11
 80057ba:	ee36 6a42 	vsub.f32	s12, s12, s4
 80057be:	ee63 4aa1 	vmul.f32	s9, s7, s3
 80057c2:	ee63 3aa2 	vmul.f32	s7, s7, s5
 80057c6:	ee65 2a22 	vmul.f32	s5, s10, s5
 80057ca:	ee25 5a21 	vmul.f32	s10, s10, s3
 80057ce:	ee74 2aa2 	vadd.f32	s5, s9, s5
 80057d2:	ee35 5a63 	vsub.f32	s10, s10, s7
 80057d6:	ee76 6ae7 	vsub.f32	s13, s13, s15
 80057da:	edcb 2a00 	vstr	s5, [fp]
 80057de:	ed8b 5a01 	vstr	s10, [fp, #4]
 80057e2:	edd2 3a01 	vldr	s7, [r2, #4]
 80057e6:	ed92 5a00 	vldr	s10, [r2]
 80057ea:	9a06      	ldr	r2, [sp, #24]
 80057ec:	ee76 6ac3 	vsub.f32	s13, s13, s6
 80057f0:	ee36 6a65 	vsub.f32	s12, s12, s11
 80057f4:	ee66 4a85 	vmul.f32	s9, s13, s10
 80057f8:	ee26 5a05 	vmul.f32	s10, s12, s10
 80057fc:	ee66 6aa3 	vmul.f32	s13, s13, s7
 8005800:	ee26 6a23 	vmul.f32	s12, s12, s7
 8005804:	ee75 6a66 	vsub.f32	s13, s10, s13
 8005808:	ee34 6a86 	vadd.f32	s12, s9, s12
 800580c:	ee34 4a42 	vsub.f32	s8, s8, s4
 8005810:	ee37 7a27 	vadd.f32	s14, s14, s15
 8005814:	edc0 6a01 	vstr	s13, [r0, #4]
 8005818:	ed80 6a00 	vstr	s12, [r0]
 800581c:	ed92 6a01 	vldr	s12, [r2, #4]
 8005820:	9803      	ldr	r0, [sp, #12]
 8005822:	ee77 7a43 	vsub.f32	s15, s14, s6
 8005826:	ee75 5a84 	vadd.f32	s11, s11, s8
 800582a:	ed92 7a00 	vldr	s14, [r2]
 800582e:	ee65 6a87 	vmul.f32	s13, s11, s14
 8005832:	ee27 7a87 	vmul.f32	s14, s15, s14
 8005836:	ee65 5a86 	vmul.f32	s11, s11, s12
 800583a:	ee67 7a86 	vmul.f32	s15, s15, s12
 800583e:	ee77 5a65 	vsub.f32	s11, s14, s11
 8005842:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8005846:	edca 5a01 	vstr	s11, [sl, #4]
 800584a:	edca 7a00 	vstr	s15, [sl]
 800584e:	6872      	ldr	r2, [r6, #4]
 8005850:	4621      	mov	r1, r4
 8005852:	2304      	movs	r3, #4
 8005854:	f000 f892 	bl	800597c <arm_radix8_butterfly_f32>
 8005858:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800585a:	6872      	ldr	r2, [r6, #4]
 800585c:	4621      	mov	r1, r4
 800585e:	2304      	movs	r3, #4
 8005860:	f000 f88c 	bl	800597c <arm_radix8_butterfly_f32>
 8005864:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8005866:	6872      	ldr	r2, [r6, #4]
 8005868:	4621      	mov	r1, r4
 800586a:	2304      	movs	r3, #4
 800586c:	f000 f886 	bl	800597c <arm_radix8_butterfly_f32>
 8005870:	9801      	ldr	r0, [sp, #4]
 8005872:	6872      	ldr	r2, [r6, #4]
 8005874:	4621      	mov	r1, r4
 8005876:	2304      	movs	r3, #4
 8005878:	b00f      	add	sp, #60	@ 0x3c
 800587a:	ecbd 8b0a 	vpop	{d8-d12}
 800587e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005882:	f000 b87b 	b.w	800597c <arm_radix8_butterfly_f32>
 8005886:	bf00      	nop

08005888 <arm_cfft_f32>:
 8005888:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800588c:	2a01      	cmp	r2, #1
 800588e:	4606      	mov	r6, r0
 8005890:	4617      	mov	r7, r2
 8005892:	460c      	mov	r4, r1
 8005894:	4698      	mov	r8, r3
 8005896:	8805      	ldrh	r5, [r0, #0]
 8005898:	d054      	beq.n	8005944 <arm_cfft_f32+0xbc>
 800589a:	f5b5 7f80 	cmp.w	r5, #256	@ 0x100
 800589e:	d04c      	beq.n	800593a <arm_cfft_f32+0xb2>
 80058a0:	d916      	bls.n	80058d0 <arm_cfft_f32+0x48>
 80058a2:	f5b5 6f80 	cmp.w	r5, #1024	@ 0x400
 80058a6:	d01a      	beq.n	80058de <arm_cfft_f32+0x56>
 80058a8:	d95c      	bls.n	8005964 <arm_cfft_f32+0xdc>
 80058aa:	f5b5 6f00 	cmp.w	r5, #2048	@ 0x800
 80058ae:	d044      	beq.n	800593a <arm_cfft_f32+0xb2>
 80058b0:	f5b5 5f80 	cmp.w	r5, #4096	@ 0x1000
 80058b4:	d105      	bne.n	80058c2 <arm_cfft_f32+0x3a>
 80058b6:	4620      	mov	r0, r4
 80058b8:	4629      	mov	r1, r5
 80058ba:	6872      	ldr	r2, [r6, #4]
 80058bc:	2301      	movs	r3, #1
 80058be:	f000 f85d 	bl	800597c <arm_radix8_butterfly_f32>
 80058c2:	f1b8 0f00 	cmp.w	r8, #0
 80058c6:	d111      	bne.n	80058ec <arm_cfft_f32+0x64>
 80058c8:	2f01      	cmp	r7, #1
 80058ca:	d016      	beq.n	80058fa <arm_cfft_f32+0x72>
 80058cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80058d0:	2d20      	cmp	r5, #32
 80058d2:	d032      	beq.n	800593a <arm_cfft_f32+0xb2>
 80058d4:	d94a      	bls.n	800596c <arm_cfft_f32+0xe4>
 80058d6:	2d40      	cmp	r5, #64	@ 0x40
 80058d8:	d0ed      	beq.n	80058b6 <arm_cfft_f32+0x2e>
 80058da:	2d80      	cmp	r5, #128	@ 0x80
 80058dc:	d1f1      	bne.n	80058c2 <arm_cfft_f32+0x3a>
 80058de:	4630      	mov	r0, r6
 80058e0:	4621      	mov	r1, r4
 80058e2:	f7ff fca1 	bl	8005228 <arm_cfft_radix8by2_f32>
 80058e6:	f1b8 0f00 	cmp.w	r8, #0
 80058ea:	d0ed      	beq.n	80058c8 <arm_cfft_f32+0x40>
 80058ec:	4620      	mov	r0, r4
 80058ee:	89b1      	ldrh	r1, [r6, #12]
 80058f0:	68b2      	ldr	r2, [r6, #8]
 80058f2:	f7fa fc69 	bl	80001c8 <arm_bitreversal_32>
 80058f6:	2f01      	cmp	r7, #1
 80058f8:	d1e8      	bne.n	80058cc <arm_cfft_f32+0x44>
 80058fa:	ee07 5a90 	vmov	s15, r5
 80058fe:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8005902:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8005906:	eec7 6aa6 	vdiv.f32	s13, s15, s13
 800590a:	2d00      	cmp	r5, #0
 800590c:	d0de      	beq.n	80058cc <arm_cfft_f32+0x44>
 800590e:	f104 0108 	add.w	r1, r4, #8
 8005912:	2300      	movs	r3, #0
 8005914:	3301      	adds	r3, #1
 8005916:	429d      	cmp	r5, r3
 8005918:	f101 0108 	add.w	r1, r1, #8
 800591c:	ed11 7a04 	vldr	s14, [r1, #-16]
 8005920:	ed51 7a03 	vldr	s15, [r1, #-12]
 8005924:	ee27 7a26 	vmul.f32	s14, s14, s13
 8005928:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 800592c:	ed01 7a04 	vstr	s14, [r1, #-16]
 8005930:	ed41 7a03 	vstr	s15, [r1, #-12]
 8005934:	d1ee      	bne.n	8005914 <arm_cfft_f32+0x8c>
 8005936:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800593a:	4630      	mov	r0, r6
 800593c:	4621      	mov	r1, r4
 800593e:	f7ff fd45 	bl	80053cc <arm_cfft_radix8by4_f32>
 8005942:	e7be      	b.n	80058c2 <arm_cfft_f32+0x3a>
 8005944:	b1ad      	cbz	r5, 8005972 <arm_cfft_f32+0xea>
 8005946:	f101 030c 	add.w	r3, r1, #12
 800594a:	2200      	movs	r2, #0
 800594c:	ed53 7a02 	vldr	s15, [r3, #-8]
 8005950:	3201      	adds	r2, #1
 8005952:	eef1 7a67 	vneg.f32	s15, s15
 8005956:	4295      	cmp	r5, r2
 8005958:	ed43 7a02 	vstr	s15, [r3, #-8]
 800595c:	f103 0308 	add.w	r3, r3, #8
 8005960:	d1f4      	bne.n	800594c <arm_cfft_f32+0xc4>
 8005962:	e79a      	b.n	800589a <arm_cfft_f32+0x12>
 8005964:	f5b5 7f00 	cmp.w	r5, #512	@ 0x200
 8005968:	d0a5      	beq.n	80058b6 <arm_cfft_f32+0x2e>
 800596a:	e7aa      	b.n	80058c2 <arm_cfft_f32+0x3a>
 800596c:	2d10      	cmp	r5, #16
 800596e:	d0b6      	beq.n	80058de <arm_cfft_f32+0x56>
 8005970:	e7a7      	b.n	80058c2 <arm_cfft_f32+0x3a>
 8005972:	f5b5 7f80 	cmp.w	r5, #256	@ 0x100
 8005976:	d894      	bhi.n	80058a2 <arm_cfft_f32+0x1a>
 8005978:	e7aa      	b.n	80058d0 <arm_cfft_f32+0x48>
 800597a:	bf00      	nop

0800597c <arm_radix8_butterfly_f32>:
 800597c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005980:	ed2d 8b10 	vpush	{d8-d15}
 8005984:	b09d      	sub	sp, #116	@ 0x74
 8005986:	461c      	mov	r4, r3
 8005988:	ed9f bac8 	vldr	s22, [pc, #800]	@ 8005cac <arm_radix8_butterfly_f32+0x330>
 800598c:	921a      	str	r2, [sp, #104]	@ 0x68
 800598e:	1d03      	adds	r3, r0, #4
 8005990:	4682      	mov	sl, r0
 8005992:	4689      	mov	r9, r1
 8005994:	468b      	mov	fp, r1
 8005996:	931b      	str	r3, [sp, #108]	@ 0x6c
 8005998:	9400      	str	r4, [sp, #0]
 800599a:	469e      	mov	lr, r3
 800599c:	ea4f 03db 	mov.w	r3, fp, lsr #3
 80059a0:	005a      	lsls	r2, r3, #1
 80059a2:	18d6      	adds	r6, r2, r3
 80059a4:	18f5      	adds	r5, r6, r3
 80059a6:	9203      	str	r2, [sp, #12]
 80059a8:	195a      	adds	r2, r3, r5
 80059aa:	18d0      	adds	r0, r2, r3
 80059ac:	00df      	lsls	r7, r3, #3
 80059ae:	1819      	adds	r1, r3, r0
 80059b0:	463c      	mov	r4, r7
 80059b2:	9701      	str	r7, [sp, #4]
 80059b4:	4457      	add	r7, sl
 80059b6:	930c      	str	r3, [sp, #48]	@ 0x30
 80059b8:	eb0a 02c2 	add.w	r2, sl, r2, lsl #3
 80059bc:	011b      	lsls	r3, r3, #4
 80059be:	eb0a 01c1 	add.w	r1, sl, r1, lsl #3
 80059c2:	eb07 0c04 	add.w	ip, r7, r4
 80059c6:	9c00      	ldr	r4, [sp, #0]
 80059c8:	9302      	str	r3, [sp, #8]
 80059ca:	eb0a 06c6 	add.w	r6, sl, r6, lsl #3
 80059ce:	eb0a 05c5 	add.w	r5, sl, r5, lsl #3
 80059d2:	3204      	adds	r2, #4
 80059d4:	3104      	adds	r1, #4
 80059d6:	eb0a 00c0 	add.w	r0, sl, r0, lsl #3
 80059da:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 80059de:	f04f 0800 	mov.w	r8, #0
 80059e2:	eddc 7a00 	vldr	s15, [ip]
 80059e6:	edd7 6a00 	vldr	s13, [r7]
 80059ea:	edd6 3a00 	vldr	s7, [r6]
 80059ee:	ed5e aa01 	vldr	s21, [lr, #-4]
 80059f2:	edd5 4a00 	vldr	s9, [r5]
 80059f6:	ed90 2a00 	vldr	s4, [r0]
 80059fa:	ed12 7a01 	vldr	s14, [r2, #-4]
 80059fe:	ed51 0a01 	vldr	s1, [r1, #-4]
 8005a02:	ee77 8a82 	vadd.f32	s17, s15, s4
 8005a06:	ee33 4aa0 	vadd.f32	s8, s7, s1
 8005a0a:	ee76 1a87 	vadd.f32	s3, s13, s14
 8005a0e:	ee3a 3aa4 	vadd.f32	s6, s21, s9
 8005a12:	ee31 6a84 	vadd.f32	s12, s3, s8
 8005a16:	ee33 5a28 	vadd.f32	s10, s6, s17
 8005a1a:	ee36 7ac7 	vsub.f32	s14, s13, s14
 8005a1e:	ee75 6a06 	vadd.f32	s13, s10, s12
 8005a22:	ee35 5a46 	vsub.f32	s10, s10, s12
 8005a26:	ed4e 6a01 	vstr	s13, [lr, #-4]
 8005a2a:	ed85 5a00 	vstr	s10, [r5]
 8005a2e:	ed96 1a01 	vldr	s2, [r6, #4]
 8005a32:	edd7 5a01 	vldr	s11, [r7, #4]
 8005a36:	ed92 aa00 	vldr	s20, [r2]
 8005a3a:	ed91 6a00 	vldr	s12, [r1]
 8005a3e:	ed9e 9a00 	vldr	s18, [lr]
 8005a42:	ed95 5a01 	vldr	s10, [r5, #4]
 8005a46:	eddc 6a01 	vldr	s13, [ip, #4]
 8005a4a:	edd0 9a01 	vldr	s19, [r0, #4]
 8005a4e:	ee73 0ae0 	vsub.f32	s1, s7, s1
 8005a52:	ee71 2a46 	vsub.f32	s5, s2, s12
 8005a56:	ee75 3aca 	vsub.f32	s7, s11, s20
 8005a5a:	ee37 0a60 	vsub.f32	s0, s14, s1
 8005a5e:	ee33 8aa2 	vadd.f32	s16, s7, s5
 8005a62:	ee37 7a20 	vadd.f32	s14, s14, s1
 8005a66:	ee73 2ae2 	vsub.f32	s5, s7, s5
 8005a6a:	ee37 2ac2 	vsub.f32	s4, s15, s4
 8005a6e:	ee79 3a05 	vadd.f32	s7, s18, s10
 8005a72:	ee60 0a0b 	vmul.f32	s1, s0, s22
 8005a76:	ee39 5a45 	vsub.f32	s10, s18, s10
 8005a7a:	ee7a 4ae4 	vsub.f32	s9, s21, s9
 8005a7e:	ee36 9aa9 	vadd.f32	s18, s13, s19
 8005a82:	ee75 5a8a 	vadd.f32	s11, s11, s20
 8005a86:	ee31 6a06 	vadd.f32	s12, s2, s12
 8005a8a:	ee76 6ae9 	vsub.f32	s13, s13, s19
 8005a8e:	ee28 8a0b 	vmul.f32	s16, s16, s22
 8005a92:	ee62 2a8b 	vmul.f32	s5, s5, s22
 8005a96:	ee67 7a0b 	vmul.f32	s15, s14, s22
 8005a9a:	ee33 3a68 	vsub.f32	s6, s6, s17
 8005a9e:	ee36 0a88 	vadd.f32	s0, s13, s16
 8005aa2:	ee75 8a86 	vadd.f32	s17, s11, s12
 8005aa6:	ee36 7ac8 	vsub.f32	s14, s13, s16
 8005aaa:	ee71 1ac4 	vsub.f32	s3, s3, s8
 8005aae:	ee75 6a62 	vsub.f32	s13, s10, s5
 8005ab2:	ee33 4ac9 	vsub.f32	s8, s7, s18
 8005ab6:	ee35 6ac6 	vsub.f32	s12, s11, s12
 8005aba:	ee33 1a89 	vadd.f32	s2, s7, s18
 8005abe:	ee74 5ae0 	vsub.f32	s11, s9, s1
 8005ac2:	ee74 3aa0 	vadd.f32	s7, s9, s1
 8005ac6:	ee75 4a22 	vadd.f32	s9, s10, s5
 8005aca:	ee32 5a27 	vadd.f32	s10, s4, s15
 8005ace:	ee72 7a67 	vsub.f32	s15, s4, s15
 8005ad2:	ee33 8a06 	vadd.f32	s16, s6, s12
 8005ad6:	ee75 2a87 	vadd.f32	s5, s11, s14
 8005ada:	ee31 9a28 	vadd.f32	s18, s2, s17
 8005ade:	ee33 6a46 	vsub.f32	s12, s6, s12
 8005ae2:	ee74 0a61 	vsub.f32	s1, s8, s3
 8005ae6:	ee33 2a80 	vadd.f32	s4, s7, s0
 8005aea:	ee35 7ac7 	vsub.f32	s14, s11, s14
 8005aee:	ee34 3ac5 	vsub.f32	s6, s9, s10
 8005af2:	ee76 5ae7 	vsub.f32	s11, s13, s15
 8005af6:	ee31 1a68 	vsub.f32	s2, s2, s17
 8005afa:	ee34 4a21 	vadd.f32	s8, s8, s3
 8005afe:	ee73 3ac0 	vsub.f32	s7, s7, s0
 8005b02:	ee74 4a85 	vadd.f32	s9, s9, s10
 8005b06:	ee76 6aa7 	vadd.f32	s13, s13, s15
 8005b0a:	44d8      	add	r8, fp
 8005b0c:	45c1      	cmp	r9, r8
 8005b0e:	ed8e 9a00 	vstr	s18, [lr]
 8005b12:	ed85 1a01 	vstr	s2, [r5, #4]
 8005b16:	449e      	add	lr, r3
 8005b18:	ed8c 8a00 	vstr	s16, [ip]
 8005b1c:	441d      	add	r5, r3
 8005b1e:	ed80 6a00 	vstr	s12, [r0]
 8005b22:	edcc 0a01 	vstr	s1, [ip, #4]
 8005b26:	ed80 4a01 	vstr	s8, [r0, #4]
 8005b2a:	449c      	add	ip, r3
 8005b2c:	ed87 2a00 	vstr	s4, [r7]
 8005b30:	4418      	add	r0, r3
 8005b32:	ed41 3a01 	vstr	s7, [r1, #-4]
 8005b36:	ed42 2a01 	vstr	s5, [r2, #-4]
 8005b3a:	ed86 7a00 	vstr	s14, [r6]
 8005b3e:	ed87 3a01 	vstr	s6, [r7, #4]
 8005b42:	edc1 4a00 	vstr	s9, [r1]
 8005b46:	441f      	add	r7, r3
 8005b48:	edc2 5a00 	vstr	s11, [r2]
 8005b4c:	4419      	add	r1, r3
 8005b4e:	edc6 6a01 	vstr	s13, [r6, #4]
 8005b52:	441a      	add	r2, r3
 8005b54:	441e      	add	r6, r3
 8005b56:	f63f af44 	bhi.w	80059e2 <arm_radix8_butterfly_f32+0x66>
 8005b5a:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8005b5c:	2907      	cmp	r1, #7
 8005b5e:	4620      	mov	r0, r4
 8005b60:	f240 81e9 	bls.w	8005f36 <arm_radix8_butterfly_f32+0x5ba>
 8005b64:	eb04 0744 	add.w	r7, r4, r4, lsl #1
 8005b68:	193e      	adds	r6, r7, r4
 8005b6a:	1935      	adds	r5, r6, r4
 8005b6c:	9c03      	ldr	r4, [sp, #12]
 8005b6e:	9000      	str	r0, [sp, #0]
 8005b70:	4622      	mov	r2, r4
 8005b72:	3201      	adds	r2, #1
 8005b74:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 8005b78:	9900      	ldr	r1, [sp, #0]
 8005b7a:	1828      	adds	r0, r5, r0
 8005b7c:	eb00 0e01 	add.w	lr, r0, r1
 8005b80:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8005b82:	440a      	add	r2, r1
 8005b84:	eb04 0c01 	add.w	ip, r4, r1
 8005b88:	ea4f 04ce 	mov.w	r4, lr, lsl #3
 8005b8c:	eb0a 0ec2 	add.w	lr, sl, r2, lsl #3
 8005b90:	9a00      	ldr	r2, [sp, #0]
 8005b92:	940f      	str	r4, [sp, #60]	@ 0x3c
 8005b94:	00ed      	lsls	r5, r5, #3
 8005b96:	9511      	str	r5, [sp, #68]	@ 0x44
 8005b98:	00d5      	lsls	r5, r2, #3
 8005b9a:	950d      	str	r5, [sp, #52]	@ 0x34
 8005b9c:	9d01      	ldr	r5, [sp, #4]
 8005b9e:	3508      	adds	r5, #8
 8005ba0:	9516      	str	r5, [sp, #88]	@ 0x58
 8005ba2:	9d02      	ldr	r5, [sp, #8]
 8005ba4:	3508      	adds	r5, #8
 8005ba6:	0114      	lsls	r4, r2, #4
 8005ba8:	9517      	str	r5, [sp, #92]	@ 0x5c
 8005baa:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8005bac:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 8005bae:	940e      	str	r4, [sp, #56]	@ 0x38
 8005bb0:	00c0      	lsls	r0, r0, #3
 8005bb2:	9010      	str	r0, [sp, #64]	@ 0x40
 8005bb4:	18aa      	adds	r2, r5, r2
 8005bb6:	9207      	str	r2, [sp, #28]
 8005bb8:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8005bba:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8005bbc:	18aa      	adds	r2, r5, r2
 8005bbe:	9208      	str	r2, [sp, #32]
 8005bc0:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8005bc2:	18aa      	adds	r2, r5, r2
 8005bc4:	9209      	str	r2, [sp, #36]	@ 0x24
 8005bc6:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 8005bca:	f10e 0204 	add.w	r2, lr, #4
 8005bce:	920a      	str	r2, [sp, #40]	@ 0x28
 8005bd0:	00c9      	lsls	r1, r1, #3
 8005bd2:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8005bd4:	310c      	adds	r1, #12
 8005bd6:	00f6      	lsls	r6, r6, #3
 8005bd8:	ea4f 00cc 	mov.w	r0, ip, lsl #3
 8005bdc:	9114      	str	r1, [sp, #80]	@ 0x50
 8005bde:	18a9      	adds	r1, r5, r2
 8005be0:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8005be2:	9612      	str	r6, [sp, #72]	@ 0x48
 8005be4:	00ff      	lsls	r7, r7, #3
 8005be6:	19ae      	adds	r6, r5, r6
 8005be8:	3008      	adds	r0, #8
 8005bea:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
 8005bee:	9606      	str	r6, [sp, #24]
 8005bf0:	9019      	str	r0, [sp, #100]	@ 0x64
 8005bf2:	18aa      	adds	r2, r5, r2
 8005bf4:	0164      	lsls	r4, r4, #5
 8005bf6:	19ee      	adds	r6, r5, r7
 8005bf8:	f10c 000c 	add.w	r0, ip, #12
 8005bfc:	9713      	str	r7, [sp, #76]	@ 0x4c
 8005bfe:	9604      	str	r6, [sp, #16]
 8005c00:	9015      	str	r0, [sp, #84]	@ 0x54
 8005c02:	9103      	str	r1, [sp, #12]
 8005c04:	9205      	str	r2, [sp, #20]
 8005c06:	f104 0208 	add.w	r2, r4, #8
 8005c0a:	9218      	str	r2, [sp, #96]	@ 0x60
 8005c0c:	f04f 0801 	mov.w	r8, #1
 8005c10:	2200      	movs	r2, #0
 8005c12:	f102 0108 	add.w	r1, r2, #8
 8005c16:	460f      	mov	r7, r1
 8005c18:	910b      	str	r1, [sp, #44]	@ 0x2c
 8005c1a:	9918      	ldr	r1, [sp, #96]	@ 0x60
 8005c1c:	188e      	adds	r6, r1, r2
 8005c1e:	9916      	ldr	r1, [sp, #88]	@ 0x58
 8005c20:	188d      	adds	r5, r1, r2
 8005c22:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 8005c24:	188c      	adds	r4, r1, r2
 8005c26:	9919      	ldr	r1, [sp, #100]	@ 0x64
 8005c28:	1888      	adds	r0, r1, r2
 8005c2a:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8005c2c:	eb01 0c02 	add.w	ip, r1, r2
 8005c30:	9915      	ldr	r1, [sp, #84]	@ 0x54
 8005c32:	440a      	add	r2, r1
 8005c34:	9903      	ldr	r1, [sp, #12]
 8005c36:	edd1 fa00 	vldr	s31, [r1]
 8005c3a:	9905      	ldr	r1, [sp, #20]
 8005c3c:	ed91 fa00 	vldr	s30, [r1]
 8005c40:	9904      	ldr	r1, [sp, #16]
 8005c42:	edd1 ea00 	vldr	s29, [r1]
 8005c46:	9906      	ldr	r1, [sp, #24]
 8005c48:	ed91 ea00 	vldr	s28, [r1]
 8005c4c:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8005c4e:	edd1 da00 	vldr	s27, [r1]
 8005c52:	9908      	ldr	r1, [sp, #32]
 8005c54:	ed91 da00 	vldr	s26, [r1]
 8005c58:	9907      	ldr	r1, [sp, #28]
 8005c5a:	edd1 ca00 	vldr	s25, [r1]
 8005c5e:	9903      	ldr	r1, [sp, #12]
 8005c60:	ed91 ca01 	vldr	s24, [r1, #4]
 8005c64:	9905      	ldr	r1, [sp, #20]
 8005c66:	edd1 ba01 	vldr	s23, [r1, #4]
 8005c6a:	9904      	ldr	r1, [sp, #16]
 8005c6c:	edd1 aa01 	vldr	s21, [r1, #4]
 8005c70:	9906      	ldr	r1, [sp, #24]
 8005c72:	ed91 aa01 	vldr	s20, [r1, #4]
 8005c76:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8005c78:	edd1 7a01 	vldr	s15, [r1, #4]
 8005c7c:	9908      	ldr	r1, [sp, #32]
 8005c7e:	edcd 7a00 	vstr	s15, [sp]
 8005c82:	edd1 7a01 	vldr	s15, [r1, #4]
 8005c86:	9907      	ldr	r1, [sp, #28]
 8005c88:	edcd 7a01 	vstr	s15, [sp, #4]
 8005c8c:	edd1 7a01 	vldr	s15, [r1, #4]
 8005c90:	eb0a 0e07 	add.w	lr, sl, r7
 8005c94:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8005c96:	edcd 7a02 	vstr	s15, [sp, #8]
 8005c9a:	eb0c 010a 	add.w	r1, ip, sl
 8005c9e:	4456      	add	r6, sl
 8005ca0:	4455      	add	r5, sl
 8005ca2:	4454      	add	r4, sl
 8005ca4:	4450      	add	r0, sl
 8005ca6:	4452      	add	r2, sl
 8005ca8:	46c4      	mov	ip, r8
 8005caa:	e001      	b.n	8005cb0 <arm_radix8_butterfly_f32+0x334>
 8005cac:	3f3504f3 	.word	0x3f3504f3
 8005cb0:	ed96 5a00 	vldr	s10, [r6]
 8005cb4:	ed52 9a01 	vldr	s19, [r2, #-4]
 8005cb8:	ed11 6a01 	vldr	s12, [r1, #-4]
 8005cbc:	edd0 7a00 	vldr	s15, [r0]
 8005cc0:	ed17 7a01 	vldr	s14, [r7, #-4]
 8005cc4:	edde 3a00 	vldr	s7, [lr]
 8005cc8:	ed94 3a00 	vldr	s6, [r4]
 8005ccc:	ed95 2a00 	vldr	s4, [r5]
 8005cd0:	ed9e 0a01 	vldr	s0, [lr, #4]
 8005cd4:	ee33 8a85 	vadd.f32	s16, s7, s10
 8005cd8:	ee32 1a06 	vadd.f32	s2, s4, s12
 8005cdc:	ee33 4a29 	vadd.f32	s8, s6, s19
 8005ce0:	ee77 4a87 	vadd.f32	s9, s15, s14
 8005ce4:	ee78 1a04 	vadd.f32	s3, s16, s8
 8005ce8:	ee71 6a24 	vadd.f32	s13, s2, s9
 8005cec:	ee32 2a46 	vsub.f32	s4, s4, s12
 8005cf0:	ee31 6aa6 	vadd.f32	s12, s3, s13
 8005cf4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8005cf8:	ed8e 6a00 	vstr	s12, [lr]
 8005cfc:	edd0 8a01 	vldr	s17, [r0, #4]
 8005d00:	ed95 9a01 	vldr	s18, [r5, #4]
 8005d04:	edd1 2a00 	vldr	s5, [r1]
 8005d08:	ed97 7a00 	vldr	s14, [r7]
 8005d0c:	edd4 0a01 	vldr	s1, [r4, #4]
 8005d10:	ed96 6a01 	vldr	s12, [r6, #4]
 8005d14:	edd2 5a00 	vldr	s11, [r2]
 8005d18:	ee73 3ac5 	vsub.f32	s7, s7, s10
 8005d1c:	ee33 3a69 	vsub.f32	s6, s6, s19
 8005d20:	ee39 5a62 	vsub.f32	s10, s18, s5
 8005d24:	ee78 9ac7 	vsub.f32	s19, s17, s14
 8005d28:	ee38 4a44 	vsub.f32	s8, s16, s8
 8005d2c:	ee38 7a87 	vadd.f32	s14, s17, s14
 8005d30:	ee30 8aa5 	vadd.f32	s16, s1, s11
 8005d34:	ee79 2a22 	vadd.f32	s5, s18, s5
 8005d38:	ee75 8a69 	vsub.f32	s17, s10, s19
 8005d3c:	ee32 9a27 	vadd.f32	s18, s4, s15
 8005d40:	ee35 5a29 	vadd.f32	s10, s10, s19
 8005d44:	ee72 7a67 	vsub.f32	s15, s4, s15
 8005d48:	ee30 2a06 	vadd.f32	s4, s0, s12
 8005d4c:	ee69 9a0b 	vmul.f32	s19, s18, s22
 8005d50:	ee70 5ae5 	vsub.f32	s11, s1, s11
 8005d54:	ee32 9a08 	vadd.f32	s18, s4, s16
 8005d58:	ee68 8a8b 	vmul.f32	s17, s17, s22
 8005d5c:	ee32 2a48 	vsub.f32	s4, s4, s16
 8005d60:	ee71 4a64 	vsub.f32	s9, s2, s9
 8005d64:	ee25 5a0b 	vmul.f32	s10, s10, s22
 8005d68:	ee32 1a87 	vadd.f32	s2, s5, s14
 8005d6c:	ee67 7a8b 	vmul.f32	s15, s15, s22
 8005d70:	ee72 2ac7 	vsub.f32	s5, s5, s14
 8005d74:	ee30 6a46 	vsub.f32	s12, s0, s12
 8005d78:	ee73 0a29 	vadd.f32	s1, s6, s19
 8005d7c:	ee36 0a28 	vadd.f32	s0, s12, s17
 8005d80:	ee33 3a69 	vsub.f32	s6, s6, s19
 8005d84:	ee32 7a64 	vsub.f32	s14, s4, s9
 8005d88:	ee73 9aa7 	vadd.f32	s19, s7, s15
 8005d8c:	ee36 6a68 	vsub.f32	s12, s12, s17
 8005d90:	ee73 7ae7 	vsub.f32	s15, s7, s15
 8005d94:	ee75 8a85 	vadd.f32	s17, s11, s10
 8005d98:	ee74 3a22 	vadd.f32	s7, s8, s5
 8005d9c:	ee35 5ac5 	vsub.f32	s10, s11, s10
 8005da0:	ee71 6ae6 	vsub.f32	s13, s3, s13
 8005da4:	ee79 1a41 	vsub.f32	s3, s18, s2
 8005da8:	ee39 8aa8 	vadd.f32	s16, s19, s17
 8005dac:	ee76 5a43 	vsub.f32	s11, s12, s6
 8005db0:	ee74 2a62 	vsub.f32	s5, s8, s5
 8005db4:	ee72 4a24 	vadd.f32	s9, s4, s9
 8005db8:	ee30 4a60 	vsub.f32	s8, s0, s1
 8005dbc:	ee79 8ae8 	vsub.f32	s17, s19, s17
 8005dc0:	ee30 0a20 	vadd.f32	s0, s0, s1
 8005dc4:	ee77 9a85 	vadd.f32	s19, s15, s10
 8005dc8:	ee36 6a03 	vadd.f32	s12, s12, s6
 8005dcc:	ee77 7ac5 	vsub.f32	s15, s15, s10
 8005dd0:	ee2e 2a21 	vmul.f32	s4, s28, s3
 8005dd4:	ee2e 5a26 	vmul.f32	s10, s28, s13
 8005dd8:	ee6f 0a23 	vmul.f32	s1, s30, s7
 8005ddc:	ee2a 3a21 	vmul.f32	s6, s20, s3
 8005de0:	ee39 1a01 	vadd.f32	s2, s18, s2
 8005de4:	ee6a 6a26 	vmul.f32	s13, s20, s13
 8005de8:	ee2b 9a87 	vmul.f32	s18, s23, s14
 8005dec:	ee6b 3aa3 	vmul.f32	s7, s23, s7
 8005df0:	ee2f 7a07 	vmul.f32	s14, s30, s14
 8005df4:	ee6f 1a84 	vmul.f32	s3, s31, s8
 8005df8:	ee35 3a03 	vadd.f32	s6, s10, s6
 8005dfc:	ee72 6a66 	vsub.f32	s13, s4, s13
 8005e00:	ee2c 5a04 	vmul.f32	s10, s24, s8
 8005e04:	ee2f 2a88 	vmul.f32	s4, s31, s16
 8005e08:	ed9d 4a02 	vldr	s8, [sp, #8]
 8005e0c:	ed8e 1a01 	vstr	s2, [lr, #4]
 8005e10:	ee77 3a63 	vsub.f32	s7, s14, s7
 8005e14:	ee2c 8a08 	vmul.f32	s16, s24, s16
 8005e18:	ed9d 7a01 	vldr	s14, [sp, #4]
 8005e1c:	ed86 3a00 	vstr	s6, [r6]
 8005e20:	ee30 9a89 	vadd.f32	s18, s1, s18
 8005e24:	ee32 2a05 	vadd.f32	s4, s4, s10
 8005e28:	ee6d 0a22 	vmul.f32	s1, s26, s5
 8005e2c:	ee31 8ac8 	vsub.f32	s16, s3, s16
 8005e30:	ee67 2a22 	vmul.f32	s5, s14, s5
 8005e34:	ee64 1a00 	vmul.f32	s3, s8, s0
 8005e38:	ee27 7a24 	vmul.f32	s14, s14, s9
 8005e3c:	ee2c 5aa8 	vmul.f32	s10, s25, s17
 8005e40:	ee6d 4a24 	vmul.f32	s9, s26, s9
 8005e44:	ee64 8a28 	vmul.f32	s17, s8, s17
 8005e48:	ed9d 4a00 	vldr	s8, [sp]
 8005e4c:	edc6 6a01 	vstr	s13, [r6, #4]
 8005e50:	ee74 2ae2 	vsub.f32	s5, s9, s5
 8005e54:	ee6d 4aa9 	vmul.f32	s9, s27, s19
 8005e58:	ee64 9a29 	vmul.f32	s19, s8, s19
 8005e5c:	ee24 4a25 	vmul.f32	s8, s8, s11
 8005e60:	ee30 7a87 	vadd.f32	s14, s1, s14
 8005e64:	ee74 4a84 	vadd.f32	s9, s9, s8
 8005e68:	ee6e 0aa7 	vmul.f32	s1, s29, s15
 8005e6c:	ee2a 4a86 	vmul.f32	s8, s21, s12
 8005e70:	ee2c 0a80 	vmul.f32	s0, s25, s0
 8005e74:	ee6d 5aa5 	vmul.f32	s11, s27, s11
 8005e78:	ee6a 7aa7 	vmul.f32	s15, s21, s15
 8005e7c:	ee2e 6a86 	vmul.f32	s12, s29, s12
 8005e80:	ee75 1a21 	vadd.f32	s3, s10, s3
 8005e84:	ee30 0a68 	vsub.f32	s0, s0, s17
 8005e88:	ee75 9ae9 	vsub.f32	s19, s11, s19
 8005e8c:	ee70 0a84 	vadd.f32	s1, s1, s8
 8005e90:	ee36 6a67 	vsub.f32	s12, s12, s15
 8005e94:	44dc      	add	ip, fp
 8005e96:	45e1      	cmp	r9, ip
 8005e98:	ed84 9a00 	vstr	s18, [r4]
 8005e9c:	edc4 3a01 	vstr	s7, [r4, #4]
 8005ea0:	449e      	add	lr, r3
 8005ea2:	ed02 7a01 	vstr	s14, [r2, #-4]
 8005ea6:	edc2 2a00 	vstr	s5, [r2]
 8005eaa:	441e      	add	r6, r3
 8005eac:	ed85 2a00 	vstr	s4, [r5]
 8005eb0:	ed85 8a01 	vstr	s16, [r5, #4]
 8005eb4:	441c      	add	r4, r3
 8005eb6:	ed47 1a01 	vstr	s3, [r7, #-4]
 8005eba:	ed87 0a00 	vstr	s0, [r7]
 8005ebe:	441a      	add	r2, r3
 8005ec0:	ed41 4a01 	vstr	s9, [r1, #-4]
 8005ec4:	edc1 9a00 	vstr	s19, [r1]
 8005ec8:	441d      	add	r5, r3
 8005eca:	edc0 0a00 	vstr	s1, [r0]
 8005ece:	441f      	add	r7, r3
 8005ed0:	ed80 6a01 	vstr	s12, [r0, #4]
 8005ed4:	4419      	add	r1, r3
 8005ed6:	4418      	add	r0, r3
 8005ed8:	f63f aeea 	bhi.w	8005cb0 <arm_radix8_butterfly_f32+0x334>
 8005edc:	9a03      	ldr	r2, [sp, #12]
 8005ede:	990d      	ldr	r1, [sp, #52]	@ 0x34
 8005ee0:	440a      	add	r2, r1
 8005ee2:	9203      	str	r2, [sp, #12]
 8005ee4:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8005ee6:	9a05      	ldr	r2, [sp, #20]
 8005ee8:	440a      	add	r2, r1
 8005eea:	9205      	str	r2, [sp, #20]
 8005eec:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8005eee:	9a04      	ldr	r2, [sp, #16]
 8005ef0:	440a      	add	r2, r1
 8005ef2:	9204      	str	r2, [sp, #16]
 8005ef4:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8005ef6:	9a06      	ldr	r2, [sp, #24]
 8005ef8:	440a      	add	r2, r1
 8005efa:	9206      	str	r2, [sp, #24]
 8005efc:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8005efe:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8005f00:	440a      	add	r2, r1
 8005f02:	9209      	str	r2, [sp, #36]	@ 0x24
 8005f04:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8005f06:	9a08      	ldr	r2, [sp, #32]
 8005f08:	440a      	add	r2, r1
 8005f0a:	9208      	str	r2, [sp, #32]
 8005f0c:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8005f0e:	9a07      	ldr	r2, [sp, #28]
 8005f10:	440a      	add	r2, r1
 8005f12:	9207      	str	r2, [sp, #28]
 8005f14:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8005f16:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8005f18:	f108 0801 	add.w	r8, r8, #1
 8005f1c:	3208      	adds	r2, #8
 8005f1e:	4588      	cmp	r8, r1
 8005f20:	920a      	str	r2, [sp, #40]	@ 0x28
 8005f22:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8005f24:	f47f ae75 	bne.w	8005c12 <arm_radix8_butterfly_f32+0x296>
 8005f28:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
 8005f2c:	9300      	str	r3, [sp, #0]
 8005f2e:	46c3      	mov	fp, r8
 8005f30:	f8dd e06c 	ldr.w	lr, [sp, #108]	@ 0x6c
 8005f34:	e532      	b.n	800599c <arm_radix8_butterfly_f32+0x20>
 8005f36:	b01d      	add	sp, #116	@ 0x74
 8005f38:	ecbd 8b10 	vpop	{d8-d15}
 8005f3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08005f40 <memset>:
 8005f40:	4402      	add	r2, r0
 8005f42:	4603      	mov	r3, r0
 8005f44:	4293      	cmp	r3, r2
 8005f46:	d100      	bne.n	8005f4a <memset+0xa>
 8005f48:	4770      	bx	lr
 8005f4a:	f803 1b01 	strb.w	r1, [r3], #1
 8005f4e:	e7f9      	b.n	8005f44 <memset+0x4>

08005f50 <__errno>:
 8005f50:	4b01      	ldr	r3, [pc, #4]	@ (8005f58 <__errno+0x8>)
 8005f52:	6818      	ldr	r0, [r3, #0]
 8005f54:	4770      	bx	lr
 8005f56:	bf00      	nop
 8005f58:	20000010 	.word	0x20000010

08005f5c <__libc_init_array>:
 8005f5c:	b570      	push	{r4, r5, r6, lr}
 8005f5e:	4d0d      	ldr	r5, [pc, #52]	@ (8005f94 <__libc_init_array+0x38>)
 8005f60:	4c0d      	ldr	r4, [pc, #52]	@ (8005f98 <__libc_init_array+0x3c>)
 8005f62:	1b64      	subs	r4, r4, r5
 8005f64:	10a4      	asrs	r4, r4, #2
 8005f66:	2600      	movs	r6, #0
 8005f68:	42a6      	cmp	r6, r4
 8005f6a:	d109      	bne.n	8005f80 <__libc_init_array+0x24>
 8005f6c:	4d0b      	ldr	r5, [pc, #44]	@ (8005f9c <__libc_init_array+0x40>)
 8005f6e:	4c0c      	ldr	r4, [pc, #48]	@ (8005fa0 <__libc_init_array+0x44>)
 8005f70:	f000 fd6a 	bl	8006a48 <_init>
 8005f74:	1b64      	subs	r4, r4, r5
 8005f76:	10a4      	asrs	r4, r4, #2
 8005f78:	2600      	movs	r6, #0
 8005f7a:	42a6      	cmp	r6, r4
 8005f7c:	d105      	bne.n	8005f8a <__libc_init_array+0x2e>
 8005f7e:	bd70      	pop	{r4, r5, r6, pc}
 8005f80:	f855 3b04 	ldr.w	r3, [r5], #4
 8005f84:	4798      	blx	r3
 8005f86:	3601      	adds	r6, #1
 8005f88:	e7ee      	b.n	8005f68 <__libc_init_array+0xc>
 8005f8a:	f855 3b04 	ldr.w	r3, [r5], #4
 8005f8e:	4798      	blx	r3
 8005f90:	3601      	adds	r6, #1
 8005f92:	e7f2      	b.n	8005f7a <__libc_init_array+0x1e>
 8005f94:	0801a2a8 	.word	0x0801a2a8
 8005f98:	0801a2a8 	.word	0x0801a2a8
 8005f9c:	0801a2a8 	.word	0x0801a2a8
 8005fa0:	0801a2ac 	.word	0x0801a2ac

08005fa4 <sqrtf>:
 8005fa4:	b508      	push	{r3, lr}
 8005fa6:	ed2d 8b02 	vpush	{d8}
 8005faa:	eeb0 8a40 	vmov.f32	s16, s0
 8005fae:	f000 f85d 	bl	800606c <__ieee754_sqrtf>
 8005fb2:	eeb4 8a48 	vcmp.f32	s16, s16
 8005fb6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005fba:	d60c      	bvs.n	8005fd6 <sqrtf+0x32>
 8005fbc:	eddf 8a07 	vldr	s17, [pc, #28]	@ 8005fdc <sqrtf+0x38>
 8005fc0:	eeb4 8ae8 	vcmpe.f32	s16, s17
 8005fc4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005fc8:	d505      	bpl.n	8005fd6 <sqrtf+0x32>
 8005fca:	f7ff ffc1 	bl	8005f50 <__errno>
 8005fce:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 8005fd2:	2321      	movs	r3, #33	@ 0x21
 8005fd4:	6003      	str	r3, [r0, #0]
 8005fd6:	ecbd 8b02 	vpop	{d8}
 8005fda:	bd08      	pop	{r3, pc}
 8005fdc:	00000000 	.word	0x00000000

08005fe0 <sinf>:
 8005fe0:	ee10 3a10 	vmov	r3, s0
 8005fe4:	b507      	push	{r0, r1, r2, lr}
 8005fe6:	4a1f      	ldr	r2, [pc, #124]	@ (8006064 <sinf+0x84>)
 8005fe8:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8005fec:	4293      	cmp	r3, r2
 8005fee:	d807      	bhi.n	8006000 <sinf+0x20>
 8005ff0:	eddf 0a1d 	vldr	s1, [pc, #116]	@ 8006068 <sinf+0x88>
 8005ff4:	2000      	movs	r0, #0
 8005ff6:	b003      	add	sp, #12
 8005ff8:	f85d eb04 	ldr.w	lr, [sp], #4
 8005ffc:	f000 b892 	b.w	8006124 <__kernel_sinf>
 8006000:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8006004:	d304      	bcc.n	8006010 <sinf+0x30>
 8006006:	ee30 0a40 	vsub.f32	s0, s0, s0
 800600a:	b003      	add	sp, #12
 800600c:	f85d fb04 	ldr.w	pc, [sp], #4
 8006010:	4668      	mov	r0, sp
 8006012:	f000 f8cf 	bl	80061b4 <__ieee754_rem_pio2f>
 8006016:	f000 0003 	and.w	r0, r0, #3
 800601a:	2801      	cmp	r0, #1
 800601c:	d00a      	beq.n	8006034 <sinf+0x54>
 800601e:	2802      	cmp	r0, #2
 8006020:	d00f      	beq.n	8006042 <sinf+0x62>
 8006022:	b9c0      	cbnz	r0, 8006056 <sinf+0x76>
 8006024:	eddd 0a01 	vldr	s1, [sp, #4]
 8006028:	ed9d 0a00 	vldr	s0, [sp]
 800602c:	2001      	movs	r0, #1
 800602e:	f000 f879 	bl	8006124 <__kernel_sinf>
 8006032:	e7ea      	b.n	800600a <sinf+0x2a>
 8006034:	eddd 0a01 	vldr	s1, [sp, #4]
 8006038:	ed9d 0a00 	vldr	s0, [sp]
 800603c:	f000 f81a 	bl	8006074 <__kernel_cosf>
 8006040:	e7e3      	b.n	800600a <sinf+0x2a>
 8006042:	eddd 0a01 	vldr	s1, [sp, #4]
 8006046:	ed9d 0a00 	vldr	s0, [sp]
 800604a:	2001      	movs	r0, #1
 800604c:	f000 f86a 	bl	8006124 <__kernel_sinf>
 8006050:	eeb1 0a40 	vneg.f32	s0, s0
 8006054:	e7d9      	b.n	800600a <sinf+0x2a>
 8006056:	eddd 0a01 	vldr	s1, [sp, #4]
 800605a:	ed9d 0a00 	vldr	s0, [sp]
 800605e:	f000 f809 	bl	8006074 <__kernel_cosf>
 8006062:	e7f5      	b.n	8006050 <sinf+0x70>
 8006064:	3f490fd8 	.word	0x3f490fd8
 8006068:	00000000 	.word	0x00000000

0800606c <__ieee754_sqrtf>:
 800606c:	eeb1 0ac0 	vsqrt.f32	s0, s0
 8006070:	4770      	bx	lr
	...

08006074 <__kernel_cosf>:
 8006074:	ee10 3a10 	vmov	r3, s0
 8006078:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 800607c:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 8006080:	eef0 6a40 	vmov.f32	s13, s0
 8006084:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8006088:	d204      	bcs.n	8006094 <__kernel_cosf+0x20>
 800608a:	eefd 7ae6 	vcvt.s32.f32	s15, s13
 800608e:	ee17 2a90 	vmov	r2, s15
 8006092:	b342      	cbz	r2, 80060e6 <__kernel_cosf+0x72>
 8006094:	ee26 7aa6 	vmul.f32	s14, s13, s13
 8006098:	eddf 7a1a 	vldr	s15, [pc, #104]	@ 8006104 <__kernel_cosf+0x90>
 800609c:	ed9f 6a1a 	vldr	s12, [pc, #104]	@ 8006108 <__kernel_cosf+0x94>
 80060a0:	4a1a      	ldr	r2, [pc, #104]	@ (800610c <__kernel_cosf+0x98>)
 80060a2:	eea7 6a27 	vfma.f32	s12, s14, s15
 80060a6:	4293      	cmp	r3, r2
 80060a8:	eddf 7a19 	vldr	s15, [pc, #100]	@ 8006110 <__kernel_cosf+0x9c>
 80060ac:	eee6 7a07 	vfma.f32	s15, s12, s14
 80060b0:	ed9f 6a18 	vldr	s12, [pc, #96]	@ 8006114 <__kernel_cosf+0xa0>
 80060b4:	eea7 6a87 	vfma.f32	s12, s15, s14
 80060b8:	eddf 7a17 	vldr	s15, [pc, #92]	@ 8006118 <__kernel_cosf+0xa4>
 80060bc:	eee6 7a07 	vfma.f32	s15, s12, s14
 80060c0:	ed9f 6a16 	vldr	s12, [pc, #88]	@ 800611c <__kernel_cosf+0xa8>
 80060c4:	eea7 6a87 	vfma.f32	s12, s15, s14
 80060c8:	ee60 0ae6 	vnmul.f32	s1, s1, s13
 80060cc:	ee26 6a07 	vmul.f32	s12, s12, s14
 80060d0:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 80060d4:	eee7 0a06 	vfma.f32	s1, s14, s12
 80060d8:	ee67 7a27 	vmul.f32	s15, s14, s15
 80060dc:	d804      	bhi.n	80060e8 <__kernel_cosf+0x74>
 80060de:	ee77 7ae0 	vsub.f32	s15, s15, s1
 80060e2:	ee30 0a67 	vsub.f32	s0, s0, s15
 80060e6:	4770      	bx	lr
 80060e8:	4a0d      	ldr	r2, [pc, #52]	@ (8006120 <__kernel_cosf+0xac>)
 80060ea:	4293      	cmp	r3, r2
 80060ec:	bf9a      	itte	ls
 80060ee:	f103 437f 	addls.w	r3, r3, #4278190080	@ 0xff000000
 80060f2:	ee07 3a10 	vmovls	s14, r3
 80060f6:	eeb5 7a02 	vmovhi.f32	s14, #82	@ 0x3e900000  0.2812500
 80060fa:	ee30 0a47 	vsub.f32	s0, s0, s14
 80060fe:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8006102:	e7ec      	b.n	80060de <__kernel_cosf+0x6a>
 8006104:	ad47d74e 	.word	0xad47d74e
 8006108:	310f74f6 	.word	0x310f74f6
 800610c:	3e999999 	.word	0x3e999999
 8006110:	b493f27c 	.word	0xb493f27c
 8006114:	37d00d01 	.word	0x37d00d01
 8006118:	bab60b61 	.word	0xbab60b61
 800611c:	3d2aaaab 	.word	0x3d2aaaab
 8006120:	3f480000 	.word	0x3f480000

08006124 <__kernel_sinf>:
 8006124:	ee10 3a10 	vmov	r3, s0
 8006128:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 800612c:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 8006130:	d204      	bcs.n	800613c <__kernel_sinf+0x18>
 8006132:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8006136:	ee17 3a90 	vmov	r3, s15
 800613a:	b35b      	cbz	r3, 8006194 <__kernel_sinf+0x70>
 800613c:	ee20 7a00 	vmul.f32	s14, s0, s0
 8006140:	eddf 7a15 	vldr	s15, [pc, #84]	@ 8006198 <__kernel_sinf+0x74>
 8006144:	ed9f 6a15 	vldr	s12, [pc, #84]	@ 800619c <__kernel_sinf+0x78>
 8006148:	eea7 6a27 	vfma.f32	s12, s14, s15
 800614c:	eddf 7a14 	vldr	s15, [pc, #80]	@ 80061a0 <__kernel_sinf+0x7c>
 8006150:	eee6 7a07 	vfma.f32	s15, s12, s14
 8006154:	ed9f 6a13 	vldr	s12, [pc, #76]	@ 80061a4 <__kernel_sinf+0x80>
 8006158:	eea7 6a87 	vfma.f32	s12, s15, s14
 800615c:	eddf 7a12 	vldr	s15, [pc, #72]	@ 80061a8 <__kernel_sinf+0x84>
 8006160:	ee60 6a07 	vmul.f32	s13, s0, s14
 8006164:	eee6 7a07 	vfma.f32	s15, s12, s14
 8006168:	b930      	cbnz	r0, 8006178 <__kernel_sinf+0x54>
 800616a:	ed9f 6a10 	vldr	s12, [pc, #64]	@ 80061ac <__kernel_sinf+0x88>
 800616e:	eea7 6a27 	vfma.f32	s12, s14, s15
 8006172:	eea6 0a26 	vfma.f32	s0, s12, s13
 8006176:	4770      	bx	lr
 8006178:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 800617c:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 8006180:	eee0 7a86 	vfma.f32	s15, s1, s12
 8006184:	eed7 0a87 	vfnms.f32	s1, s15, s14
 8006188:	eddf 7a09 	vldr	s15, [pc, #36]	@ 80061b0 <__kernel_sinf+0x8c>
 800618c:	eee6 0aa7 	vfma.f32	s1, s13, s15
 8006190:	ee30 0a60 	vsub.f32	s0, s0, s1
 8006194:	4770      	bx	lr
 8006196:	bf00      	nop
 8006198:	2f2ec9d3 	.word	0x2f2ec9d3
 800619c:	b2d72f34 	.word	0xb2d72f34
 80061a0:	3638ef1b 	.word	0x3638ef1b
 80061a4:	b9500d01 	.word	0xb9500d01
 80061a8:	3c088889 	.word	0x3c088889
 80061ac:	be2aaaab 	.word	0xbe2aaaab
 80061b0:	3e2aaaab 	.word	0x3e2aaaab

080061b4 <__ieee754_rem_pio2f>:
 80061b4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80061b6:	ee10 6a10 	vmov	r6, s0
 80061ba:	4b88      	ldr	r3, [pc, #544]	@ (80063dc <__ieee754_rem_pio2f+0x228>)
 80061bc:	f026 4500 	bic.w	r5, r6, #2147483648	@ 0x80000000
 80061c0:	429d      	cmp	r5, r3
 80061c2:	b087      	sub	sp, #28
 80061c4:	4604      	mov	r4, r0
 80061c6:	d805      	bhi.n	80061d4 <__ieee754_rem_pio2f+0x20>
 80061c8:	2300      	movs	r3, #0
 80061ca:	ed80 0a00 	vstr	s0, [r0]
 80061ce:	6043      	str	r3, [r0, #4]
 80061d0:	2000      	movs	r0, #0
 80061d2:	e022      	b.n	800621a <__ieee754_rem_pio2f+0x66>
 80061d4:	4b82      	ldr	r3, [pc, #520]	@ (80063e0 <__ieee754_rem_pio2f+0x22c>)
 80061d6:	429d      	cmp	r5, r3
 80061d8:	d83a      	bhi.n	8006250 <__ieee754_rem_pio2f+0x9c>
 80061da:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 80061de:	2e00      	cmp	r6, #0
 80061e0:	ed9f 7a80 	vldr	s14, [pc, #512]	@ 80063e4 <__ieee754_rem_pio2f+0x230>
 80061e4:	4a80      	ldr	r2, [pc, #512]	@ (80063e8 <__ieee754_rem_pio2f+0x234>)
 80061e6:	f023 030f 	bic.w	r3, r3, #15
 80061ea:	dd18      	ble.n	800621e <__ieee754_rem_pio2f+0x6a>
 80061ec:	4293      	cmp	r3, r2
 80061ee:	ee70 7a47 	vsub.f32	s15, s0, s14
 80061f2:	bf09      	itett	eq
 80061f4:	ed9f 7a7d 	vldreq	s14, [pc, #500]	@ 80063ec <__ieee754_rem_pio2f+0x238>
 80061f8:	eddf 6a7d 	vldrne	s13, [pc, #500]	@ 80063f0 <__ieee754_rem_pio2f+0x23c>
 80061fc:	eddf 6a7d 	vldreq	s13, [pc, #500]	@ 80063f4 <__ieee754_rem_pio2f+0x240>
 8006200:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 8006204:	ee37 7ae6 	vsub.f32	s14, s15, s13
 8006208:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800620c:	ed80 7a00 	vstr	s14, [r0]
 8006210:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8006214:	edc0 7a01 	vstr	s15, [r0, #4]
 8006218:	2001      	movs	r0, #1
 800621a:	b007      	add	sp, #28
 800621c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800621e:	4293      	cmp	r3, r2
 8006220:	ee70 7a07 	vadd.f32	s15, s0, s14
 8006224:	bf09      	itett	eq
 8006226:	ed9f 7a71 	vldreq	s14, [pc, #452]	@ 80063ec <__ieee754_rem_pio2f+0x238>
 800622a:	eddf 6a71 	vldrne	s13, [pc, #452]	@ 80063f0 <__ieee754_rem_pio2f+0x23c>
 800622e:	eddf 6a71 	vldreq	s13, [pc, #452]	@ 80063f4 <__ieee754_rem_pio2f+0x240>
 8006232:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 8006236:	ee37 7aa6 	vadd.f32	s14, s15, s13
 800623a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800623e:	ed80 7a00 	vstr	s14, [r0]
 8006242:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006246:	edc0 7a01 	vstr	s15, [r0, #4]
 800624a:	f04f 30ff 	mov.w	r0, #4294967295
 800624e:	e7e4      	b.n	800621a <__ieee754_rem_pio2f+0x66>
 8006250:	4b69      	ldr	r3, [pc, #420]	@ (80063f8 <__ieee754_rem_pio2f+0x244>)
 8006252:	429d      	cmp	r5, r3
 8006254:	d873      	bhi.n	800633e <__ieee754_rem_pio2f+0x18a>
 8006256:	f000 f8dd 	bl	8006414 <fabsf>
 800625a:	ed9f 7a68 	vldr	s14, [pc, #416]	@ 80063fc <__ieee754_rem_pio2f+0x248>
 800625e:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8006262:	eee0 7a07 	vfma.f32	s15, s0, s14
 8006266:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800626a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800626e:	ee17 0a90 	vmov	r0, s15
 8006272:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 80063e4 <__ieee754_rem_pio2f+0x230>
 8006276:	eea7 0a67 	vfms.f32	s0, s14, s15
 800627a:	281f      	cmp	r0, #31
 800627c:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 80063f0 <__ieee754_rem_pio2f+0x23c>
 8006280:	ee67 7a27 	vmul.f32	s15, s14, s15
 8006284:	eeb1 6a47 	vneg.f32	s12, s14
 8006288:	ee70 6a67 	vsub.f32	s13, s0, s15
 800628c:	ee16 1a90 	vmov	r1, s13
 8006290:	dc09      	bgt.n	80062a6 <__ieee754_rem_pio2f+0xf2>
 8006292:	4a5b      	ldr	r2, [pc, #364]	@ (8006400 <__ieee754_rem_pio2f+0x24c>)
 8006294:	1e47      	subs	r7, r0, #1
 8006296:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 800629a:	f852 2027 	ldr.w	r2, [r2, r7, lsl #2]
 800629e:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 80062a2:	4293      	cmp	r3, r2
 80062a4:	d107      	bne.n	80062b6 <__ieee754_rem_pio2f+0x102>
 80062a6:	f3c1 52c7 	ubfx	r2, r1, #23, #8
 80062aa:	ebc2 52d5 	rsb	r2, r2, r5, lsr #23
 80062ae:	2a08      	cmp	r2, #8
 80062b0:	ea4f 53e5 	mov.w	r3, r5, asr #23
 80062b4:	dc14      	bgt.n	80062e0 <__ieee754_rem_pio2f+0x12c>
 80062b6:	6021      	str	r1, [r4, #0]
 80062b8:	ed94 7a00 	vldr	s14, [r4]
 80062bc:	ee30 0a47 	vsub.f32	s0, s0, s14
 80062c0:	2e00      	cmp	r6, #0
 80062c2:	ee30 0a67 	vsub.f32	s0, s0, s15
 80062c6:	ed84 0a01 	vstr	s0, [r4, #4]
 80062ca:	daa6      	bge.n	800621a <__ieee754_rem_pio2f+0x66>
 80062cc:	eeb1 7a47 	vneg.f32	s14, s14
 80062d0:	eeb1 0a40 	vneg.f32	s0, s0
 80062d4:	ed84 7a00 	vstr	s14, [r4]
 80062d8:	ed84 0a01 	vstr	s0, [r4, #4]
 80062dc:	4240      	negs	r0, r0
 80062de:	e79c      	b.n	800621a <__ieee754_rem_pio2f+0x66>
 80062e0:	eddf 5a42 	vldr	s11, [pc, #264]	@ 80063ec <__ieee754_rem_pio2f+0x238>
 80062e4:	eef0 6a40 	vmov.f32	s13, s0
 80062e8:	eee6 6a25 	vfma.f32	s13, s12, s11
 80062ec:	ee70 7a66 	vsub.f32	s15, s0, s13
 80062f0:	eee6 7a25 	vfma.f32	s15, s12, s11
 80062f4:	eddf 5a3f 	vldr	s11, [pc, #252]	@ 80063f4 <__ieee754_rem_pio2f+0x240>
 80062f8:	eed7 7a25 	vfnms.f32	s15, s14, s11
 80062fc:	ee76 5ae7 	vsub.f32	s11, s13, s15
 8006300:	ee15 2a90 	vmov	r2, s11
 8006304:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 8006308:	1a5b      	subs	r3, r3, r1
 800630a:	2b19      	cmp	r3, #25
 800630c:	dc04      	bgt.n	8006318 <__ieee754_rem_pio2f+0x164>
 800630e:	edc4 5a00 	vstr	s11, [r4]
 8006312:	eeb0 0a66 	vmov.f32	s0, s13
 8006316:	e7cf      	b.n	80062b8 <__ieee754_rem_pio2f+0x104>
 8006318:	eddf 5a3a 	vldr	s11, [pc, #232]	@ 8006404 <__ieee754_rem_pio2f+0x250>
 800631c:	eeb0 0a66 	vmov.f32	s0, s13
 8006320:	eea6 0a25 	vfma.f32	s0, s12, s11
 8006324:	ee76 7ac0 	vsub.f32	s15, s13, s0
 8006328:	eddf 6a37 	vldr	s13, [pc, #220]	@ 8006408 <__ieee754_rem_pio2f+0x254>
 800632c:	eee6 7a25 	vfma.f32	s15, s12, s11
 8006330:	eed7 7a26 	vfnms.f32	s15, s14, s13
 8006334:	ee30 7a67 	vsub.f32	s14, s0, s15
 8006338:	ed84 7a00 	vstr	s14, [r4]
 800633c:	e7bc      	b.n	80062b8 <__ieee754_rem_pio2f+0x104>
 800633e:	f1b5 4fff 	cmp.w	r5, #2139095040	@ 0x7f800000
 8006342:	d306      	bcc.n	8006352 <__ieee754_rem_pio2f+0x19e>
 8006344:	ee70 7a40 	vsub.f32	s15, s0, s0
 8006348:	edc0 7a01 	vstr	s15, [r0, #4]
 800634c:	edc0 7a00 	vstr	s15, [r0]
 8006350:	e73e      	b.n	80061d0 <__ieee754_rem_pio2f+0x1c>
 8006352:	15ea      	asrs	r2, r5, #23
 8006354:	3a86      	subs	r2, #134	@ 0x86
 8006356:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 800635a:	ee07 3a90 	vmov	s15, r3
 800635e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8006362:	eddf 6a2a 	vldr	s13, [pc, #168]	@ 800640c <__ieee754_rem_pio2f+0x258>
 8006366:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800636a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800636e:	ed8d 7a03 	vstr	s14, [sp, #12]
 8006372:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8006376:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800637a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800637e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8006382:	ed8d 7a04 	vstr	s14, [sp, #16]
 8006386:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800638a:	eef5 7a40 	vcmp.f32	s15, #0.0
 800638e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006392:	edcd 7a05 	vstr	s15, [sp, #20]
 8006396:	d11e      	bne.n	80063d6 <__ieee754_rem_pio2f+0x222>
 8006398:	eeb5 7a40 	vcmp.f32	s14, #0.0
 800639c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80063a0:	bf0c      	ite	eq
 80063a2:	2301      	moveq	r3, #1
 80063a4:	2302      	movne	r3, #2
 80063a6:	491a      	ldr	r1, [pc, #104]	@ (8006410 <__ieee754_rem_pio2f+0x25c>)
 80063a8:	9101      	str	r1, [sp, #4]
 80063aa:	2102      	movs	r1, #2
 80063ac:	9100      	str	r1, [sp, #0]
 80063ae:	a803      	add	r0, sp, #12
 80063b0:	4621      	mov	r1, r4
 80063b2:	f000 f837 	bl	8006424 <__kernel_rem_pio2f>
 80063b6:	2e00      	cmp	r6, #0
 80063b8:	f6bf af2f 	bge.w	800621a <__ieee754_rem_pio2f+0x66>
 80063bc:	edd4 7a00 	vldr	s15, [r4]
 80063c0:	eef1 7a67 	vneg.f32	s15, s15
 80063c4:	edc4 7a00 	vstr	s15, [r4]
 80063c8:	edd4 7a01 	vldr	s15, [r4, #4]
 80063cc:	eef1 7a67 	vneg.f32	s15, s15
 80063d0:	edc4 7a01 	vstr	s15, [r4, #4]
 80063d4:	e782      	b.n	80062dc <__ieee754_rem_pio2f+0x128>
 80063d6:	2303      	movs	r3, #3
 80063d8:	e7e5      	b.n	80063a6 <__ieee754_rem_pio2f+0x1f2>
 80063da:	bf00      	nop
 80063dc:	3f490fd8 	.word	0x3f490fd8
 80063e0:	4016cbe3 	.word	0x4016cbe3
 80063e4:	3fc90f80 	.word	0x3fc90f80
 80063e8:	3fc90fd0 	.word	0x3fc90fd0
 80063ec:	37354400 	.word	0x37354400
 80063f0:	37354443 	.word	0x37354443
 80063f4:	2e85a308 	.word	0x2e85a308
 80063f8:	43490f80 	.word	0x43490f80
 80063fc:	3f22f984 	.word	0x3f22f984
 8006400:	08019ed0 	.word	0x08019ed0
 8006404:	2e85a300 	.word	0x2e85a300
 8006408:	248d3132 	.word	0x248d3132
 800640c:	43800000 	.word	0x43800000
 8006410:	08019f50 	.word	0x08019f50

08006414 <fabsf>:
 8006414:	ee10 3a10 	vmov	r3, s0
 8006418:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 800641c:	ee00 3a10 	vmov	s0, r3
 8006420:	4770      	bx	lr
	...

08006424 <__kernel_rem_pio2f>:
 8006424:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006428:	ed2d 8b04 	vpush	{d8-d9}
 800642c:	b0d9      	sub	sp, #356	@ 0x164
 800642e:	4690      	mov	r8, r2
 8006430:	9001      	str	r0, [sp, #4]
 8006432:	4ab6      	ldr	r2, [pc, #728]	@ (800670c <__kernel_rem_pio2f+0x2e8>)
 8006434:	9866      	ldr	r0, [sp, #408]	@ 0x198
 8006436:	f118 0f04 	cmn.w	r8, #4
 800643a:	f852 a020 	ldr.w	sl, [r2, r0, lsl #2]
 800643e:	460f      	mov	r7, r1
 8006440:	f103 3bff 	add.w	fp, r3, #4294967295
 8006444:	db26      	blt.n	8006494 <__kernel_rem_pio2f+0x70>
 8006446:	f1b8 0203 	subs.w	r2, r8, #3
 800644a:	bf48      	it	mi
 800644c:	f108 0204 	addmi.w	r2, r8, #4
 8006450:	10d2      	asrs	r2, r2, #3
 8006452:	1c55      	adds	r5, r2, #1
 8006454:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 8006456:	ed9f 7ab1 	vldr	s14, [pc, #708]	@ 800671c <__kernel_rem_pio2f+0x2f8>
 800645a:	00e8      	lsls	r0, r5, #3
 800645c:	eba2 060b 	sub.w	r6, r2, fp
 8006460:	9002      	str	r0, [sp, #8]
 8006462:	eba8 05c5 	sub.w	r5, r8, r5, lsl #3
 8006466:	eb0a 0c0b 	add.w	ip, sl, fp
 800646a:	ac1c      	add	r4, sp, #112	@ 0x70
 800646c:	eb01 0e86 	add.w	lr, r1, r6, lsl #2
 8006470:	2000      	movs	r0, #0
 8006472:	4560      	cmp	r0, ip
 8006474:	dd10      	ble.n	8006498 <__kernel_rem_pio2f+0x74>
 8006476:	a91c      	add	r1, sp, #112	@ 0x70
 8006478:	eb01 0083 	add.w	r0, r1, r3, lsl #2
 800647c:	f50d 7988 	add.w	r9, sp, #272	@ 0x110
 8006480:	2600      	movs	r6, #0
 8006482:	4556      	cmp	r6, sl
 8006484:	dc24      	bgt.n	80064d0 <__kernel_rem_pio2f+0xac>
 8006486:	f8dd e004 	ldr.w	lr, [sp, #4]
 800648a:	eddf 7aa4 	vldr	s15, [pc, #656]	@ 800671c <__kernel_rem_pio2f+0x2f8>
 800648e:	4684      	mov	ip, r0
 8006490:	2400      	movs	r4, #0
 8006492:	e016      	b.n	80064c2 <__kernel_rem_pio2f+0x9e>
 8006494:	2200      	movs	r2, #0
 8006496:	e7dc      	b.n	8006452 <__kernel_rem_pio2f+0x2e>
 8006498:	42c6      	cmn	r6, r0
 800649a:	bf5d      	ittte	pl
 800649c:	f85e 1020 	ldrpl.w	r1, [lr, r0, lsl #2]
 80064a0:	ee07 1a90 	vmovpl	s15, r1
 80064a4:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 80064a8:	eef0 7a47 	vmovmi.f32	s15, s14
 80064ac:	ece4 7a01 	vstmia	r4!, {s15}
 80064b0:	3001      	adds	r0, #1
 80064b2:	e7de      	b.n	8006472 <__kernel_rem_pio2f+0x4e>
 80064b4:	ecfe 6a01 	vldmia	lr!, {s13}
 80064b8:	ed3c 7a01 	vldmdb	ip!, {s14}
 80064bc:	eee6 7a87 	vfma.f32	s15, s13, s14
 80064c0:	3401      	adds	r4, #1
 80064c2:	455c      	cmp	r4, fp
 80064c4:	ddf6      	ble.n	80064b4 <__kernel_rem_pio2f+0x90>
 80064c6:	ece9 7a01 	vstmia	r9!, {s15}
 80064ca:	3601      	adds	r6, #1
 80064cc:	3004      	adds	r0, #4
 80064ce:	e7d8      	b.n	8006482 <__kernel_rem_pio2f+0x5e>
 80064d0:	a908      	add	r1, sp, #32
 80064d2:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 80064d6:	9104      	str	r1, [sp, #16]
 80064d8:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 80064da:	eddf 8a8f 	vldr	s17, [pc, #572]	@ 8006718 <__kernel_rem_pio2f+0x2f4>
 80064de:	ed9f 9a8d 	vldr	s18, [pc, #564]	@ 8006714 <__kernel_rem_pio2f+0x2f0>
 80064e2:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 80064e6:	9203      	str	r2, [sp, #12]
 80064e8:	4654      	mov	r4, sl
 80064ea:	00a2      	lsls	r2, r4, #2
 80064ec:	9205      	str	r2, [sp, #20]
 80064ee:	aa58      	add	r2, sp, #352	@ 0x160
 80064f0:	eb02 0284 	add.w	r2, r2, r4, lsl #2
 80064f4:	ed12 0a14 	vldr	s0, [r2, #-80]	@ 0xffffffb0
 80064f8:	a944      	add	r1, sp, #272	@ 0x110
 80064fa:	aa08      	add	r2, sp, #32
 80064fc:	eb01 0084 	add.w	r0, r1, r4, lsl #2
 8006500:	4694      	mov	ip, r2
 8006502:	4626      	mov	r6, r4
 8006504:	2e00      	cmp	r6, #0
 8006506:	dc4c      	bgt.n	80065a2 <__kernel_rem_pio2f+0x17e>
 8006508:	4628      	mov	r0, r5
 800650a:	e9cd 2306 	strd	r2, r3, [sp, #24]
 800650e:	f000 f9f1 	bl	80068f4 <scalbnf>
 8006512:	eeb0 8a40 	vmov.f32	s16, s0
 8006516:	eeb4 0a00 	vmov.f32	s0, #64	@ 0x3e000000  0.125
 800651a:	ee28 0a00 	vmul.f32	s0, s16, s0
 800651e:	f000 fa4f 	bl	80069c0 <floorf>
 8006522:	eef2 7a00 	vmov.f32	s15, #32	@ 0x41000000  8.0
 8006526:	eea0 8a67 	vfms.f32	s16, s0, s15
 800652a:	2d00      	cmp	r5, #0
 800652c:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8006530:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 8006534:	ee17 9a90 	vmov	r9, s15
 8006538:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800653c:	ee38 8a67 	vsub.f32	s16, s16, s15
 8006540:	dd41      	ble.n	80065c6 <__kernel_rem_pio2f+0x1a2>
 8006542:	f104 3cff 	add.w	ip, r4, #4294967295
 8006546:	a908      	add	r1, sp, #32
 8006548:	f1c5 0e08 	rsb	lr, r5, #8
 800654c:	f851 602c 	ldr.w	r6, [r1, ip, lsl #2]
 8006550:	fa46 f00e 	asr.w	r0, r6, lr
 8006554:	4481      	add	r9, r0
 8006556:	fa00 f00e 	lsl.w	r0, r0, lr
 800655a:	1a36      	subs	r6, r6, r0
 800655c:	f1c5 0007 	rsb	r0, r5, #7
 8006560:	f841 602c 	str.w	r6, [r1, ip, lsl #2]
 8006564:	4106      	asrs	r6, r0
 8006566:	2e00      	cmp	r6, #0
 8006568:	dd3c      	ble.n	80065e4 <__kernel_rem_pio2f+0x1c0>
 800656a:	f04f 0e00 	mov.w	lr, #0
 800656e:	f109 0901 	add.w	r9, r9, #1
 8006572:	4670      	mov	r0, lr
 8006574:	4574      	cmp	r4, lr
 8006576:	dc68      	bgt.n	800664a <__kernel_rem_pio2f+0x226>
 8006578:	2d00      	cmp	r5, #0
 800657a:	dd03      	ble.n	8006584 <__kernel_rem_pio2f+0x160>
 800657c:	2d01      	cmp	r5, #1
 800657e:	d074      	beq.n	800666a <__kernel_rem_pio2f+0x246>
 8006580:	2d02      	cmp	r5, #2
 8006582:	d07d      	beq.n	8006680 <__kernel_rem_pio2f+0x25c>
 8006584:	2e02      	cmp	r6, #2
 8006586:	d12d      	bne.n	80065e4 <__kernel_rem_pio2f+0x1c0>
 8006588:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 800658c:	ee30 8a48 	vsub.f32	s16, s0, s16
 8006590:	b340      	cbz	r0, 80065e4 <__kernel_rem_pio2f+0x1c0>
 8006592:	4628      	mov	r0, r5
 8006594:	9306      	str	r3, [sp, #24]
 8006596:	f000 f9ad 	bl	80068f4 <scalbnf>
 800659a:	9b06      	ldr	r3, [sp, #24]
 800659c:	ee38 8a40 	vsub.f32	s16, s16, s0
 80065a0:	e020      	b.n	80065e4 <__kernel_rem_pio2f+0x1c0>
 80065a2:	ee60 7a28 	vmul.f32	s15, s0, s17
 80065a6:	3e01      	subs	r6, #1
 80065a8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80065ac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80065b0:	eea7 0ac9 	vfms.f32	s0, s15, s18
 80065b4:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80065b8:	ecac 0a01 	vstmia	ip!, {s0}
 80065bc:	ed30 0a01 	vldmdb	r0!, {s0}
 80065c0:	ee37 0a80 	vadd.f32	s0, s15, s0
 80065c4:	e79e      	b.n	8006504 <__kernel_rem_pio2f+0xe0>
 80065c6:	d105      	bne.n	80065d4 <__kernel_rem_pio2f+0x1b0>
 80065c8:	1e60      	subs	r0, r4, #1
 80065ca:	a908      	add	r1, sp, #32
 80065cc:	f851 6020 	ldr.w	r6, [r1, r0, lsl #2]
 80065d0:	11f6      	asrs	r6, r6, #7
 80065d2:	e7c8      	b.n	8006566 <__kernel_rem_pio2f+0x142>
 80065d4:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 80065d8:	eeb4 8ae7 	vcmpe.f32	s16, s15
 80065dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80065e0:	da31      	bge.n	8006646 <__kernel_rem_pio2f+0x222>
 80065e2:	2600      	movs	r6, #0
 80065e4:	eeb5 8a40 	vcmp.f32	s16, #0.0
 80065e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80065ec:	f040 8098 	bne.w	8006720 <__kernel_rem_pio2f+0x2fc>
 80065f0:	1e60      	subs	r0, r4, #1
 80065f2:	2200      	movs	r2, #0
 80065f4:	4550      	cmp	r0, sl
 80065f6:	da4b      	bge.n	8006690 <__kernel_rem_pio2f+0x26c>
 80065f8:	2a00      	cmp	r2, #0
 80065fa:	d065      	beq.n	80066c8 <__kernel_rem_pio2f+0x2a4>
 80065fc:	3c01      	subs	r4, #1
 80065fe:	ab08      	add	r3, sp, #32
 8006600:	3d08      	subs	r5, #8
 8006602:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 8006606:	2b00      	cmp	r3, #0
 8006608:	d0f8      	beq.n	80065fc <__kernel_rem_pio2f+0x1d8>
 800660a:	4628      	mov	r0, r5
 800660c:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8006610:	f000 f970 	bl	80068f4 <scalbnf>
 8006614:	1c63      	adds	r3, r4, #1
 8006616:	aa44      	add	r2, sp, #272	@ 0x110
 8006618:	ed9f 7a3f 	vldr	s14, [pc, #252]	@ 8006718 <__kernel_rem_pio2f+0x2f4>
 800661c:	0099      	lsls	r1, r3, #2
 800661e:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 8006622:	4623      	mov	r3, r4
 8006624:	2b00      	cmp	r3, #0
 8006626:	f280 80a9 	bge.w	800677c <__kernel_rem_pio2f+0x358>
 800662a:	4623      	mov	r3, r4
 800662c:	2b00      	cmp	r3, #0
 800662e:	f2c0 80c7 	blt.w	80067c0 <__kernel_rem_pio2f+0x39c>
 8006632:	aa44      	add	r2, sp, #272	@ 0x110
 8006634:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 8006638:	f8df c0d4 	ldr.w	ip, [pc, #212]	@ 8006710 <__kernel_rem_pio2f+0x2ec>
 800663c:	eddf 7a37 	vldr	s15, [pc, #220]	@ 800671c <__kernel_rem_pio2f+0x2f8>
 8006640:	2000      	movs	r0, #0
 8006642:	1ae2      	subs	r2, r4, r3
 8006644:	e0b1      	b.n	80067aa <__kernel_rem_pio2f+0x386>
 8006646:	2602      	movs	r6, #2
 8006648:	e78f      	b.n	800656a <__kernel_rem_pio2f+0x146>
 800664a:	f852 1b04 	ldr.w	r1, [r2], #4
 800664e:	b948      	cbnz	r0, 8006664 <__kernel_rem_pio2f+0x240>
 8006650:	b121      	cbz	r1, 800665c <__kernel_rem_pio2f+0x238>
 8006652:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 8006656:	f842 1c04 	str.w	r1, [r2, #-4]
 800665a:	2101      	movs	r1, #1
 800665c:	f10e 0e01 	add.w	lr, lr, #1
 8006660:	4608      	mov	r0, r1
 8006662:	e787      	b.n	8006574 <__kernel_rem_pio2f+0x150>
 8006664:	f1c1 01ff 	rsb	r1, r1, #255	@ 0xff
 8006668:	e7f5      	b.n	8006656 <__kernel_rem_pio2f+0x232>
 800666a:	f104 3cff 	add.w	ip, r4, #4294967295
 800666e:	aa08      	add	r2, sp, #32
 8006670:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 8006674:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 8006678:	a908      	add	r1, sp, #32
 800667a:	f841 202c 	str.w	r2, [r1, ip, lsl #2]
 800667e:	e781      	b.n	8006584 <__kernel_rem_pio2f+0x160>
 8006680:	f104 3cff 	add.w	ip, r4, #4294967295
 8006684:	aa08      	add	r2, sp, #32
 8006686:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 800668a:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 800668e:	e7f3      	b.n	8006678 <__kernel_rem_pio2f+0x254>
 8006690:	a908      	add	r1, sp, #32
 8006692:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
 8006696:	3801      	subs	r0, #1
 8006698:	430a      	orrs	r2, r1
 800669a:	e7ab      	b.n	80065f4 <__kernel_rem_pio2f+0x1d0>
 800669c:	3201      	adds	r2, #1
 800669e:	f850 6d04 	ldr.w	r6, [r0, #-4]!
 80066a2:	2e00      	cmp	r6, #0
 80066a4:	d0fa      	beq.n	800669c <__kernel_rem_pio2f+0x278>
 80066a6:	9905      	ldr	r1, [sp, #20]
 80066a8:	f501 71b0 	add.w	r1, r1, #352	@ 0x160
 80066ac:	eb0d 0001 	add.w	r0, sp, r1
 80066b0:	18e6      	adds	r6, r4, r3
 80066b2:	a91c      	add	r1, sp, #112	@ 0x70
 80066b4:	f104 0c01 	add.w	ip, r4, #1
 80066b8:	384c      	subs	r0, #76	@ 0x4c
 80066ba:	eb01 0686 	add.w	r6, r1, r6, lsl #2
 80066be:	4422      	add	r2, r4
 80066c0:	4562      	cmp	r2, ip
 80066c2:	da04      	bge.n	80066ce <__kernel_rem_pio2f+0x2aa>
 80066c4:	4614      	mov	r4, r2
 80066c6:	e710      	b.n	80064ea <__kernel_rem_pio2f+0xc6>
 80066c8:	9804      	ldr	r0, [sp, #16]
 80066ca:	2201      	movs	r2, #1
 80066cc:	e7e7      	b.n	800669e <__kernel_rem_pio2f+0x27a>
 80066ce:	9903      	ldr	r1, [sp, #12]
 80066d0:	f8dd e004 	ldr.w	lr, [sp, #4]
 80066d4:	f851 102c 	ldr.w	r1, [r1, ip, lsl #2]
 80066d8:	9105      	str	r1, [sp, #20]
 80066da:	ee07 1a90 	vmov	s15, r1
 80066de:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80066e2:	2400      	movs	r4, #0
 80066e4:	ece6 7a01 	vstmia	r6!, {s15}
 80066e8:	eddf 7a0c 	vldr	s15, [pc, #48]	@ 800671c <__kernel_rem_pio2f+0x2f8>
 80066ec:	46b1      	mov	r9, r6
 80066ee:	455c      	cmp	r4, fp
 80066f0:	dd04      	ble.n	80066fc <__kernel_rem_pio2f+0x2d8>
 80066f2:	ece0 7a01 	vstmia	r0!, {s15}
 80066f6:	f10c 0c01 	add.w	ip, ip, #1
 80066fa:	e7e1      	b.n	80066c0 <__kernel_rem_pio2f+0x29c>
 80066fc:	ecfe 6a01 	vldmia	lr!, {s13}
 8006700:	ed39 7a01 	vldmdb	r9!, {s14}
 8006704:	3401      	adds	r4, #1
 8006706:	eee6 7a87 	vfma.f32	s15, s13, s14
 800670a:	e7f0      	b.n	80066ee <__kernel_rem_pio2f+0x2ca>
 800670c:	0801a294 	.word	0x0801a294
 8006710:	0801a268 	.word	0x0801a268
 8006714:	43800000 	.word	0x43800000
 8006718:	3b800000 	.word	0x3b800000
 800671c:	00000000 	.word	0x00000000
 8006720:	9b02      	ldr	r3, [sp, #8]
 8006722:	eeb0 0a48 	vmov.f32	s0, s16
 8006726:	eba3 0008 	sub.w	r0, r3, r8
 800672a:	f000 f8e3 	bl	80068f4 <scalbnf>
 800672e:	ed1f 7a07 	vldr	s14, [pc, #-28]	@ 8006714 <__kernel_rem_pio2f+0x2f0>
 8006732:	eeb4 0ac7 	vcmpe.f32	s0, s14
 8006736:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800673a:	db19      	blt.n	8006770 <__kernel_rem_pio2f+0x34c>
 800673c:	ed5f 7a0a 	vldr	s15, [pc, #-40]	@ 8006718 <__kernel_rem_pio2f+0x2f4>
 8006740:	ee60 7a27 	vmul.f32	s15, s0, s15
 8006744:	aa08      	add	r2, sp, #32
 8006746:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800674a:	3508      	adds	r5, #8
 800674c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006750:	eea7 0ac7 	vfms.f32	s0, s15, s14
 8006754:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006758:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 800675c:	ee10 3a10 	vmov	r3, s0
 8006760:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 8006764:	ee17 3a90 	vmov	r3, s15
 8006768:	3401      	adds	r4, #1
 800676a:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 800676e:	e74c      	b.n	800660a <__kernel_rem_pio2f+0x1e6>
 8006770:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8006774:	aa08      	add	r2, sp, #32
 8006776:	ee10 3a10 	vmov	r3, s0
 800677a:	e7f6      	b.n	800676a <__kernel_rem_pio2f+0x346>
 800677c:	a808      	add	r0, sp, #32
 800677e:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 8006782:	9001      	str	r0, [sp, #4]
 8006784:	ee07 0a90 	vmov	s15, r0
 8006788:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800678c:	3b01      	subs	r3, #1
 800678e:	ee67 7a80 	vmul.f32	s15, s15, s0
 8006792:	ee20 0a07 	vmul.f32	s0, s0, s14
 8006796:	ed62 7a01 	vstmdb	r2!, {s15}
 800679a:	e743      	b.n	8006624 <__kernel_rem_pio2f+0x200>
 800679c:	ecfc 6a01 	vldmia	ip!, {s13}
 80067a0:	ecb5 7a01 	vldmia	r5!, {s14}
 80067a4:	eee6 7a87 	vfma.f32	s15, s13, s14
 80067a8:	3001      	adds	r0, #1
 80067aa:	4550      	cmp	r0, sl
 80067ac:	dc01      	bgt.n	80067b2 <__kernel_rem_pio2f+0x38e>
 80067ae:	4290      	cmp	r0, r2
 80067b0:	ddf4      	ble.n	800679c <__kernel_rem_pio2f+0x378>
 80067b2:	a858      	add	r0, sp, #352	@ 0x160
 80067b4:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 80067b8:	ed42 7a28 	vstr	s15, [r2, #-160]	@ 0xffffff60
 80067bc:	3b01      	subs	r3, #1
 80067be:	e735      	b.n	800662c <__kernel_rem_pio2f+0x208>
 80067c0:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 80067c2:	2b02      	cmp	r3, #2
 80067c4:	dc09      	bgt.n	80067da <__kernel_rem_pio2f+0x3b6>
 80067c6:	2b00      	cmp	r3, #0
 80067c8:	dc27      	bgt.n	800681a <__kernel_rem_pio2f+0x3f6>
 80067ca:	d040      	beq.n	800684e <__kernel_rem_pio2f+0x42a>
 80067cc:	f009 0007 	and.w	r0, r9, #7
 80067d0:	b059      	add	sp, #356	@ 0x164
 80067d2:	ecbd 8b04 	vpop	{d8-d9}
 80067d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80067da:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 80067dc:	2b03      	cmp	r3, #3
 80067de:	d1f5      	bne.n	80067cc <__kernel_rem_pio2f+0x3a8>
 80067e0:	aa30      	add	r2, sp, #192	@ 0xc0
 80067e2:	1f0b      	subs	r3, r1, #4
 80067e4:	4413      	add	r3, r2
 80067e6:	461a      	mov	r2, r3
 80067e8:	4620      	mov	r0, r4
 80067ea:	2800      	cmp	r0, #0
 80067ec:	dc50      	bgt.n	8006890 <__kernel_rem_pio2f+0x46c>
 80067ee:	4622      	mov	r2, r4
 80067f0:	2a01      	cmp	r2, #1
 80067f2:	dc5d      	bgt.n	80068b0 <__kernel_rem_pio2f+0x48c>
 80067f4:	ab30      	add	r3, sp, #192	@ 0xc0
 80067f6:	ed5f 7a37 	vldr	s15, [pc, #-220]	@ 800671c <__kernel_rem_pio2f+0x2f8>
 80067fa:	440b      	add	r3, r1
 80067fc:	2c01      	cmp	r4, #1
 80067fe:	dc67      	bgt.n	80068d0 <__kernel_rem_pio2f+0x4ac>
 8006800:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 8006804:	ed9d 7a31 	vldr	s14, [sp, #196]	@ 0xc4
 8006808:	2e00      	cmp	r6, #0
 800680a:	d167      	bne.n	80068dc <__kernel_rem_pio2f+0x4b8>
 800680c:	edc7 6a00 	vstr	s13, [r7]
 8006810:	ed87 7a01 	vstr	s14, [r7, #4]
 8006814:	edc7 7a02 	vstr	s15, [r7, #8]
 8006818:	e7d8      	b.n	80067cc <__kernel_rem_pio2f+0x3a8>
 800681a:	ab30      	add	r3, sp, #192	@ 0xc0
 800681c:	ed1f 7a41 	vldr	s14, [pc, #-260]	@ 800671c <__kernel_rem_pio2f+0x2f8>
 8006820:	440b      	add	r3, r1
 8006822:	4622      	mov	r2, r4
 8006824:	2a00      	cmp	r2, #0
 8006826:	da24      	bge.n	8006872 <__kernel_rem_pio2f+0x44e>
 8006828:	b34e      	cbz	r6, 800687e <__kernel_rem_pio2f+0x45a>
 800682a:	eef1 7a47 	vneg.f32	s15, s14
 800682e:	edc7 7a00 	vstr	s15, [r7]
 8006832:	eddd 7a30 	vldr	s15, [sp, #192]	@ 0xc0
 8006836:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800683a:	aa31      	add	r2, sp, #196	@ 0xc4
 800683c:	2301      	movs	r3, #1
 800683e:	429c      	cmp	r4, r3
 8006840:	da20      	bge.n	8006884 <__kernel_rem_pio2f+0x460>
 8006842:	b10e      	cbz	r6, 8006848 <__kernel_rem_pio2f+0x424>
 8006844:	eef1 7a67 	vneg.f32	s15, s15
 8006848:	edc7 7a01 	vstr	s15, [r7, #4]
 800684c:	e7be      	b.n	80067cc <__kernel_rem_pio2f+0x3a8>
 800684e:	ab30      	add	r3, sp, #192	@ 0xc0
 8006850:	ed5f 7a4e 	vldr	s15, [pc, #-312]	@ 800671c <__kernel_rem_pio2f+0x2f8>
 8006854:	440b      	add	r3, r1
 8006856:	2c00      	cmp	r4, #0
 8006858:	da05      	bge.n	8006866 <__kernel_rem_pio2f+0x442>
 800685a:	b10e      	cbz	r6, 8006860 <__kernel_rem_pio2f+0x43c>
 800685c:	eef1 7a67 	vneg.f32	s15, s15
 8006860:	edc7 7a00 	vstr	s15, [r7]
 8006864:	e7b2      	b.n	80067cc <__kernel_rem_pio2f+0x3a8>
 8006866:	ed33 7a01 	vldmdb	r3!, {s14}
 800686a:	3c01      	subs	r4, #1
 800686c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006870:	e7f1      	b.n	8006856 <__kernel_rem_pio2f+0x432>
 8006872:	ed73 7a01 	vldmdb	r3!, {s15}
 8006876:	3a01      	subs	r2, #1
 8006878:	ee37 7a27 	vadd.f32	s14, s14, s15
 800687c:	e7d2      	b.n	8006824 <__kernel_rem_pio2f+0x400>
 800687e:	eef0 7a47 	vmov.f32	s15, s14
 8006882:	e7d4      	b.n	800682e <__kernel_rem_pio2f+0x40a>
 8006884:	ecb2 7a01 	vldmia	r2!, {s14}
 8006888:	3301      	adds	r3, #1
 800688a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800688e:	e7d6      	b.n	800683e <__kernel_rem_pio2f+0x41a>
 8006890:	ed72 7a01 	vldmdb	r2!, {s15}
 8006894:	edd2 6a01 	vldr	s13, [r2, #4]
 8006898:	ee37 7aa6 	vadd.f32	s14, s15, s13
 800689c:	3801      	subs	r0, #1
 800689e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80068a2:	ed82 7a00 	vstr	s14, [r2]
 80068a6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80068aa:	edc2 7a01 	vstr	s15, [r2, #4]
 80068ae:	e79c      	b.n	80067ea <__kernel_rem_pio2f+0x3c6>
 80068b0:	ed73 7a01 	vldmdb	r3!, {s15}
 80068b4:	edd3 6a01 	vldr	s13, [r3, #4]
 80068b8:	ee37 7aa6 	vadd.f32	s14, s15, s13
 80068bc:	3a01      	subs	r2, #1
 80068be:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80068c2:	ed83 7a00 	vstr	s14, [r3]
 80068c6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80068ca:	edc3 7a01 	vstr	s15, [r3, #4]
 80068ce:	e78f      	b.n	80067f0 <__kernel_rem_pio2f+0x3cc>
 80068d0:	ed33 7a01 	vldmdb	r3!, {s14}
 80068d4:	3c01      	subs	r4, #1
 80068d6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80068da:	e78f      	b.n	80067fc <__kernel_rem_pio2f+0x3d8>
 80068dc:	eef1 6a66 	vneg.f32	s13, s13
 80068e0:	eeb1 7a47 	vneg.f32	s14, s14
 80068e4:	edc7 6a00 	vstr	s13, [r7]
 80068e8:	ed87 7a01 	vstr	s14, [r7, #4]
 80068ec:	eef1 7a67 	vneg.f32	s15, s15
 80068f0:	e790      	b.n	8006814 <__kernel_rem_pio2f+0x3f0>
 80068f2:	bf00      	nop

080068f4 <scalbnf>:
 80068f4:	ee10 3a10 	vmov	r3, s0
 80068f8:	f033 4200 	bics.w	r2, r3, #2147483648	@ 0x80000000
 80068fc:	d02b      	beq.n	8006956 <scalbnf+0x62>
 80068fe:	f1b2 4fff 	cmp.w	r2, #2139095040	@ 0x7f800000
 8006902:	d302      	bcc.n	800690a <scalbnf+0x16>
 8006904:	ee30 0a00 	vadd.f32	s0, s0, s0
 8006908:	4770      	bx	lr
 800690a:	f013 4fff 	tst.w	r3, #2139095040	@ 0x7f800000
 800690e:	d123      	bne.n	8006958 <scalbnf+0x64>
 8006910:	4b24      	ldr	r3, [pc, #144]	@ (80069a4 <scalbnf+0xb0>)
 8006912:	eddf 7a25 	vldr	s15, [pc, #148]	@ 80069a8 <scalbnf+0xb4>
 8006916:	4298      	cmp	r0, r3
 8006918:	ee20 0a27 	vmul.f32	s0, s0, s15
 800691c:	db17      	blt.n	800694e <scalbnf+0x5a>
 800691e:	ee10 3a10 	vmov	r3, s0
 8006922:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8006926:	3a19      	subs	r2, #25
 8006928:	f24c 3150 	movw	r1, #50000	@ 0xc350
 800692c:	4288      	cmp	r0, r1
 800692e:	dd15      	ble.n	800695c <scalbnf+0x68>
 8006930:	eddf 7a1e 	vldr	s15, [pc, #120]	@ 80069ac <scalbnf+0xb8>
 8006934:	eddf 6a1e 	vldr	s13, [pc, #120]	@ 80069b0 <scalbnf+0xbc>
 8006938:	ee10 3a10 	vmov	r3, s0
 800693c:	eeb0 7a67 	vmov.f32	s14, s15
 8006940:	2b00      	cmp	r3, #0
 8006942:	bfb8      	it	lt
 8006944:	eef0 7a66 	vmovlt.f32	s15, s13
 8006948:	ee27 0a87 	vmul.f32	s0, s15, s14
 800694c:	4770      	bx	lr
 800694e:	eddf 7a19 	vldr	s15, [pc, #100]	@ 80069b4 <scalbnf+0xc0>
 8006952:	ee27 0a80 	vmul.f32	s0, s15, s0
 8006956:	4770      	bx	lr
 8006958:	0dd2      	lsrs	r2, r2, #23
 800695a:	e7e5      	b.n	8006928 <scalbnf+0x34>
 800695c:	4410      	add	r0, r2
 800695e:	28fe      	cmp	r0, #254	@ 0xfe
 8006960:	dce6      	bgt.n	8006930 <scalbnf+0x3c>
 8006962:	2800      	cmp	r0, #0
 8006964:	dd06      	ble.n	8006974 <scalbnf+0x80>
 8006966:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 800696a:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 800696e:	ee00 3a10 	vmov	s0, r3
 8006972:	4770      	bx	lr
 8006974:	f110 0f16 	cmn.w	r0, #22
 8006978:	da09      	bge.n	800698e <scalbnf+0x9a>
 800697a:	eddf 7a0e 	vldr	s15, [pc, #56]	@ 80069b4 <scalbnf+0xc0>
 800697e:	eddf 6a0e 	vldr	s13, [pc, #56]	@ 80069b8 <scalbnf+0xc4>
 8006982:	ee10 3a10 	vmov	r3, s0
 8006986:	eeb0 7a67 	vmov.f32	s14, s15
 800698a:	2b00      	cmp	r3, #0
 800698c:	e7d9      	b.n	8006942 <scalbnf+0x4e>
 800698e:	3019      	adds	r0, #25
 8006990:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 8006994:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 8006998:	ed9f 0a08 	vldr	s0, [pc, #32]	@ 80069bc <scalbnf+0xc8>
 800699c:	ee07 3a90 	vmov	s15, r3
 80069a0:	e7d7      	b.n	8006952 <scalbnf+0x5e>
 80069a2:	bf00      	nop
 80069a4:	ffff3cb0 	.word	0xffff3cb0
 80069a8:	4c000000 	.word	0x4c000000
 80069ac:	7149f2ca 	.word	0x7149f2ca
 80069b0:	f149f2ca 	.word	0xf149f2ca
 80069b4:	0da24260 	.word	0x0da24260
 80069b8:	8da24260 	.word	0x8da24260
 80069bc:	33000000 	.word	0x33000000

080069c0 <floorf>:
 80069c0:	ee10 3a10 	vmov	r3, s0
 80069c4:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 80069c8:	3a7f      	subs	r2, #127	@ 0x7f
 80069ca:	2a16      	cmp	r2, #22
 80069cc:	f023 4100 	bic.w	r1, r3, #2147483648	@ 0x80000000
 80069d0:	dc2b      	bgt.n	8006a2a <floorf+0x6a>
 80069d2:	2a00      	cmp	r2, #0
 80069d4:	da12      	bge.n	80069fc <floorf+0x3c>
 80069d6:	eddf 7a19 	vldr	s15, [pc, #100]	@ 8006a3c <floorf+0x7c>
 80069da:	ee30 0a27 	vadd.f32	s0, s0, s15
 80069de:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80069e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80069e6:	dd06      	ble.n	80069f6 <floorf+0x36>
 80069e8:	2b00      	cmp	r3, #0
 80069ea:	da24      	bge.n	8006a36 <floorf+0x76>
 80069ec:	2900      	cmp	r1, #0
 80069ee:	4b14      	ldr	r3, [pc, #80]	@ (8006a40 <floorf+0x80>)
 80069f0:	bf08      	it	eq
 80069f2:	f04f 4300 	moveq.w	r3, #2147483648	@ 0x80000000
 80069f6:	ee00 3a10 	vmov	s0, r3
 80069fa:	4770      	bx	lr
 80069fc:	4911      	ldr	r1, [pc, #68]	@ (8006a44 <floorf+0x84>)
 80069fe:	4111      	asrs	r1, r2
 8006a00:	420b      	tst	r3, r1
 8006a02:	d0fa      	beq.n	80069fa <floorf+0x3a>
 8006a04:	eddf 7a0d 	vldr	s15, [pc, #52]	@ 8006a3c <floorf+0x7c>
 8006a08:	ee30 0a27 	vadd.f32	s0, s0, s15
 8006a0c:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8006a10:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006a14:	ddef      	ble.n	80069f6 <floorf+0x36>
 8006a16:	2b00      	cmp	r3, #0
 8006a18:	bfbe      	ittt	lt
 8006a1a:	f44f 0000 	movlt.w	r0, #8388608	@ 0x800000
 8006a1e:	fa40 f202 	asrlt.w	r2, r0, r2
 8006a22:	189b      	addlt	r3, r3, r2
 8006a24:	ea23 0301 	bic.w	r3, r3, r1
 8006a28:	e7e5      	b.n	80069f6 <floorf+0x36>
 8006a2a:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 8006a2e:	d3e4      	bcc.n	80069fa <floorf+0x3a>
 8006a30:	ee30 0a00 	vadd.f32	s0, s0, s0
 8006a34:	4770      	bx	lr
 8006a36:	2300      	movs	r3, #0
 8006a38:	e7dd      	b.n	80069f6 <floorf+0x36>
 8006a3a:	bf00      	nop
 8006a3c:	7149f2ca 	.word	0x7149f2ca
 8006a40:	bf800000 	.word	0xbf800000
 8006a44:	007fffff 	.word	0x007fffff

08006a48 <_init>:
 8006a48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006a4a:	bf00      	nop
 8006a4c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006a4e:	bc08      	pop	{r3}
 8006a50:	469e      	mov	lr, r3
 8006a52:	4770      	bx	lr

08006a54 <_fini>:
 8006a54:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006a56:	bf00      	nop
 8006a58:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006a5a:	bc08      	pop	{r3}
 8006a5c:	469e      	mov	lr, r3
 8006a5e:	4770      	bx	lr
